{"version":3,"sources":["components/Editor.tsx","misc/index.ts","components/Controls.tsx","components/ReactPrinter.tsx","components/Step.tsx","components/Box.tsx","components/Evaluator.tsx","components/MacroDefinition.tsx","components/Note.tsx","components/TopBar.tsx","components/EvaluatorSpace.tsx","components/MacroSpace.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Editor","props","expression","caretPosition","onExpression","onEnter","syntaxError","lines","split","length","react_default","a","createElement","className","concat","InputField","onChange","event","target","value","selectionEnd","replace","onKeyDown","shiftKey","key","preventDefault","id","onClick","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","trimStr","str","trim","Controls","onRun","onStop","onStep","onClear","isRunning","ReactPrinter","tree","redex","breakpoints","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","Lambda","context","argument","isBreakpoint","args","type","Beta","broken","Set","name","printMultiLambda","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","identifier","err","return","application","leftClassName","rightClassName","right","Application","left","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","variable","ASTVisitor","Step","addBreakpoint","normal","NormalEvaluator","nextReduction","printer","print","BoxType","Evaluator","bind","__onRun","shouldBreak","_this$props","state","history","updateState","steps","lastReduction","timeoutID","from","to","sequence","fn","result","Array","e","i","mapLeftFromTo","ast","_this$props2","timeout","None","window","setTimeout","_this$props3","breakpoint","find","add","clearTimeout","console","log","perform","_this$props4","_this$props5","clone","toConsumableArray","_this$props6","_this$props7","reduction","Variable","ChurchNumber","has","Macro","PureComponent","MacroDefinition","_props$state","macroName","macroExpression","Note","note","Box","Evaluator_Evaluator","TopBar","onImport","onScreenChange","screen","dehydrated","objectSpread","submittedExpressions","map","dehydrateBox","dehydrate","link","content","data","Blob","URL","createObjectURL","createURL","JSON","stringify","Screen","main","macrolist","href","download","revokeObjectURL","accept","files","file","reader","FileReader","onload","parse","singleLetterVars","macroTable","config","box","tokens","tokenize","lambdaLetters","parseExpression","hydrateBox","hydrate","readAsText","onFiles","htmlFor","EvaluatorSpace","removeExpression","__key","_updateState","_x","apply","arguments","toString","_removeExpression","MacroSpace","removeMacro","entries","builtinMacros","_ref","_ref2","slicedToArray","macroDef","_ref3","_ref4","HANDY_MACROS","FACT","FACCT","FIB","APPEND","LISTGREQ","LISTLESS","LISTGR","LISTEQ","QUICKSORT","INFLIST","REMOVENTH","NTH","LEN","GETNTH","MAP","REDUCE","APPLY","RANGE","LISTCOMPR","MOD","INFIX","App","getSavedMacros","getExpressionFromURL","updateFromURL","_debounce","treshold","timer","_len","_key","debounce","updateURL","_debounce2","update","cancel","cancelUpdate","onSubmit","onRemoveExpression","isMacroDefinition","isNote","updateMacros","onUpdateEvaluationState","onRemoveMacro","addEventListener","editorState","_this$state","_this$state$editorSta","notebooks","setState","pushState","encodeURI","index","splice","_this$state2","activeExpression","_this$state3","_this$state3$editorSt","_expression$split$map","_expression$split$map2","macroState","Date","now","newMacroTable","defineProperty","noteState","substring","evaluationState","exception","decodeURI","location","hash","currentExpr","indexOf","_this$state4","localStorage","getItem","setItem","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c09a0b17.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, SetStateAction, Dispatch, KeyboardEvent } from 'react'\n\nimport './EditorStyle.css'\n\n\ninterface EditorProperties {\n  expression : string\n  caretPosition : number\n  onExpression (newExpression : string, caretPosition : number) : void\n  onEnter () : void\n  syntaxError : Error | null\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const { expression, caretPosition, onExpression, onEnter, syntaxError } : EditorProperties = props\n  const lines : number = expression.split('\\n').length\n  \n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    onExpression(expression, caretPosition)\n  }\n\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if (! event.shiftKey && event.key === 'Enter') {\n      event.preventDefault()\n      onEnter()\n    }\n  }\n\n  return (\n    <div className='editorContainer'>\n      { syntaxError ? `${syntaxError}` : null }\n\n      <div className=\"editor\">      \n        {/* <button id='editorEnter' onClick={ onEnter } >\n          Δ\n        </button> */}\n        <InputField\n          expression={ expression }\n          lines={ lines }\n          caretPosition={ caretPosition }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n        />\n        <i id='editorEnter' className=\"fas fa-plus\" onClick={ onEnter } />\n        </div>\n\n    </div>\n  )\n}\n\ninterface InputProps {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void,\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { expression, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ expression }\n      placeholder='type here'\n      wrap='hard'\n      autoFocus\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n        }\n      } }\n    />\n  )\n}","import { strict } from \"assert\";\n\nexport function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function mapRightFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = to; i >= from; --i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }\n\n  export function mapLeftFromTo(\n    from : number,\n    to : number,\n    sequence : Array<any>,\n    fn : (...args : Array<any>) => any) {\n      const result : Array<any> = new Array(to - from + 1)\n  \n      for (let e = 0, i = from; i <= to; ++i) {\n        result[e++] = fn(sequence[i], i)\n      }\n  \n      return result\n    }\n\nexport function trimStr (str : string) : string {\n  return str.trim()\n}","import React from 'react'\n\nimport './ControlsStyle.css'\n\n\nexport interface ControlsProps {\n  onRun () : void,\n  onStop () : void,\n  onStep () : void,\n  onClear () : void,\n  isRunning : boolean,\n}\n\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    onRun,\n    onStop,\n    onStep,\n    onClear,\n    isRunning,\n  } : ControlsProps = props\n  \n  return (\n    <div id=\"controls\">\n\n      {\n        isRunning ?\n        <i\n          className=\"enabled fas fa-pause\"\n          onClick={ onStop }\n        />\n          :\n        <i\n          className=\"enabled fas fa-forward\"\n          onClick={ onRun }\n        />  \n      }\n\n      {/* <button\n        className='controlButton'\n        \n        disabled={ false }\n      >\n        { isRunning ? 'STOP' : 'RUN' }\n      </button> */}\n      {/* <button className='controlButton' onClick={ onStep } disabled={ isRunning }>STEP</button> */}\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-play\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-play\"\n          onClick={ onStep }\n        />\n      }\n\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-redo-alt\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-redo-alt\"\n          onClick={ onClear }\n        />\n      }\n      {/* <i\n        className=\"fas fa-redo-alt fa-2x\"\n        onClick={ onClear }\n       />\n\n      <button className='controlButton' onClick={ onClear } disabled={ isRunning }>CLEAR</button> */}\n    </div>\n  )\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumber, Expansion, Macro } from \"lambdulus-core\";\n\nimport { Breakpoint } from \"./Evaluator\";\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.body.argument)) {\n        className += ' breakpoint'\n      }\n\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className={ className }\n            onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n          >\n            { lambda.body.argument.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type : Beta, context : lambda, broken : new Set })}\n            }>\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  isBreakpoint (node : AST) : boolean {\n    for (const breakpoint of this.breakpoints) {\n      if (breakpoint.context.identifier === node.identifier) {\n        return true\n      }\n    }\n    return false\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly redex : AST | null,\n    private readonly breakpoints : Array<Breakpoint>,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication(application: Application) : void {\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === application.identifier\n          &&\n        this.redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda(lambda: Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      const acc : JSX.Element = (\n        <span\n          className={ className }\n          onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type: Beta, context: lambda, broken : new Set })}\n            }>\n              λ { ' ' }\n          </span>\n          <span\n            className={ className }\n            onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n          >\n            { args } { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumber(churchNumber: ChurchNumber) : void {\n    let className : string = 'churchnumeral'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === churchNumber.identifier\n          &&\n        this.redex === churchNumber\n      ) {\n        className += ' redex'\n    }\n\n    if (this.isBreakpoint(churchNumber)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : churchNumber, broken : new Set }) }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro(macro: Macro) : void {\n    let className = 'macro'\n\n    if (this.redex !== null && this.redex.identifier === macro.identifier && this.redex === macro) {\n      className += ' redex'\n    }\n\n    if (this.isBreakpoint(macro)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : macro, broken : new Set }) }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}","import React from 'react'\n\nimport { AST, Beta, Expansion, NormalEvaluator } from 'lambdulus-core';\n\nimport './StepStyle.css'\nimport { Breakpoint } from './Evaluator'\nimport ReactPrinter from './ReactPrinter';\n\n\ninterface StepProperties {\n  tree : AST | null\n  breakpoints : Array<Breakpoint>\n  addBreakpoint (breakpoint : Breakpoint) : void\n}\n\nexport default function Step (props : StepProperties) : JSX.Element | null {\n  const { tree, addBreakpoint, breakpoints } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  let redex : AST | null  = null\n  const normal : NormalEvaluator = new NormalEvaluator(tree)\n  \n  if (normal.nextReduction instanceof Beta) {\n    redex = normal.nextReduction.redex\n  }\n  \n  if (normal.nextReduction instanceof Expansion) {\n    redex = normal.nextReduction.target\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, redex, breakpoints)\n\n  return (\n    <span className='step'>\n      { printer.print() }\n    </span>\n  )\n}","import React from 'react'\nimport Evaluator, { EvaluationState } from './Evaluator';\nimport MacroDefinition, { MacroDefinitionState } from './MacroDefinition';\nimport Note, { NoteState } from './Note';\n\n\nexport enum BoxType {\n  expression,\n  macro,\n  note\n}\n\nexport type BoxState = EvaluationState | MacroDefinitionState | NoteState\n\ninterface BoxProperties {\n  state : BoxState\n  // children : JSX.Element\n  updateState (state : BoxState) : void\n  removeExpression() : void\n}\n\nexport default function Box (props : BoxProperties) : JSX.Element {\n  const { state, updateState } : BoxProperties = props\n  const { type } = state\n\n  if (type === BoxType.expression) {\n    return (\n      <div className=''>\n        {/* <div className='evaluationHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Expression added</i>\n        </div> */}\n\n        <Evaluator\n          state={ state as EvaluationState }\n          updateState={ updateState }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.macro) {\n    return (\n      <div className=''>\n        {/* <div className='macroHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Macro defined</i>\n        </div> */}\n        <MacroDefinition state={ state as MacroDefinitionState } />\n      </div>\n    )\n  }\n\n  if (type === BoxType.note) {\n    return (\n      <div className=''>\n        {/* <div className='noteHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Note added</i>\n        </div> */}\n        <Note state={ state as NoteState } />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      I do not know what to do with this yet.\n    </div>\n  )\n}","import React, { PureComponent } from 'react'\n\nimport { AST, ASTReduction, None, NormalEvaluator, Beta, Lambda, Variable, Expansion, ChurchNumber, Macro } from \"lambdulus-core\";\n\nimport './EvaluatorStyle.css'\nimport Controls from './Controls';\nimport Step from './Step';\nimport { mapRightFromTo, mapLeftFromTo } from '../misc'\nimport { BoxType } from './Box';\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n  broken : Set<AST>,\n}\n\nexport interface EvaluationState {\n  __key : string\n  type : BoxType\n  expression : string\n  ast : AST\n  history : Array<AST>\n  steps : number\n  isRunning : boolean\n  lastReduction : ASTReduction | null\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n}\n\nexport interface EvaluationStatePatch {\n  __key? : string\n  type? : BoxType\n  expression? : string\n  ast? : AST\n  history? : Array<AST>\n  steps? : number\n  isRunning? : boolean\n  lastReduction? : ASTReduction | null\n  breakpoints? : Array<Breakpoint>\n  timeoutID? : number | undefined\n  timeout? : number\n}\n\ninterface EvaluationProperties {\n  state : EvaluationState\n  updateState (state : EvaluationStatePatch) : void\n}\n\nexport default class Evaluator extends PureComponent<EvaluationProperties, EvaluationState> {\n  constructor (props : EvaluationProperties) {\n    super(props)\n\n    this.onClear = this.onClear.bind(this)\n    this.onStep = this.onStep.bind(this)\n    this.onRun = this.onRun.bind(this)\n    this.__onRun = this.__onRun.bind(this)\n    this.onStop = this.onStop.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { state, updateState } : EvaluationProperties = this.props\n    const {\n      history,\n      steps,\n      isRunning,\n      lastReduction,\n      breakpoints,\n      timeoutID,\n    } : EvaluationState = state\n\n    return (\n      <div className='box boxEval'>\n        <ul>\n          {\n            mapLeftFromTo(0, history.length - 2, history, (ast, i) =>\n              <li key={ i } className='inactiveStep' >\n                <Step\n                  breakpoints={ breakpoints }\n                  addBreakpoint={ () => {} }\n                  tree={ ast }\n                />\n              </li>)\n          }\n          <li key={history.length - 1} className='activeStep'>\n            <Step\n              breakpoints={ breakpoints }\n              addBreakpoint={ this.addBreakpoint }\n              tree={ history[history.length - 1] }\n            />\n          </li>\n        </ul>\n        <Controls\n          onRun={ this.onRun }\n          onStop={ this.onStop }\n          onStep={ this.onStep }\n          onClear={ this.onClear }\n          isRunning={ isRunning }\n        />\n      </div>\n    )\n  }\n\n  onRun () : void {\n    const { state, updateState, } : EvaluationProperties = this.props\n    const { lastReduction, timeout } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    updateState({\n      isRunning : true,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  __onRun () {\n    const { state, updateState } = this.props\n    let { history, steps, lastReduction, isRunning, breakpoints, timeoutID, timeout } = state\n  \n    if ( ! isRunning) {\n      return\n    }\n    \n    if (lastReduction instanceof None) {\n      updateState({\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // let ast : AST = history[history.length - 1].clone()\n    let ast : AST = history[history.length - 1]\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n    \n    if (normal.nextReduction instanceof None) {\n      history = [ ast ]\n  \n      updateState({\n        history,\n        steps,\n        lastReduction,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // TODO: maybe refactor a little\n    let index : number = 0\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint, id) =>\n        (index = id,\n        this.shouldBreak(breakpoint, normal.nextReduction))\n    )\n  \n    if (breakpoint !== undefined) {\n      if (normal.nextReduction instanceof Expansion) {\n\n        breakpoint.broken.add(normal.nextReduction.target)\n      }\n\n      window.clearTimeout(timeoutID)\n      \n      // breakpoints.splice(index, 1)\n  \n      updateState({\n        isRunning : false,\n        breakpoints,\n        timeoutID : undefined,\n      })\n\n      console.log('NEMENIM AST')\n  \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ast ],\n      steps,\n      lastReduction,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  onStop () : void {\n    const { updateState, state } : EvaluationProperties = this.props\n    const { timeoutID } = state\n  \n    window.clearTimeout(timeoutID)\n  \n    updateState({\n      isRunning : false,\n      timeoutID : undefined\n    })\n  }\n\n  onStep () : void {\n    const { state, updateState } : EvaluationProperties = this.props\n    let { history, steps, lastReduction } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    let ast = history[history.length - 1].clone()\n    // let ast = history[history.length - 1]\n\n    \n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      updateState({\n        lastReduction,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ...history, ast ],\n      steps,\n      lastReduction,\n    })\n  }\n\n  onClear () : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      history : [ state.ast.clone() ],\n      steps : 0,\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n    })\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      breakpoints : [ ...state.breakpoints, breakpoint ],\n    })\n  }\n\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Lambda\n        && reduction.target.identifier === breakpoint.context.body.identifier\n      ) {\n        return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Variable\n        && reduction.redex.left instanceof Lambda\n        && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n        // && ! breakpoint.broken.has(reduction.redex.left.argument)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumber\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof Macro\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n  \n    return false\n  }\n\n\n\n}\n\n\n\n\n// function equalProps (oldProps : EvaluationProperties, newProps : EvaluationProperties) : boolean {\n//   return (\n//     oldProps.state.isRunning === newProps.state.isRunning\n//       &&\n//     oldProps.state.steps === newProps.state.steps\n//       &&\n//     oldProps.state.timeout === newProps.state.timeout\n//   )\n// }\n\n// export default React.memo(Evaluator, equalProps)\n\n// function _Evaluator (props : EvaluationProperties) : JSX.Element {\n//   const {\n//     state,\n//     updateState,\n//   } : EvaluationProperties = props\n//   const {\n//     history,\n//     steps,\n//     // isStepping,\n//     isRunning,\n//     lastReduction,\n//     breakpoints,\n//     timeoutID,\n//   } : EvaluationState = state\n\n//   return (\n//     <div className='box'>\n//       <Controls\n//         onRun={ () => onRun(props) }\n//         onStop={ () => onStop(props) }\n//         onStep={ () => onStep(props) }\n//         onClear={ () => onClear(props) }\n//         isRunning={ isRunning }\n//       />\n\n//       <ul>\n//         <li key={history.length - 1} className='activeStep'>\n//           <Step\n//             addBreakpoint={ (breakpoint : Breakpoint) => addBreakpoint(props, breakpoint) }\n//             tree={ history[history.length - 1] }\n//           />\n//         </li>\n//         {\n//           mapRightFromTo(0, history.length - 2, history, (ast, i) =>\n//             <li key={ i } className='inactiveStep' >\n//               <Step addBreakpoint={ () => {} } tree={ ast } />\n//             </li>)\n//         }\n//       </ul>\n//     </div>\n//   )\n// } ","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface MacroDefinitionState {\n  __key : string\n  type : BoxType\n  macroName : string\n  macroExpression : string\n}\n\nexport interface MacroDefinitionProperties {\n  state : MacroDefinitionState\n}\n\nexport default function MacroDefinition (props : MacroDefinitionProperties) : JSX.Element {\n  const { state : { macroName, macroExpression } } : MacroDefinitionProperties = props\n\n  return (\n    <div className='box boxMacro'>\n      { macroName } := { macroExpression }\n    </div>\n  )\n}","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface NoteState {\n    __key : string\n  type : BoxType\n  note : string\n}\n\nexport interface NoteProperties {\n  state : NoteState\n}\n\nexport default function Note (props : NoteProperties) : JSX.Element {\n  const { state : { note } } : NoteProperties = props\n\n  return (\n    <div className='box boxNote'>\n      { note }\n    </div>\n  )\n}","import React, { ChangeEvent } from 'react'\n\nimport './TopBarStyle.css'\n\nimport { AppState, Screen } from '../App'\nimport { EvaluationState } from './Evaluator';\nimport { AST, BasicPrinter, tokenize, parse, Token, MacroTable, MacroMap } from 'lambdulus-core';\nimport { BoxState, BoxType } from './Box';\n\n\ninterface TopBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n  onScreenChange (screen : Screen) : void\n}\n\nexport default function TopBar (props : TopBarProperties) : JSX.Element {\n  const { state, onImport, onScreenChange } : TopBarProperties = props\n  const { screen } = state\n\n  const dehydrated : object = dehydrate(state)\n\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n        {/* <i className=\"icon fas fa-cog fa-2x\" /> */}\n        <i className=\"icon fas fa-book-open fa-2x\"></i>\n        \n        {\n          screen === Screen.main ?\n            <i className=\"icon fas fa-list-ul fa-2x\" onClick={ () => onScreenChange(Screen.macrolist) } />\n            :\n            <i className=\"icon far fa-window-close fa-2x\" onClick={ () => onScreenChange(Screen.main) } />\n        }\n\n        {/* <i className=\"save icon fas fa-save fa-2x\" /> */}\n      <a\n        className='export icon'\n        href={ link }\n        download=\"notebook_lambdulus.json\"\n        onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n      >\n        <i id='download' className=\"fas fa-cloud-download-alt fa-2x\" />\n      </a>\n      <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n      <label htmlFor=\"input\">Import notebook</label>\n    </div>\n  )\n}\n\nfunction dehydrateBox (box : BoxState) : BoxState {\n\n  // console.log('dehydrate')\n  const { type } : BoxState = box\n\n  if (type === BoxType.expression) {\n\n    // console.log('dehydrate expression')\n    return {\n      ...box,\n      ast : null as any,\n      history : [],\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n      timeoutID : undefined,\n    }\n  }\n\n  // console.log('dehydrate something else')\n\n  return box\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedExpressions : state.submittedExpressions.map(dehydrateBox)\n  }\n}\n\nfunction hydrateBox (box : BoxState, config : Config) : BoxState {\n  const { type } : BoxState = box\n  \n  if (type === BoxType.expression) {\n    const ast : AST = parseExpression((box as EvaluationState).expression, config)\n\n    return {\n      ...box,\n      ast,\n      history : [ ast ],\n    }\n  }\n\n  return box\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  const { singleLetterVars, macroTable } = dehydrated\n  const config = { singleLetterVars, macroTable }\n\n  return {\n    ...dehydrated,\n    submittedExpressions : dehydrated.submittedExpressions.map((box) => hydrateBox(box, config))\n  }\n}\n\ninterface Config {\n  singleLetterVars : boolean\n  macroTable : MacroMap\n}\n\nfunction parseExpression (expression : string, config : Config) : AST {\n  const { singleLetterVars, macroTable } : Config = config\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file)\n\n  \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  // If we are replacing a previously generated file we need to\n  // manually revoke the object URL to avoid memory leaks.\n  // if (textFile !== null) {\n  //   window.URL.revokeObjectURL(textFile);\n  // }\n\n  return window.URL.createObjectURL(data);\n}","import React from 'react'\nimport Box, { BoxState } from './Box';\nimport { EvaluationState } from './Evaluator';\n\n\nexport interface EvaluatorProperties {\n  submittedExpressions : Array<BoxState>\n  updateState (state : BoxState, index : number) : void\n  removeExpression (index : number) : void\n}\n\nexport default function EvaluatorSpace (props: EvaluatorProperties) : JSX.Element {\n  const { submittedExpressions, updateState, removeExpression } = props\n\n  return (\n    <div className='evaluatorSpace'>\n      {\n        submittedExpressions.length ?\n          <ul>\n            { submittedExpressions.map((state : BoxState, i : number) =>\n              <li key={ state.__key }>\n                <Box\n                  state={ state }\n                  updateState={ (state : EvaluationState) => updateState(state, i) }\n                  removeExpression={ () => removeExpression(i) }\n                />\n              </li>\n              ) }\n          </ul>\n          :\n          null\n      }\n    </div>\n  )\n}","import React from 'react'\nimport { MacroMap, builtinMacros } from 'lambdulus-core';\n\n\nexport interface MacroProperties {\n  macroTable : MacroMap\n  removeMacro (name : string) : void\n}\n\nexport default function MacroSpace (props : MacroProperties) : JSX.Element {\n  const { macroTable, removeMacro } = props\n\n  return (\n    <div className='macroSpace'>\n      <p>Built-in Macros</p>\n      <ul>\n        { Object.entries(builtinMacros).map(([macroName, macroDef]) =>\n          <div key={ macroName }>\n            <div className='macroHeader'>\n              {/* <i className=\"icon far fa-trash-alt\" onClick={ () => removeMacro(macroName) } /> */}\n              {/* <i className=\"icon fas fa-pencil-alt\" /> */}\n              <i className='headerTitle'>{ macroName }</i>\n            </div>\n            <li>\n              <div className='box'>\n                { macroDef }\n              </div>\n            </li>\n          </div>\n        ) }\n      </ul>\n\n      <p>User-defined Macros</p>\n      <ul>\n        { Object.entries(macroTable).map(([macroName, macroDef]) =>\n            <div key={ macroName }>\n              <div className='macroHeader'>\n                <i className=\"icon far fa-trash-alt\" onClick={ () => removeMacro(macroName) } />\n                <i className=\"icon fas fa-pencil-alt\" />\n                <i className='headerTitle'>{ macroName }</i>\n              </div>\n              <li>\n                <div className='box'>\n                  { macroDef }\n                </div>\n              </li>\n            </div>\n          ) }\n      </ul>\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nimport {\n  AST,\n  tokenize,\n  parse,\n  Token,\n  MacroMap,\n  None,\n  NormalEvaluator\n} from 'lambdulus-core'\n\nimport './App.css'\nimport Editor from './components/Editor'\nimport { debounce, trimStr } from './misc';\nimport { EvaluationState } from './components/Evaluator';\nimport TopBar from './components/TopBar';\nimport Box, { BoxState, BoxType } from './components/Box';\nimport { MacroDefinitionState } from './components/MacroDefinition';\nimport { NoteState } from './components/Note';\nimport EvaluatorSpace from './components/EvaluatorSpace';\nimport MacroSpace from './components/MacroSpace';\n\n\nconst HANDY_MACROS : MacroMap = {\n  FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  INFIX : 'APPLY (λ l op r . op l r)',\n}\n\nexport enum Screen {\n  main,\n  macrolist,\n  notebooks,\n}\n\nexport interface AppState {\n  editorState : {\n    expression : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  \n  singleLetterVars : boolean\n  macroTable : MacroMap\n\n  submittedExpressions : Array<BoxState>\n  screen : Screen\n\n}\n\nexport default class App extends Component<any, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.parseExpression = this.parseExpression.bind(this)\n    this.getSavedMacros = this.getSavedMacros.bind(this)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    const [update, cancel] = debounce(this.updateURL.bind(this), 500)\n    this.updateURL = update\n    this.cancelUpdate = cancel\n    this.onExpression = this.onExpression.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onRemoveExpression = this.onRemoveExpression.bind(this)\n    this.isMacroDefinition = this.isMacroDefinition.bind(this)\n    this.isNote = this.isNote.bind(this)\n    this.updateMacros = this.updateMacros.bind(this)\n    this.onUpdateEvaluationState = this.onUpdateEvaluationState.bind(this)\n    this.onRemoveMacro = this.onRemoveMacro.bind(this)\n    this.onEnter = this.onEnter.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n\n    this.state = {\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      },\n      singleLetterVars : false,\n      macroTable : { ...HANDY_MACROS, ...this.getSavedMacros() },\n\n      submittedExpressions : [],\n      \n      screen : Screen.main,\n    }\n  }\n\n  render () {\n    const {\n      editorState : { expression, caretPosition, syntaxError },\n      singleLetterVars,\n      macroTable,\n      submittedExpressions,\n      screen\n    } : AppState = this.state\n\n    const getEvaluatorSpace = () =>\n    <EvaluatorSpace\n      removeExpression={ this.onRemoveExpression }\n      updateState={ this.onUpdateEvaluationState }\n      submittedExpressions={ submittedExpressions }\n    />\n\n    const getMacroSpace = () =>\n    <MacroSpace\n      macroTable={ macroTable }\n      removeMacro={ this.onRemoveMacro }\n    />\n\n    const notebooks : JSX.Element = (\n      <div>\n        Notebooks are not implemented yet.\n      </div>\n    )\n\n\n    return (\n      <div className='app'>\n\n        <TopBar\n          state={this.state}\n          onImport={ (state : AppState) => this.setState(state) }\n          onScreenChange={ (screen : Screen) => this.setState({\n            ...this.state,\n            screen,\n          }) }\n         />\n\n        {\n          screen === Screen.main ?\n            getEvaluatorSpace()\n            :\n            screen === Screen.macrolist ?\n              getMacroSpace()\n              :\n              notebooks\n        }\n\n        <Editor\n          expression={ expression }\n          caretPosition={ caretPosition }\n          onExpression={ this.onExpression }\n          onEnter={ this.onEnter }\n          syntaxError={ syntaxError }\n        />\n\n        <div id=\"anchor\"></div>\n\n      </div>\n    )\n  }\n\n  updateURL (expression : string) : void {\n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"page title?\", \"#\" + encodeURI(expression))\n  }\n\n  cancelUpdate () : void {\n    // TODO: this is placeholder for cancel-debounced-function DONT REMOVE\n  }\n\n  onExpression (expression : string, caretPosition : number) : void {\n    this.setState({ ...this.state, editorState : { expression, caretPosition, syntaxError : null } } )\n    this.updateURL(expression)\n  }\n\n  onUpdateEvaluationState (state : BoxState, index : number) : void {\n    const { submittedExpressions } : AppState = this.state\n\n    submittedExpressions[index] = {\n      ...submittedExpressions[index],\n      ...state,\n    }\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  onRemoveExpression (index : number) {\n    const { submittedExpressions } : AppState = this.state\n\n    const removed : BoxState = submittedExpressions.splice(index, 1)[0]\n\n    // TODO: if macro was removed somehow do something\n\n    this.setState({\n      ...this.state,\n      submittedExpressions\n    })\n  }\n\n  onEnter () : void {\n    const { editorState : { expression }, submittedExpressions } = this.state\n    const activeExpression : BoxState = submittedExpressions[submittedExpressions.length - 1]\n\n    if (expression.length || activeExpression === null || activeExpression.type !== BoxType.expression) {\n      this.onSubmit()\n    }\n    else {\n      this.onStep()\n    }\n  }\n\n  onStep () : void {\n    const { submittedExpressions } = this.state\n    const activeExpression : EvaluationState = submittedExpressions[submittedExpressions.length - 1] as EvaluationState\n    let { history, steps, lastReduction } = activeExpression\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    let ast = history[history.length - 1].clone()\n    \n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      submittedExpressions[submittedExpressions.length - 1] = {\n        ...activeExpression,\n        lastReduction,\n      }\n\n      this.setState({\n        ...this.state,\n        submittedExpressions,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    submittedExpressions[submittedExpressions.length - 1] = {\n      ...activeExpression,\n      history : [ ...history, ast ],\n      steps,\n      lastReduction,\n    }\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  onSubmit () : void {\n    // TODO: maybe cancel and clear URL only after succsessful parsing\n    this.cancelUpdate()\n    \n    const { editorState : { expression, caretPosition, }, submittedExpressions, macroTable } : AppState = this.state\n    \n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"\", \"#\" + encodeURI(expression))\n\n    //\n    // TODO: here decide if it is macro\n    // note\n    // expression to evaluate\n    // macro contains := and name must be valid expression - later i will implement own parsing endpoint in core\n    // note starts with # and can contains anything whatever user wants\n    // expression is already implemented and working\n    //\n\n    if (this.isMacroDefinition(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const [macroName, macroExpression] : Array<string> = expression.split(':=').map(trimStr)\n\n      const macroState : MacroDefinitionState = {\n        type : BoxType.macro,\n        __key : Date.now().toString(),\n        macroName,\n        macroExpression,\n      }\n\n      const newMacroTable : MacroMap = {\n        ...macroTable,\n        [macroName] : macroExpression\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, macroState ],\n        macroTable : newMacroTable,\n      })\n\n      this.updateMacros(newMacroTable)\n    }\n\n    else if (this.isNote(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const noteState : NoteState = {\n        type : BoxType.note,\n        __key : Date.now().toString(),\n        note : expression.substring(1)\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, noteState ]\n      })\n    }\n\n    else {\n      try {\n        const ast : AST = this.parseExpression(expression)\n        // window.location.hash = encodeURI('')\n        history.pushState({}, \"\", \"#\" + encodeURI(''))\n  \n        const evaluationState : EvaluationState = {\n          type : BoxType.expression,\n          __key : Date.now().toString(),\n          expression,\n          ast,\n          history : [ ast.clone() ],\n          steps : 0,\n          // isStepping : false,\n          isRunning : false,\n          lastReduction : null,\n          breakpoints : [],\n          timeoutID : undefined,\n          timeout : 10\n        }\n  \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression : '',\n            caretPosition : 0,\n            syntaxError : null,\n          },\n          submittedExpressions : [ ...submittedExpressions, evaluationState ]\n        })\n    \n      } catch (exception) {\n        this.updateURL(expression)\n        console.log(exception)\n        \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression,\n            caretPosition,\n            syntaxError : exception,\n          }\n        })\n      }\n    }\n  }\n\n  getExpressionFromURL () : string {\n    // return ''\n    return decodeURI(window.location.hash.substring(1))\n  }\n\n  updateFromURL () : void {\n    const { editorState : { expression : currentExpr } } : AppState = this.state\n    const expression : string = this.getExpressionFromURL()\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    this.setState({\n      ...this.state,\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null\n      }\n    })\n  }\n\n  isNote (expression : string) : boolean {\n    return expression.indexOf('#') === 0\n  }\n\n  isMacroDefinition (expression : string) : boolean {\n    // TODO: check if first part of macro assignment is valid identifier\n    // TODO: check if second part of macro assignment is valid lambda expression\n\n    try {\n      return expression.indexOf(':=') > 0\n    }\n    catch (exception) {\n      return false\n    }\n  }\n\n  parseExpression (expression : string) : AST {\n    // TODO: without try and catch\n    // this method raises exception and caller handles it\n    // caller should by able to display error to user\n    // caller should store exception in editorState\n    const { singleLetterVars, macroTable } : AppState = this.state\n    \n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n\n  onRemoveMacro (name : string) : void {\n    const { macroTable } = this.state\n    \n    const newMacroTable = { ...macroTable }\n    delete newMacroTable[name]\n\n    this.setState({\n      ...this.state,\n      macroTable : newMacroTable\n    })\n\n    this.updateMacros(newMacroTable)\n  }\n\n  getSavedMacros () : MacroMap {\n    return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n  }\n\n  updateMacros (macroTable : MacroMap) : void {\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}