{"version":3,"sources":["components/Editor.tsx","misc/index.ts","components/Controls.tsx","components/ReactPrinter.tsx","components/Step.tsx","components/Box.tsx","components/Evaluator.tsx","components/MacroDefinition.tsx","components/Note.tsx","components/TopBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Editor","props","expression","caretPosition","onExpression","onSubmit","syntaxError","lines","Math","min","split","length","react_default","a","createElement","className","concat","id","onClick","InputField","onChange","event","target","value","selectionEnd","replace","onKeyDown","shiftKey","key","preventDefault","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","max","ref","element","selectionStart","trimStr","str","trim","Controls","onRun","onStop","onStep","onClear","isRunning","ReactPrinter","tree","redex","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","Lambda","context","argument","args","type","Beta","name","printMultiLambda","application","leftClassName","rightClassName","identifier","right","Application","left","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","variable","ASTVisitor","Step","addBreakpoint","normal","NormalEvaluator","nextReduction","printer","print","BoxType","Evaluator","bind","__onRun","shouldBreak","_this$props","state","history","updateState","steps","lastReduction","breakpoints","timeoutID","from","to","sequence","fn","result","Array","e","i","mapRightFromTo","ast","_this$props2","timeout","None","window","setTimeout","_this$props3","undefined","clone","index","breakpoint","find","console","log","clearTimeout","splice","perform","_this$props4","_this$props5","toConsumableArray","_this$props6","_this$props7","reduction","Variable","ChurchNumber","Macro","PureComponent","MacroDefinition","_props$state","macroName","macroExpression","Note","note","Box","removeExpression","Evaluator_Evaluator","TopBar","onImport","onScreenChange","screen","dehydrated","objectSpread","submittedExpressions","map","dehydrateBox","dehydrate","link","content","data","Blob","URL","createObjectURL","createURL","JSON","stringify","Screen","main","macrolist","href","download","revokeObjectURL","accept","files","file","reader","FileReader","onload","parse","singleLetterVars","macroTable","config","box","tokens","tokenize","lambdaLetters","parseExpression","hydrateBox","hydrate","readAsText","onFiles","htmlFor","HANDY_MACROS","FACT","FACCT","FIB","APPEND","LISTGREQ","LISTLESS","LISTGR","LISTEQ","QUICKSORT","INFLIST","REMOVENTH","NTH","LEN","GETNTH","MAP","REDUCE","APPLY","RANGE","LISTCOMPR","MOD","INFIX","App","getSavedMacros","getExpressionFromURL","updateFromURL","_debounce","treshold","timer","_len","arguments","_key","apply","debounce","updateURL","_debounce2","slicedToArray","update","cancel","cancelUpdate","onRemoveExpression","isMacroDefinition","isNote","updateMacros","addEventListener","editorState","_this$state","_this$state$editorSta","evaluatorSpace","__key","onUpdateEvaluationState","macros","entries","_ref","_ref2","macroDef","onRemoveMacro","notebooks","setState","pushState","encodeURI","_this$state2","_this$state2$editorSt","_expression$split$map","_expression$split$map2","macroState","Date","now","toString","newMacroTable","defineProperty","noteState","substring","evaluationState","exception","decodeURI","location","hash","currentExpr","indexOf","_this$state3","localStorage","getItem","setItem","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6edf721a.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, SetStateAction, Dispatch, KeyboardEvent } from 'react'\n\nimport './EditorStyle.css'\n\n\ninterface EditorProperties {\n  expression : string\n  caretPosition : number\n  onExpression (newExpression : string, caretPosition : number) : void\n  onSubmit () : void\n  syntaxError : Error | null\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const { expression, caretPosition, onExpression, onSubmit, syntaxError } : EditorProperties = props\n  const lines : number = Math.min(expression.split('\\n').length, expression.length)\n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    onExpression(expression, caretPosition)\n  }\n\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.shiftKey && event.key === 'Enter') {\n      event.preventDefault()\n      onSubmit()\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      { syntaxError ? `${syntaxError}` : '' }\n      <i id='editorEnter' className=\"far fa-play-circle fa-3x\" onClick={ onSubmit } />\n      {/* <button id='editorEnter' onClick={ onSubmit } >\n        Δ\n      </button> */}\n      <InputField\n        expression={ expression }\n        lines={ lines }\n        caretPosition={ caretPosition }\n        onChange={ onChange }\n        onKeyDown={ onKeyDown }\n      />\n    </div>\n  )\n}\n\ninterface InputProps {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void,\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { expression, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ expression }\n      placeholder='(λ f . (λ x . f (x x)) (λ x . f (x x)))'\n      wrap='hard'\n      autoFocus\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n        }\n      } }\n    />\n  )\n}","import { strict } from \"assert\";\n\nexport function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function mapRightFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = to; i >= from; --i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }\n\nexport function trimStr (str : string) : string {\n  return str.trim()\n}","import React from 'react'\n\nimport './ControlsStyle.css'\n\n\nexport interface ControlsProps {\n  onRun () : void,\n  onStop () : void,\n  onStep () : void,\n  onClear () : void,\n  isRunning : boolean,\n}\n\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    onRun,\n    onStop,\n    onStep,\n    onClear,\n    isRunning,\n  } : ControlsProps = props\n  \n  return (\n    <div id=\"controls\">\n\n      {\n        isRunning ?\n        <i\n          className=\"enabled fas fa-pause\"\n          onClick={ onStop }\n        />\n          :\n        <i\n          className=\"enabled fas fa-forward\"\n          onClick={ onRun }\n        />  \n      }\n\n      {/* <button\n        className='controlButton'\n        \n        disabled={ false }\n      >\n        { isRunning ? 'STOP' : 'RUN' }\n      </button> */}\n      {/* <button className='controlButton' onClick={ onStep } disabled={ isRunning }>STEP</button> */}\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-play\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-play\"\n          onClick={ onStep }\n        />\n      }\n\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-redo-alt\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-redo-alt\"\n          onClick={ onClear }\n        />\n      }\n      {/* <i\n        className=\"fas fa-redo-alt fa-2x\"\n        onClick={ onClear }\n       />\n\n      <button className='controlButton' onClick={ onClear } disabled={ isRunning }>CLEAR</button> */}\n    </div>\n  )\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumber, Expansion, Macro } from \"lambdulus-core\";\n\nimport { Breakpoint } from \"./Evaluator\";\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className='argument'\n            onClick={ () => this.onClick({ type : Beta, context }) }\n          >\n            { lambda.body.argument.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type : Beta, context : lambda })}\n            }>\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly redex : AST | null,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication(application: Application) : void {\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === application.identifier\n          &&\n        this.redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda(lambda: Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      const acc : JSX.Element = (\n        <span\n          className='argument'\n          onClick={ () => this.onClick({ type : Beta, context }) }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type: Beta, context: lambda })}\n            }>\n              λ { ' ' }\n          </span>\n          <span\n            className='argument'\n            onClick={ () => this.onClick({ type : Beta, context }) }\n          >\n            { args } { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumber(churchNumber: ChurchNumber) : void {\n    let className : string = 'churchnumeral'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === churchNumber.identifier\n          &&\n        this.redex === churchNumber\n      ) {\n        className += ' redex'\n    }\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : churchNumber }) }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro(macro: Macro) : void {\n    let className = 'macro'\n\n    if (this.redex !== null && this.redex.identifier === macro.identifier && this.redex === macro) {\n      className += ' redex'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : macro }) }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}","import React from 'react'\n\nimport { AST, Beta, Expansion, NormalEvaluator } from 'lambdulus-core';\n\nimport './StepStyle.css'\nimport { Breakpoint } from './Evaluator'\nimport ReactPrinter from './ReactPrinter';\n\n\ninterface StepProperties {\n  tree : AST | null\n  addBreakpoint (breakpoint : Breakpoint) : void\n}\n\nexport default function Step (props : StepProperties) : JSX.Element | null {\n  const { tree, addBreakpoint } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  let redex : AST | null  = null\n  const normal : NormalEvaluator = new NormalEvaluator(tree)\n  \n  if (normal.nextReduction instanceof Beta) {\n    redex = normal.nextReduction.redex\n  }\n  \n  if (normal.nextReduction instanceof Expansion) {\n    redex = normal.nextReduction.target\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, redex)\n\n  return (\n    <span className='step'>\n      { printer.print() }\n    </span>\n  )\n}","import React from 'react'\nimport Evaluator, { EvaluationState } from './Evaluator';\nimport MacroDefinition, { MacroDefinitionState } from './MacroDefinition';\nimport Note, { NoteState } from './Note';\n\n\nexport enum BoxType {\n  expression,\n  macro,\n  note\n}\n\nexport type BoxState = EvaluationState | MacroDefinitionState | NoteState\n\ninterface BoxProperties {\n  state : BoxState\n  // children : JSX.Element\n  updateState (state : BoxState) : void\n  removeExpression() : void\n}\n\nexport default function Box (props : BoxProperties) : JSX.Element {\n  const { state, updateState } : BoxProperties = props\n  const { type } = state\n\n  if (type === BoxType.expression) {\n    return (\n      <div>\n        <div className='evaluationHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i>Expression added</i>\n        </div>\n\n        <Evaluator\n          state={ state as EvaluationState }\n          updateState={ updateState }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.macro) {\n    return (\n      <div>\n        <div className='macroHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i>Macro defined</i>\n        </div>\n        <MacroDefinition state={ state as MacroDefinitionState } />\n      </div>\n    )\n  }\n\n  if (type === BoxType.note) {\n    return (\n      <div>\n        <div className='noteHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i>Note added</i>\n        </div>\n        <Note state={ state as NoteState } />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      I do not know what to do with this yet.\n    </div>\n  )\n}","import React, { PureComponent } from 'react'\n\nimport { AST, ASTReduction, None, NormalEvaluator, Beta, Lambda, Variable, Expansion, ChurchNumber, Macro } from \"lambdulus-core\";\n\nimport './EvaluatorStyle.css'\nimport Controls from './Controls';\nimport Step from './Step';\nimport { mapRightFromTo } from '../misc'\nimport { BoxType } from './Box';\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n}\n\nexport interface EvaluationState {\n  __key : string\n  type : BoxType\n  expression : string\n  ast : AST\n  history : Array<AST>\n  steps : number\n  isRunning : boolean\n  lastReduction : ASTReduction | null\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n}\n\nexport interface EvaluationStatePatch {\n  __key? : string\n  type? : BoxType\n  expression? : string\n  ast? : AST\n  history? : Array<AST>\n  steps? : number\n  isRunning? : boolean\n  lastReduction? : ASTReduction | null\n  breakpoints? : Array<Breakpoint>\n  timeoutID? : number | undefined\n  timeout? : number\n}\n\ninterface EvaluationProperties {\n  state : EvaluationState\n  updateState (state : EvaluationStatePatch) : void\n}\n\nexport default class Evaluator extends PureComponent<EvaluationProperties, EvaluationState> {\n  constructor (props : EvaluationProperties) {\n    super(props)\n\n    this.onClear = this.onClear.bind(this)\n    this.onStep = this.onStep.bind(this)\n    this.onRun = this.onRun.bind(this)\n    this.__onRun = this.__onRun.bind(this)\n    this.onStop = this.onStop.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { state, updateState } : EvaluationProperties = this.props\n    const {\n      history,\n      steps,\n      isRunning,\n      lastReduction,\n      breakpoints,\n      timeoutID,\n    } : EvaluationState = state\n\n    return (\n      <div className='box'>\n        <Controls\n          onRun={ this.onRun }\n          onStop={ this.onStop }\n          onStep={ this.onStep }\n          onClear={ this.onClear }\n          isRunning={ isRunning }\n        />\n  \n        <ul>\n          <li key={history.length - 1} className='activeStep'>\n            <Step\n              addBreakpoint={ this.addBreakpoint }\n              tree={ history[history.length - 1] }\n            />\n          </li>\n          {\n            mapRightFromTo(0, history.length - 2, history, (ast, i) =>\n              <li key={ i } className='inactiveStep' >\n                <Step addBreakpoint={ () => {} } tree={ ast } />\n              </li>)\n          }\n        </ul>\n      </div>\n    )\n  }\n\n  onRun () : void {\n    const { state, updateState, } : EvaluationProperties = this.props\n    const { lastReduction, timeout } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    updateState({\n      isRunning : true,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  __onRun () {\n    const { state, updateState } = this.props\n    let { history, steps, lastReduction, isRunning, breakpoints, timeoutID, timeout } = state\n  \n    if ( ! isRunning) {\n      return\n    }\n    \n    if (lastReduction instanceof None) {\n      updateState({\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    let ast : AST = history[history.length - 1].clone()\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n    \n    if (normal.nextReduction instanceof None) {\n      history = [ ast ]\n  \n      updateState({\n        history,\n        steps,\n        lastReduction,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // TODO: maybe refactor a little\n    let index : number = 0\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint, id) =>\n        (index = id,\n        this.shouldBreak(breakpoint, normal.nextReduction))\n    )\n  \n    console.log('breakpoint', breakpoint)\n  \n    if (breakpoint !== undefined) {\n      window.clearTimeout(timeoutID)\n      \n      console.log('yes breakpoint shoudl break')\n      \n      breakpoints.splice(index, 1)\n  \n      updateState({\n        isRunning : false,\n        breakpoints,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ast ],\n      steps,\n      lastReduction,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  onStop () : void {\n    const { updateState, state } : EvaluationProperties = this.props\n    const { timeoutID } = state\n  \n    window.clearTimeout(timeoutID)\n  \n    updateState({\n      isRunning : false,\n      timeoutID : undefined\n    })\n  }\n\n  onStep () : void {\n    const { state, updateState } : EvaluationProperties = this.props\n    let { history, steps, lastReduction } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    let ast = history[history.length - 1].clone()\n  \n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      updateState({\n        lastReduction,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ...history, ast ],\n      steps,\n      lastReduction,\n    })\n  }\n\n  onClear () : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      history : [ state.ast ],\n      steps : 0,\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n    })\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      breakpoints : [ ...state.breakpoints, breakpoint ],\n    })\n  }\n\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Lambda\n        && reduction.target.identifier === breakpoint.context.body.identifier\n      ) {\n        return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Variable\n        && reduction.redex.left instanceof Lambda\n        && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumber\n        && reduction.target.identifier === breakpoint.context.identifier\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof Macro\n        && reduction.target.identifier === breakpoint.context.identifier\n    ) {\n      return true\n    }\n  \n    return false\n  }\n\n\n\n}\n\n\n\n\n// function equalProps (oldProps : EvaluationProperties, newProps : EvaluationProperties) : boolean {\n//   return (\n//     oldProps.state.isRunning === newProps.state.isRunning\n//       &&\n//     oldProps.state.steps === newProps.state.steps\n//       &&\n//     oldProps.state.timeout === newProps.state.timeout\n//   )\n// }\n\n// export default React.memo(Evaluator, equalProps)\n\n// function _Evaluator (props : EvaluationProperties) : JSX.Element {\n//   const {\n//     state,\n//     updateState,\n//   } : EvaluationProperties = props\n//   const {\n//     history,\n//     steps,\n//     // isStepping,\n//     isRunning,\n//     lastReduction,\n//     breakpoints,\n//     timeoutID,\n//   } : EvaluationState = state\n\n//   return (\n//     <div className='box'>\n//       <Controls\n//         onRun={ () => onRun(props) }\n//         onStop={ () => onStop(props) }\n//         onStep={ () => onStep(props) }\n//         onClear={ () => onClear(props) }\n//         isRunning={ isRunning }\n//       />\n\n//       <ul>\n//         <li key={history.length - 1} className='activeStep'>\n//           <Step\n//             addBreakpoint={ (breakpoint : Breakpoint) => addBreakpoint(props, breakpoint) }\n//             tree={ history[history.length - 1] }\n//           />\n//         </li>\n//         {\n//           mapRightFromTo(0, history.length - 2, history, (ast, i) =>\n//             <li key={ i } className='inactiveStep' >\n//               <Step addBreakpoint={ () => {} } tree={ ast } />\n//             </li>)\n//         }\n//       </ul>\n//     </div>\n//   )\n// } ","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface MacroDefinitionState {\n  __key : string\n  type : BoxType\n  macroName : string\n  macroExpression : string\n}\n\nexport interface MacroDefinitionProperties {\n  state : MacroDefinitionState\n}\n\nexport default function MacroDefinition (props : MacroDefinitionProperties) : JSX.Element {\n  const { state : { macroName, macroExpression } } : MacroDefinitionProperties = props\n\n  return (\n    <div className='box'>\n      { macroName } := { macroExpression }\n    </div>\n  )\n}","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface NoteState {\n    __key : string\n  type : BoxType\n  note : string\n}\n\nexport interface NoteProperties {\n  state : NoteState\n}\n\nexport default function Note (props : NoteProperties) : JSX.Element {\n  const { state : { note } } : NoteProperties = props\n\n  return (\n    <div className='box'>\n      { note }\n    </div>\n  )\n}","import React, { ChangeEvent } from 'react'\n\nimport './TopBarStyle.css'\n\nimport { AppState, Screen } from '../App'\nimport { EvaluationState } from './Evaluator';\nimport { AST, BasicPrinter, tokenize, parse, Token, MacroTable, MacroMap } from 'lambdulus-core';\nimport { BoxState, BoxType } from './Box';\n\n\ninterface TopBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n  onScreenChange (screen : Screen) : void\n}\n\nexport default function TopBar (props : TopBarProperties) : JSX.Element {\n  const { state, onImport, onScreenChange } : TopBarProperties = props\n  const { screen } = state\n\n  const dehydrated : object = dehydrate(state)\n\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n        {/* <i className=\"icon fas fa-cog fa-2x\" /> */}\n        <i className=\"icon fas fa-book-open fa-2x\"></i>\n        \n        {\n          screen === Screen.main ?\n            <i className=\"icon fas fa-bars fa-2x\" onClick={ () => onScreenChange(Screen.macrolist) } />\n            :\n            <i className=\"icon far fa-window-close fa-2x\" onClick={ () => onScreenChange(Screen.main) } />\n        }\n\n        <i className=\"save icon fas fa-save fa-2x\" />\n      <a\n        className='export icon'\n        href={ link }\n        download=\"notebook_lambdulus.json\"\n        onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n      >\n        <i id='download' className=\"fas fa-cloud-download-alt fa-2x\" />\n      </a>\n      <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n      <label htmlFor=\"input\">Import notebook</label>\n    </div>\n  )\n}\n\nfunction dehydrateBox (box : BoxState) : BoxState {\n\n  // console.log('dehydrate')\n  const { type } : BoxState = box\n\n  if (type === BoxType.expression) {\n\n    // console.log('dehydrate expression')\n    return {\n      ...box,\n      ast : null as any,\n      history : [],\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n      timeoutID : undefined,\n    }\n  }\n\n  // console.log('dehydrate something else')\n\n  return box\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedExpressions : state.submittedExpressions.map(dehydrateBox)\n  }\n}\n\nfunction hydrateBox (box : BoxState, config : Config) : BoxState {\n  const { type } : BoxState = box\n  \n  if (type === BoxType.expression) {\n    const ast : AST = parseExpression((box as EvaluationState).expression, config)\n\n    return {\n      ...box,\n      ast,\n      history : [ ast ],\n    }\n  }\n\n  return box\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  const { singleLetterVars, macroTable } = dehydrated\n  const config = { singleLetterVars, macroTable }\n\n  return {\n    ...dehydrated,\n    submittedExpressions : dehydrated.submittedExpressions.map((box) => hydrateBox(box, config))\n  }\n}\n\ninterface Config {\n  singleLetterVars : boolean\n  macroTable : MacroMap\n}\n\nfunction parseExpression (expression : string, config : Config) : AST {\n  const { singleLetterVars, macroTable } : Config = config\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file)\n\n  \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  // If we are replacing a previously generated file we need to\n  // manually revoke the object URL to avoid memory leaks.\n  // if (textFile !== null) {\n  //   window.URL.revokeObjectURL(textFile);\n  // }\n\n  return window.URL.createObjectURL(data);\n}","import React, { Component } from 'react';\n\nimport {\n  AST,\n  tokenize,\n  parse,\n  Token,\n  MacroMap\n} from 'lambdulus-core'\n\nimport './App.css'\nimport Editor from './components/Editor'\nimport { debounce, trimStr } from './misc';\nimport { EvaluationState } from './components/Evaluator';\nimport TopBar from './components/TopBar';\nimport Box, { BoxState, BoxType } from './components/Box';\nimport { MacroDefinitionState } from './components/MacroDefinition';\nimport { NoteState } from './components/Note';\n\n\nconst HANDY_MACROS : MacroMap = {\n  FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  INFIX : 'APPLY (λ l op r . op l r)',\n}\n\n\nexport enum Screen {\n  main,\n  macrolist,\n  notebooks,\n}\n\nexport interface AppState {\n  editorState : {\n    expression : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  \n  singleLetterVars : boolean\n  macroTable : MacroMap\n\n  submittedExpressions : Array<BoxState>\n  screen : Screen\n\n}\n\nexport default class App extends Component<any, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.parseExpression = this.parseExpression.bind(this)\n    this.getSavedMacros = this.getSavedMacros.bind(this)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    const [update, cancel] = debounce(this.updateURL.bind(this), 500)\n    this.updateURL = update\n    this.cancelUpdate = cancel\n    this.onExpression = this.onExpression.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onRemoveExpression = this.onRemoveExpression.bind(this)\n    this.isMacroDefinition = this.isMacroDefinition.bind(this)\n    this.isNote = this.isNote.bind(this)\n    this.updateMacros = this.updateMacros.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n\n    this.state = {\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      },\n      singleLetterVars : false,\n      macroTable : { ...HANDY_MACROS, ...this.getSavedMacros() },\n\n      submittedExpressions : [],\n      \n      screen : Screen.main,\n    }\n  }\n\n  render () {\n    const {\n      editorState : { expression, caretPosition, syntaxError },\n      singleLetterVars,\n      macroTable,\n      submittedExpressions,\n      screen\n    } : AppState = this.state\n\n    const evaluatorSpace : JSX.Element = (\n      <ul className='evaluatorSpace' >\n        { submittedExpressions.map((state : BoxState, i : number) =>\n          <li key={ state.__key }>\n            <Box\n              state={ state }\n              updateState={ (state : EvaluationState) => this.onUpdateEvaluationState(state, i) }\n              removeExpression={ () => this.onRemoveExpression(i) }\n            />\n          </li>\n          ) }\n      </ul>\n    )\n\n    const macros : JSX.Element = (\n      <ul className='macroSpace' >\n        { Object.entries(macroTable).map(([macroName, macroDef]) =>\n          <div key={ macroName }>\n            <div className='macroHeader'>\n              <i className=\"icon far fa-trash-alt\" onClick={ () => this.onRemoveMacro(macroName) } />\n              <i className=\"icon fas fa-pencil-alt\" />\n              { macroName }\n            </div>\n            <li>\n              <div className='box'>\n                { macroDef }\n              </div>\n            </li>\n          </div>\n        ) }\n      </ul>\n    )\n\n    const notebooks : JSX.Element = (\n      <div>\n        Notebooks are not implemented yet.\n      </div>\n    )\n\n\n    return (\n      <div className='app'>\n\n        <TopBar\n          state={this.state}\n          onImport={ (state : AppState) => this.setState(state) }\n          onScreenChange={ (screen : Screen) => this.setState({\n            ...this.state,\n            screen,\n          }) }\n         />\n\n        {\n          screen === Screen.main ?\n            evaluatorSpace\n            :\n            screen === Screen.macrolist ?\n              macros\n              :\n              notebooks\n        }\n\n        <Editor\n          expression={ expression }\n          caretPosition={ caretPosition }\n          onExpression={ this.onExpression }\n          onSubmit={ this.onSubmit }\n          syntaxError={ syntaxError }\n        />\n\n        <div id=\"anchor\"></div>\n\n      </div>\n    )\n  }\n\n  updateURL (expression : string) : void {\n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"page title?\", \"#\" + encodeURI(expression))\n  }\n\n  cancelUpdate () : void {\n    // TODO: this is placeholder for cancel-debounced-function DONT REMOVE\n  }\n\n  onExpression (expression : string, caretPosition : number) : void {\n    this.setState({ ...this.state, editorState : { expression, caretPosition, syntaxError : null } } )\n    this.updateURL(expression)\n  }\n\n  onUpdateEvaluationState (state : BoxState, index : number) : void {\n    const { submittedExpressions } : AppState = this.state\n\n    submittedExpressions[index] = {\n      ...submittedExpressions[index],\n      ...state,\n    }\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  onRemoveExpression (index : number) {\n    const { submittedExpressions } : AppState = this.state\n\n    const removed : BoxState = submittedExpressions.splice(index, 1)[0]\n\n    // TODO: if macro was removed somehow do something\n\n    this.setState({\n      ...this.state,\n      submittedExpressions\n    })\n  }\n\n  onSubmit () : void {\n    // TODO: maybe cancel and clear URL only after succsessful parsing\n    this.cancelUpdate()\n    \n    const { editorState : { expression, caretPosition, }, submittedExpressions, macroTable } : AppState = this.state\n    \n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"\", \"#\" + encodeURI(expression))\n\n    //\n    // TODO: here decide if it is macro\n    // note\n    // expression to evaluate\n    // macro contains := and name must be valid expression - later i will implement own parsing endpoint in core\n    // note starts with # and can contains anything whatever user wants\n    // expression is already implemented and working\n    //\n\n    if (this.isMacroDefinition(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const [macroName, macroExpression] : Array<string> = expression.split(':=').map(trimStr)\n\n      const macroState : MacroDefinitionState = {\n        type : BoxType.macro,\n        __key : Date.now().toString(),\n        macroName,\n        macroExpression,\n      }\n\n      const newMacroTable : MacroMap = {\n        ...macroTable,\n        [macroName] : macroExpression\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, macroState ],\n        macroTable : newMacroTable,\n      })\n\n      this.updateMacros(newMacroTable)\n    }\n\n    else if (this.isNote(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const noteState : NoteState = {\n        type : BoxType.note,\n        __key : Date.now().toString(),\n        note : expression.substring(1)\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, noteState ]\n      })\n    }\n\n    else {\n      try {\n        const ast : AST = this.parseExpression(expression)\n        // window.location.hash = encodeURI('')\n        history.pushState({}, \"\", \"#\" + encodeURI(''))\n  \n        const evaluationState : EvaluationState = {\n          type : BoxType.expression,\n          __key : Date.now().toString(),\n          expression,\n          ast,\n          history : [ ast ],\n          steps : 0,\n          // isStepping : false,\n          isRunning : false,\n          lastReduction : null,\n          breakpoints : [],\n          timeoutID : undefined,\n          timeout : 10\n        }\n  \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression : '',\n            caretPosition : 0,\n            syntaxError : null,\n          },\n          submittedExpressions : [ ...submittedExpressions, evaluationState ]\n        })\n    \n      } catch (exception) {\n        this.updateURL(expression)\n        console.log(exception)\n        \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression,\n            caretPosition,\n            syntaxError : exception,\n          }\n        })\n      }\n    }\n  }\n\n  getExpressionFromURL () : string {\n    // return ''\n    return decodeURI(window.location.hash.substring(1))\n  }\n\n  updateFromURL () : void {\n    const { editorState : { expression : currentExpr } } : AppState = this.state\n    const expression : string = this.getExpressionFromURL()\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    this.setState({\n      ...this.state,\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null\n      }\n    })\n  }\n\n  isNote (expression : string) : boolean {\n    return expression.indexOf('#') === 0\n  }\n\n  isMacroDefinition (expression : string) : boolean {\n    // TODO: check if first part of macro assignment is valid identifier\n    // TODO: check if second part of macro assignment is valid lambda expression\n\n    try {\n      return expression.indexOf(':=') > 0\n    }\n    catch (exception) {\n      return false\n    }\n  }\n\n  parseExpression (expression : string) : AST {\n    // TODO: without try and catch\n    // this method raises exception and caller handles it\n    // caller should by able to display error to user\n    // caller should store exception in editorState\n    const { singleLetterVars, macroTable } : AppState = this.state\n    \n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n\n  onRemoveMacro (name : string) : void {\n    const { macroTable } = this.state\n    \n    const newMacroTable = { ...macroTable }\n    delete newMacroTable[name]\n\n    this.setState({\n      ...this.state,\n      macroTable : newMacroTable\n    })\n\n    this.updateMacros(newMacroTable)\n  }\n\n  getSavedMacros () : MacroMap {\n    return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n  }\n\n  updateMacros (macroTable : MacroMap) : void {\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}