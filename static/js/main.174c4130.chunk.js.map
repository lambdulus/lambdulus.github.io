{"version":3,"sources":["components/Editor.tsx","components/Controls.tsx","components/ReactPrinter.tsx","components/Step.tsx","components/Evaluator.tsx","misc/index.ts","components/TopBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Editor","props","expression","caretPosition","onExpression","onSubmit","syntaxError","lines","Math","min","split","length","react_default","a","createElement","className","concat","id","onClick","InputField","onChange","event","target","value","selectionEnd","replace","onKeyDown","shiftKey","key","preventDefault","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","max","ref","element","selectionStart","Controls","onRun","onStop","onStep","onClear","isRunning","ReactPrinter","tree","redex","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","Lambda","context","argument","args","type","Beta","name","printMultiLambda","application","leftClassName","rightClassName","identifier","right","Application","left","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","variable","ASTVisitor","Step","addBreakpoint","normal","NormalEvaluator","nextReduction","printer","print","React","memo","history","steps","lastReduction","breakpoints","timeoutID","updateState","timeout","None","objectSpread","window","setTimeout","__onRun","undefined","ast","clone","index","breakpoint","find","reduction","Variable","ChurchNumber","Macro","shouldBreak","splice","perform","clearTimeout","toConsumableArray","from","to","sequence","fn","result","Array","e","i","mapRightFromTo","oldProps","newProps","TopBar","state","onImport","dehydrated","submittedExpressions","map","evaluation","dehydrate","link","content","data","Blob","URL","createObjectURL","createURL","JSON","stringify","href","download","revokeObjectURL","accept","files","file","reader","FileReader","onload","parse","singleLetterVars","macroTable","tokens","tokenize","lambdaLetters","parseExpression","readAsText","onFiles","htmlFor","HANDY_MACROS","FACT","FACCT","FIB","APPEND","LISTGREQ","LISTLESS","LISTGR","LISTEQ","QUICKSORT","INFLIST","REMOVENTH","NTH","LEN","GETNTH","MAP","REDUCE","APPLY","RANGE","LISTCOMPR","MOD","INFIX","App","bind","getSavedMacros","getExpressionFromURL","updateFromURL","_debounce","treshold","timer","_len","arguments","_key","apply","debounce","updateURL","_debounce2","slicedToArray","update","cancel","cancelUpdate","onRemoveExpression","addEventListener","editorState","_this$state","_this$state$editorSta","setState","__key","Evaluator","assign","onUpdateEvaluationState","pushState","encodeURI","console","log","_this$state2","_this$state2$editorSt","evaluationState","Date","now","toString","exception","decodeURI","location","hash","substring","currentExpr","_this$state3","localStorage","getItem","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6ZAae,SAASA,EAAQC,GAAwC,IAC9DC,EAAsFD,EAAtFC,WAAYC,EAA0EF,EAA1EE,cAAeC,EAA2DH,EAA3DG,aAAcC,EAA6CJ,EAA7CI,SAAUC,EAAmCL,EAAnCK,YACrDC,EAAiBC,KAAKC,IAAIP,EAAWQ,MAAM,MAAMC,OAAQT,EAAWS,QAkB1E,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXT,EAAW,GAAAU,OAAMV,GAAgB,GACnCM,EAAAC,EAAAC,cAAA,KAAGG,GAAG,cAAcF,UAAU,2BAA2BG,QAAUb,IAInEO,EAAAC,EAAAC,cAACK,EAAD,CACEjB,WAAaA,EACbK,MAAQA,EACRJ,cAAgBA,EAChBiB,SA3BW,SAACC,GAA6C,IACpCnB,EAAmDmB,EAAtEC,OAAWC,MACXpB,EAAyBkB,EAAMC,OAAOE,aAE5CtB,EAAaA,EAAWuB,QAAQ,MAAO,UAEvCrB,EAAaF,EAAYC,IAsBrBuB,UAnBY,SAACL,GACbA,EAAMM,UAA0B,UAAdN,EAAMO,MAC1BP,EAAMQ,iBACNxB,SA8BN,SAASc,EAAYlB,GAAkC,IAC7CC,EAAuED,EAAvEC,WAAYK,EAA2DN,EAA3DM,MAAOa,EAAoDnB,EAApDmB,SAAUM,EAA0CzB,EAA1CyB,UAAWvB,EAA+BF,EAA/BE,cAEhD,OACES,EAAAC,EAAAC,cAAA,YACEC,UAAU,SACVW,UAAYA,EACZN,SAAWA,EACXG,MAAQrB,EACR4B,YAAY,yDACZC,KAAK,OACLC,WAAS,EACTC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,YAAa,EACbC,KAAO7B,KAAK8B,IAAI/B,EAAO,GACvBgC,IAAM,SAACC,GACW,OAAZA,IACFA,EAAQC,eAAiBtC,EACzBqC,EAAQhB,aAAerB,kBClElB,SAASuC,EAAUzC,GAAqC,IAEnE0C,EAKkB1C,EALlB0C,MACAC,EAIkB3C,EAJlB2C,OACAC,EAGkB5C,EAHlB4C,OACAC,EAEkB7C,EAFlB6C,QACAC,EACkB9C,EADlB8C,UAGF,OACEnC,EAAAC,EAAAC,cAAA,OAAKG,GAAG,YAGJ8B,EACAnC,EAAAC,EAAAC,cAAA,KACEC,UAAU,6BACVG,QAAU0B,IAGZhC,EAAAC,EAAAC,cAAA,KACEC,UAAU,+BACVG,QAAUyB,IAaZI,EACAnC,EAAAC,EAAAC,cAAA,KACEC,UAAU,6BACVG,QAAU,eAGZN,EAAAC,EAAAC,cAAA,KACEC,UAAU,4BACVG,QAAU2B,IAKZE,EACAnC,EAAAC,EAAAC,cAAA,KACEC,UAAU,iCACVG,QAAU,eAGZN,EAAAC,EAAAC,cAAA,KACEC,UAAU,gCACVG,QAAU4B,eC7DCE,cA0CnB,SAAAA,EACkBC,EACC/B,EACAgC,GACjB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACAG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,QADAL,OAAAE,EAAAjC,UAAAiC,EAAAD,QAAAC,EA7CMO,SAAgC,KA+CtCP,EAAKF,KAAKU,MAAVP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFAA,gFA3CwBU,EAAiBC,GAAkC,IAAAC,EAAAT,KAC3E,GAAIO,EAAOG,gBAAgBC,SAAQ,CACjC,IAAMC,EAAqBL,EAAOG,KAAKG,SACjCC,EACJxD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,EADJ,IACmB,IACjBlD,EAAAC,EAAAC,cAAA,QACEC,UAAU,WACVG,QAAU,kBAAM6C,EAAK7C,QAAQ,CAAEmD,KAAOC,OAAMJ,cAE1CL,EAAOG,KAAKG,SAASI,SAK7BjB,KAAKkB,iBAAiBX,EAAOG,KAAMI,OAEhC,CACHP,EAAOG,KAAKL,MAAML,MAClB,IAAMU,EAA4BV,KAAKI,SACvCJ,KAAKI,SAAWI,EAEhBR,KAAKI,SACH9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,IAEEH,EAAAC,EAAAC,cAAA,QACEC,UAAU,SACVG,QAAU,WACR6C,EAAK7C,QAAQ,CAAEmD,KAAOC,OAAMJ,QAAUL,MAH1C,UAKQ,KAENC,EATJ,MASsBE,EATtB,uDA0BJ,OAAOV,KAAKI,+CAIAe,GACZ,IAAIC,EAAyB,OACzBC,EAA0B,QAY9B,GAVmB,OAAfrB,KAAKJ,OAELI,KAAKJ,MAAM0B,aAAeH,EAAYG,YAEtCtB,KAAKJ,QAAUuB,IAEfC,GAAiB,SACjBC,GAAkB,UAGlBF,EAAYI,iBAAiBC,cAAa,CAC5CL,EAAYM,KAAKpB,MAAML,MACvB,IAAMyB,EAA4BnE,EAAAC,EAAAC,cAAA,QAAMC,UAAY2D,GAAiBpB,KAAKI,UAE1Ee,EAAYI,MAAMlB,MAAML,MACxB,IAAMuB,EAA6BjE,EAAAC,EAAAC,cAAA,QAAMC,UAAY4D,GAAlB,KAAuCrB,KAAKI,SAA5C,MAEnCJ,KAAKI,SACL9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZgE,EADJ,IACaF,OAGV,CACHJ,EAAYM,KAAKpB,MAAML,MACvB,IAAMyB,EAA4BnE,EAAAC,EAAAC,cAAA,QAAMC,UAAY2D,GAAiBpB,KAAKI,UAE1Ee,EAAYI,MAAMlB,MAAML,MACxB,IAAMuB,EAA6BjE,EAAAC,EAAAC,cAAA,QAAMC,UAAY4D,GAAmBrB,KAAKI,UAE7EJ,KAAKI,SACL9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZgE,EADJ,IACaF,qCAMRhB,GAAuB,IAAAmB,EAAA1B,KAC9B,GAAIO,EAAOG,gBAAgBC,SAAQ,CACjC,IAAMC,EAAqBL,EAAOG,KAAKG,SACjCc,EACJrE,EAAAC,EAAAC,cAAA,QACEC,UAAU,WACVG,QAAU,kBAAM8D,EAAK9D,QAAQ,CAAEmD,KAAOC,OAAMJ,cAE1CL,EAAOM,SAASI,QAItBjB,KAAKkB,iBAAiBX,EAAQoB,OAE3B,CACH,IAAMf,EAAqBL,EAAOM,SAElCN,EAAOM,SAASR,MAAML,MACtB,IAAMc,EAA4Bd,KAAKI,SAEvCG,EAAOG,KAAKL,MAAML,MAClB,IAAMU,EAA4BV,KAAKI,SAEvCJ,KAAKI,SACH9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,IAEEH,EAAAC,EAAAC,cAAA,QACEC,UAAU,SACVG,QAAU,WACR8D,EAAK9D,QAAQ,CAAEmD,KAAMC,OAAMJ,QAASL,MAHxC,UAKQ,KAERjD,EAAAC,EAAAC,cAAA,QACEC,UAAU,WACVG,QAAU,kBAAM8D,EAAK9D,QAAQ,CAAEmD,KAAOC,OAAMJ,cAE1CE,EAJJ,IAIa,KAbf,KAeMJ,EAfN,6CAuBSkB,GAAmC,IAAAC,EAAA7B,KAC5CvC,EAAqB,gBAEN,OAAfuC,KAAKJ,OAELI,KAAKJ,MAAM0B,aAAeM,EAAaN,YAEvCtB,KAAKJ,QAAUgC,IAEfnE,GAAa,UAEjBuC,KAAKI,SACH9C,EAAAC,EAAAC,cAAA,QACEC,UAAYA,EACZG,QAAU,kBAAMiE,EAAKjE,QAAQ,CAAEmD,KAAMe,YAAWlB,QAAUgB,MAExDA,EAAaX,wCAMbc,GAAqB,IAAAC,EAAAhC,KACvBvC,EAAY,QAEG,OAAfuC,KAAKJ,OAAkBI,KAAKJ,MAAM0B,aAAeS,EAAMT,YAActB,KAAKJ,QAAUmC,IACtFtE,GAAa,UAGfuC,KAAKI,SACH9C,EAAAC,EAAAC,cAAA,QACEC,UAAYA,EACZG,QAAU,kBAAMoE,EAAKpE,QAAQ,CAAEmD,KAAMe,YAAWlB,QAAUmB,MAExDA,EAAMd,2CAKHgB,GACTjC,KAAKI,SAAW9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAcwE,EAAShB,eAxLjBiB,cCO3B,SAASC,EAAMxF,GAA6C,IACjEgD,EAAwBhD,EAAxBgD,KAAMyC,EAAkBzF,EAAlByF,cAEd,GAAa,OAATzC,EACF,OAAO,KAGT,IAAIC,EAAsB,KACpByC,EAA2B,IAAIC,kBAAgB3C,GAEjD0C,EAAOE,yBAAyBvB,SAClCpB,EAAQyC,EAAOE,cAAc3C,OAG3ByC,EAAOE,yBAAyBT,cAClClC,EAAQyC,EAAOE,cAAcvE,QAG/B,IAAMwE,EAAyB,IAAI9C,EAAaC,EAAMyC,EAAexC,GAErE,OACEtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZ+E,EAAQC,SCsBDC,UAAMC,KAErB,SAAoBhG,GAA4C,IAE5DiG,EAQyBjG,EARzBiG,QAGAnD,GAKyB9C,EAPzBkG,MAOyBlG,EALzB8C,WAKyB9C,EAJzBmG,cAIyBnG,EAHzBoG,YAGyBpG,EAFzBqG,UAEyBrG,EADzBsG,YAGF,OACE3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC4B,EAAD,CACEC,MAAQ,kBAyBhB,SAAgB1C,GAAqC,IAC3CmG,EAA+DnG,EAA/DmG,cAAeG,EAAgDtG,EAAhDsG,YAAaC,EAAmCvG,EAAnCuG,QAEpC,GAAIJ,aAAyBK,OAC3B,OAGFF,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAET8C,WAAY,EAEZuD,UAAYK,OAAOC,WAAW,kBA6GlC,SAASC,EAAS5G,GAA8B,IACxCiG,EAAgFjG,EAAhFiG,QAASC,EAAuElG,EAAvEkG,MAAOC,EAAgEnG,EAAhEmG,cAAerD,EAAiD9C,EAAjD8C,UAAWsD,EAAsCpG,EAAtCoG,YAAaE,EAAyBtG,EAAzBsG,YAAaC,EAAYvG,EAAZuG,QAE1E,IAAOzD,EACL,OAGF,GAAIqD,aAAyBK,OAO3B,YANAF,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAET8C,WAAY,EACZuD,eAAYQ,KAMhB,IAAIC,EAAYb,EAAQA,EAAQvF,OAAS,GAAGqG,QAC5C,IAAMrB,EAA2B,IAAIC,kBAAgBmB,GAErDX,EAAgBT,EAAOE,cAEvB,GAAIF,EAAOE,yBAAyBY,OAalC,OAZAP,EAAU,CAAEa,QAEZR,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAETiG,UACAC,QACAC,gBAEArD,WAAY,EACZuD,eAAYQ,KAOhB,IAAIG,EAAiB,EACrB,IAAMC,EAAsCb,EAAYc,KACtD,SAACD,EAAyBjG,GAA1B,OACGgG,EAAQhG,EAxEf,SAAsBiG,EAAyBE,GAC7C,GAAIA,aAAsBF,EAAW7C,MAC9B+C,aAAqB9C,QAAQ4C,EAAWhD,mBAAmBD,UAC3DmD,EAAU9F,OAAOsD,aAAesC,EAAWhD,QAAQF,KAAKY,WAE3D,OAAO,EAEX,GAAIwC,aAAsBF,EAAW7C,MAC9B+C,aAAqB9C,QAAQ4C,EAAWhD,mBAAmBmD,YAC3DD,EAAUlE,MAAM6B,gBAAgBd,UAChCmD,EAAUlE,MAAM6B,KAAKZ,SAASS,aAAesC,EAAWhD,QAAQU,WAErE,OAAO,EAET,GAAIwC,aAAsBF,EAAW7C,MAC9B+C,aAAqBhC,aAAa8B,EAAWhD,mBAAmBoD,gBAChEF,EAAU9F,OAAOsD,aAAesC,EAAWhD,QAAQU,WAExD,OAAO,EAET,GAAIwC,aAAsBF,EAAW7C,MAC9B+C,aAAqBhC,aAAa8B,EAAWhD,mBAAmBqD,SAChEH,EAAU9F,OAAOsD,aAAesC,EAAWhD,QAAQU,WAExD,OAAO,EAGT,OAAO,EA8CH4C,CAAYN,EAAYvB,EAAOE,iBAGnC,QAAmBiB,IAAfI,EAWF,OAVAb,EAAYoB,OAAOR,EAAO,QAE1BV,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAET8C,WAAY,EAEZsD,cACAC,eAAYQ,KAOhBC,EAAMpB,EAAO+B,UACbvB,IAEAI,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAETiG,QAAU,CAAEa,GACZZ,QACAC,gBACAE,UAAYK,OAAOC,WAAW,kBAAMC,EAAQzD,OAAAsD,EAAA,EAAAtD,CAAA,GACvCnD,EADsC,CAEzCiG,QAAU,CAAEa,GACZZ,QACAC,oBACEI,MAvLgCK,CAAQzD,OAAAsD,EAAA,EAAAtD,CAAA,GACvCnD,EADsC,CAEzC8C,WAAY,MAEVyD,MAxCc7D,CAAM1C,IACpB2C,OAAS,kBA2CjB,SAAiB3C,GAAqC,IAC5CsG,EAAkDtG,EAAlDsG,YAAaD,EAAqCrG,EAArCqG,UAErBK,OAAOgB,aAAarB,GAEpBC,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAGT8C,WAAY,EACZuD,eAAYQ,KApDOlE,CAAO3C,IACtB4C,OAAS,kBAuDjB,SAAiB5C,GAAqC,IAC9CiG,EAAsEjG,EAAtEiG,QAASC,EAA6DlG,EAA7DkG,MAAOC,EAAsDnG,EAAtDmG,cAAeG,EAAuCtG,EAAvCsG,YAErC,GAAIH,aAAyBK,OAC3B,OAGF,IAAIM,EAAMb,EAAQA,EAAQvF,OAAS,GAAGqG,QAEhCrB,EAA2B,IAAIC,kBAAgBmB,GAIrD,GAFAX,EAAgBT,EAAOE,cAEnBF,EAAOE,yBAAyBY,OAOlC,YANAF,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAGTmG,mBAMJW,EAAMpB,EAAO+B,UACbvB,IAEAI,EAAYnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAETiG,QAAO,GAAAlF,OAAAoC,OAAAwE,EAAA,EAAAxE,CAAQ8C,GAAR,CAAiBa,IACxBZ,QAEAC,mBAtFmBvD,CAAO5C,IACtB6C,QAAU,kBAyFlB,SAAkB7C,IAGhBsG,EAF6CtG,EAAvCsG,aAEMnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAETiG,QAAU,CAAEjG,EAAM8G,KAClBZ,MAAQ,EAERpD,WAAY,EACZqD,cAAgB,KAChBC,YAAc,MAnGMvD,CAAQ7C,IACxB8C,UAAYA,IAGdnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIc,IAAKsE,EAAQvF,OAAS,EAAGI,UAAU,cACrCH,EAAAC,EAAAC,cAAC2E,EAAD,CACEC,cAAgB,SAACwB,GAAD,OAgG5B,SAAwBjH,EAA6BiH,IAGnDX,EAF6CtG,EAAvCsG,aAEMnD,OAAAsD,EAAA,EAAAtD,CAAA,GACPnD,EADM,CAEToG,YAAW,GAAArF,OAAAoC,OAAAwE,EAAA,EAAAxE,CAAQnD,EAAMoG,aAAd,CAA2Ba,OArGexB,CAAczF,EAAOiH,IAClEjE,KAAOiD,EAAQA,EAAQvF,OAAS,MCpErC,SACLkH,EACAC,EACAC,EACAC,GAGE,IAFA,IAAMC,EAAsB,IAAIC,MAAMJ,EAAKD,EAAO,GAEzCM,EAAI,EAAGC,EAAIN,EAAIM,GAAKP,IAAQO,EACnCH,EAAOE,KAAOH,EAAGD,EAASK,GAAIA,GAGhC,OAAOH,ED6DDI,CAAe,EAAGnC,EAAQvF,OAAS,EAAGuF,EAAS,SAACa,EAAKqB,GAAN,OAC7CxH,EAAAC,EAAAC,cAAA,MAAIc,IAAMwG,EAAIrH,UAAU,gBACtBH,EAAAC,EAAAC,cAAC2E,EAAD,CAAMC,cAAgB,aAAWzC,KAAO8D,UA5CtD,SAAqBuB,EAAiCC,GACpD,OACED,EAASvF,YAAcwF,EAASxF,WAEhCuF,EAASnC,QAAUoC,EAASpC,OAE5BmC,EAAS9B,UAAY+B,EAAS/B,gBExCnB,SAASgC,EAAQvI,GAAwC,IAC9DwI,EAAuCxI,EAAvCwI,MAAOC,EAAgCzI,EAAhCyI,SACTC,EAsBR,SAAoBF,GAClB,OAAOrF,OAAAsD,EAAA,EAAAtD,CAAA,GACFqF,EADL,CAEEG,qBAAuBH,EAAMG,qBAAqBC,IAAI,SAACC,GACrD,OAAO1F,OAAAsD,EAAA,EAAAtD,CAAA,GACF0F,EADL,CAEE/B,IAAM,KACNb,QAAU,GACVnD,WAAY,EACZqD,cAAgB,KAChBC,YAAc,GACdC,eAAYQ,QAjCUiC,CAAUN,GAEhCO,EAiFR,SAAoBC,GAClB,IAAMC,EAAO,IAAIC,KAAK,CAAEF,GAAW,CACjC5E,KAAM,qBASR,OAAOsC,OAAOyC,IAAIC,gBAAgBH,GA5FZI,CADMC,KAAKC,UAAUb,IAG3C,OACE/H,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UACJL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACfH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACV0I,KAAOT,EACPU,SAAS,0BACTxI,QAAU,kBAAM0F,WAAW,kBAAMD,OAAOyC,IAAIO,gBAAgBX,IAAO,MAEnEpI,EAAAC,EAAAC,cAAA,KAAGG,GAAG,WAAWF,UAAU,qCAE7BH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,OAAOuF,OAAO,mBAAmB3I,GAAG,QAAQG,SAAW,SAAC+G,GAAD,OAgDzE,SAAkB9G,EAAuCqH,GAA8C,IAClFmB,EAAYxI,EAAvBC,OAAWuI,MACnB,GAAc,OAAVA,EACF,OAGF,IAAMC,EAAcD,EAAM,GACpBE,EAAsB,IAAIC,WAChCD,EAAOE,OAAS,SAAC5I,GACf,IAlCcsH,EAkCRF,EAAmBc,KAAKW,MAAMH,EAAO9B,QAE3CS,GApCcC,EAoCGF,EAnCZrF,OAAAsD,EAAA,EAAAtD,CAAA,GACFuF,EADL,CAEEC,qBAAuBD,EAAWC,qBAAqBC,IAAI,SAACC,GAC1D,IAAM/B,EAYZ,SAA0B7G,EAAqBuI,GAAwB,IAC7D0B,EAA4C1B,EAA5C0B,iBAAkBC,EAA0B3B,EAA1B2B,WAEpBC,EAAwBC,mBAASpK,EAAY,CAAEqK,cAAgB,CAAC,UAAMJ,qBAG5E,OAFkBD,gBAAMG,EAAQD,GAhBVI,CAAgB1B,EAAW5I,WAAYyI,GAEzD,OAAOvF,OAAAsD,EAAA,EAAAtD,CAAA,GACF0F,EADL,CAEE/B,MACAb,QAAU,CAAEa,YA8BlBgD,EAAOU,WAAWX,GA9D4DY,CAAQvC,EAAGO,MACrF9H,EAAAC,EAAAC,cAAA,SAAO6J,QAAQ,SAAf,oBCJN,IAAMC,EAA0B,CAC9BC,KAAO,kDACPC,MAAQ,iFACRC,IAAM,wEAGNC,OAAS,qGACTC,SAAW,gJACXC,SAAW,+IACXC,OAAS,+IACTC,OAAS,+IACTC,UAAY,mMACZC,QAAU,2DACVC,UAAY,0HACZC,IAAM,qGACNC,IAAM,qEACNC,OAAS,iHACTC,IAAM,oGACNC,OAAS,6GACTC,MAAQ,4FACRC,MAAQ,gFACRC,UAAY,wLACZC,IAAM,iEACNC,MAAQ,kCAgBWC,cACnB,SAAAA,EAAajM,GAAgB,IAAAkD,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4I,IAC3B/I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8I,GAAAzI,KAAAH,KAAMrD,KAEDuK,gBAAkBrH,EAAKqH,gBAAgB2B,KAArB/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACvBA,EAAKiJ,eAAiBjJ,EAAKiJ,eAAeD,KAApB/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKkJ,qBAAuBlJ,EAAKkJ,qBAAqBF,KAA1B/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC5BA,EAAKmJ,cAAgBnJ,EAAKmJ,cAAcH,KAAnB/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KANM,IAAAoJ,EFrExB,SAAmBvE,EAAewE,GAEvC,IAAIC,EAEJ,MAAO,CACL,WAAiD,QAAAC,EAAAC,UAAAhM,OAA1ByD,EAA0B,IAAA8D,MAAAwE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAA1BxI,EAA0BwI,GAAAD,UAAAC,GAC/CjG,OAAOgB,aAAa8E,GAEpBA,EAAQ9F,OAAOC,WAAW,WACxBoB,EAAE6E,WAAF,EAAMzI,IACLoI,IAEL,WACE7F,OAAOgB,aAAa8E,KE+DGK,CAAS3J,EAAK4J,UAAUZ,KAAf/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAA2B,KAPlC6J,EAAA5J,OAAA6J,EAAA,EAAA7J,CAAAmJ,EAAA,GAOpBW,EAPoBF,EAAA,GAOZG,EAPYH,EAAA,GAQ3B7J,EAAK4J,UAAYG,EACjB/J,EAAKiK,aAAeD,EACpBhK,EAAK/C,aAAe+C,EAAK/C,aAAa+L,KAAlB/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAK9C,SAAW8C,EAAK9C,SAAS8L,KAAd/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKkK,mBAAqBlK,EAAKkK,mBAAmBlB,KAAxB/I,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAE1BwD,OAAO2G,iBAAiB,aAAcnK,EAAKmJ,eAE3C,IAAMpM,EAAsBiD,EAAKkJ,uBAhBN,OAkB3BlJ,EAAKsF,MAAQ,CACX8E,YAAc,CACZrN,aACAC,cAAgBD,EAAWS,OAC3BL,YAAc,MAEhB6J,kBAAmB,EACnBC,WAAUhH,OAAAsD,EAAA,EAAAtD,CAAA,GAAQwH,EAAiBzH,EAAKiJ,kBAExCxD,qBAAuB,IA3BEzF,wEAiCnB,IAAAY,EAAAT,KAAAkK,EAMOlK,KAAKmF,MANZgF,EAAAD,EAEND,YAAgBrN,EAFVuN,EAEUvN,WAAYC,EAFtBsN,EAEsBtN,cAAeG,EAFrCmN,EAEqCnN,YAG3CsI,GALM4E,EAGNrD,iBAHMqD,EAINpD,WAJMoD,EAKN5E,sBAGF,OACEhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAC0H,EAAD,CAAQC,MAAOnF,KAAKmF,MAAOC,SAAW,SAACD,GAAD,OAAsB1E,EAAK2J,SAASjF,MAE1E7H,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACV6H,EAAqBC,IAAI,SAACJ,EAAyBL,GAA1B,OACzBxH,EAAAC,EAAAC,cAAA,MAAIc,IAAM6G,EAAMkF,OACd/M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBG,QAAU,kBAAM6C,EAAKsJ,mBAAmBjF,MAC9ExH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,4BAAqB2H,EAAMvI,aAE7BU,EAAAC,EAAAC,cAAC8M,EAADxK,OAAAyK,OAAA,GACOpF,EADP,CAEElC,YAAc,SAACkC,GAAD,OAA6B1E,EAAK+J,wBAAwBrF,EAAOL,WAMvFxH,EAAAC,EAAAC,cAACd,EAAD,CACAE,WAAaA,EACbC,cAAgBA,EAChBC,aAAekD,KAAKlD,aACpBC,SAAWiD,KAAKjD,SAChBC,YAAcA,IAGdM,EAAAC,EAAAC,cAAA,OAAKG,GAAG,8CAMHf,GAETgG,QAAQ6H,UAAU,GAAI,cAAe,IAAMC,UAAU9N,iFAOzCA,EAAqBC,GACjCmD,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GAAmBE,KAAKmF,MAAxB,CAA+B8E,YAAc,CAAErN,aAAYC,gBAAeG,YAAc,SACxFgD,KAAKyJ,UAAU7M,mDAGQuI,EAAyBxB,GAAuB,IAC/D2B,EAAoCtF,KAAKmF,MAAzCG,qBAERA,EAAqB3B,GAASwB,EAE9BnF,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GACKE,KAAKmF,MADV,CAEEG,qEAIgB3B,GAClBgH,QAAQC,IAAIjH,GADsB,IAE1B2B,EAAoCtF,KAAKmF,MAAzCG,qBAERA,EAAqBnB,OAAOR,EAAO,GAEnC3D,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GACKE,KAAKmF,MADV,CAEEG,6DAKFtF,KAAK8J,eADY,IAAAe,EAGyE7K,KAAKmF,MAH9E2F,EAAAD,EAGTZ,YAAgBrN,EAHPkO,EAGOlO,WAAYC,EAHnBiO,EAGmBjO,cAAkByI,EAHrCuF,EAGqCvF,qBAGtD1C,QAAQ6H,UAAU,GAAI,GAAI,IAAMC,UAAU9N,IAE1C,IACE,IAAM6G,EAAYzD,KAAKkH,gBAAgBtK,GAEvCgG,QAAQ6H,UAAU,GAAI,GAAI,IAAMC,UAAU,KAE1C,IAAMK,EAAoC,CACxCV,MAAQW,KAAKC,MAAMC,WACnBtO,aACA6G,MACAb,QAAU,CAAEa,GACZZ,MAAQ,EAERpD,WAAY,EACZqD,cAAgB,KAChBC,YAAc,GACdC,eAAYQ,EACZN,QAAU,IAGZlD,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GACKE,KAAKmF,MADV,CAEE8E,YAAc,CACZrN,WAAa,GACbC,cAAgB,EAChBG,YAAc,MAEhBsI,qBAAoB,GAAA5H,OAAAoC,OAAAwE,EAAA,EAAAxE,CAAQwF,GAAR,CAA8ByF,OAGpD,MAAOI,GACPnL,KAAKyJ,UAAU7M,GACf+N,QAAQC,IAAIO,GAEZnL,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GACKE,KAAKmF,MADV,CAEE8E,YAAc,CACZrN,aACAC,gBACAG,YAAcmO,sDAQpB,OAAOC,UAAU/H,OAAOgI,SAASC,KAAKC,UAAU,4CAG1B,IACeC,EAA6BxL,KAAKmF,MAA/D8E,YAAgBrN,WAClBA,EAAsBoD,KAAK+I,uBAE7ByC,IAAgB5O,EAMpBoD,KAAKoK,SAALtK,OAAAsD,EAAA,EAAAtD,CAAA,GACKE,KAAKmF,MADV,CAEE8E,YAAc,CACZrN,aACAC,cAAgBD,EAAWS,OAC3BL,YAAc,SAThB2N,QAAQC,IAAI,0DAcChO,GAA2B,IAAA6O,EAKUzL,KAAKmF,MAAjD0B,EALkC4E,EAKlC5E,iBAAkBC,EALgB2E,EAKhB3E,WAEpBC,EAAwBC,mBAASpK,EAAY,CAAEqK,cAAgB,CAAC,UAAMJ,qBAG5E,OAFkBD,gBAAMG,EAAQD,4CAMhC,OAAOb,KAAKW,MAAMvD,OAAOqI,aAAaC,QAAQ,eAAiB,aA7MlCC,aCxDbC,QACW,cAA7BxI,OAAOgI,SAASS,UAEe,UAA7BzI,OAAOgI,SAASS,UAEhBzI,OAAOgI,SAASS,SAASC,MACvB,2DCZNC,IAASC,OAAO3O,EAAAC,EAAAC,cAAC0O,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.174c4130.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, SetStateAction, Dispatch, KeyboardEvent } from 'react'\n\nimport './EditorStyle.css'\n\n\ninterface EditorProperties {\n  expression : string\n  caretPosition : number\n  onExpression (newExpression : string, caretPosition : number) : void\n  onSubmit () : void\n  syntaxError : Error | null\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const { expression, caretPosition, onExpression, onSubmit, syntaxError } : EditorProperties = props\n  const lines : number = Math.min(expression.split('\\n').length, expression.length)\n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    onExpression(expression, caretPosition)\n  }\n\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.shiftKey && event.key === 'Enter') {\n      event.preventDefault()\n      onSubmit()\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      { syntaxError ? `${syntaxError}` : '' }\n      <i id='editorEnter' className=\"far fa-play-circle fa-3x\" onClick={ onSubmit } />\n      {/* <button id='editorEnter' onClick={ onSubmit } >\n        Δ\n      </button> */}\n      <InputField\n        expression={ expression }\n        lines={ lines }\n        caretPosition={ caretPosition }\n        onChange={ onChange }\n        onKeyDown={ onKeyDown }\n      />\n    </div>\n  )\n}\n\ninterface InputProps {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void,\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { expression, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ expression }\n      placeholder='(λ f . (λ x . f (x x)) (λ x . f (x x)))'\n      wrap='hard'\n      autoFocus\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n        }\n      } }\n    />\n  )\n}","import React from 'react'\n\nimport './ControlsStyle.css'\n\n\nexport interface ControlsProps {\n  onRun () : void,\n  onStop () : void,\n  onStep () : void,\n  onClear () : void,\n  isRunning : boolean,\n}\n\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    onRun,\n    onStop,\n    onStep,\n    onClear,\n    isRunning,\n  } : ControlsProps = props\n  \n  return (\n    <div id=\"controls\">\n\n      {\n        isRunning ?\n        <i\n          className=\"enabled fas fa-pause fa-2x\"\n          onClick={ onStop }\n        />\n          :\n        <i\n          className=\"enabled fas fa-forward fa-2x\"\n          onClick={ onRun }\n        />  \n      }\n\n      {/* <button\n        className='controlButton'\n        \n        disabled={ false }\n      >\n        { isRunning ? 'STOP' : 'RUN' }\n      </button> */}\n      {/* <button className='controlButton' onClick={ onStep } disabled={ isRunning }>STEP</button> */}\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-play fa-2x\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-play fa-2x\"\n          onClick={ onStep }\n        />\n      }\n\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-redo-alt fa-2x\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-redo-alt fa-2x\"\n          onClick={ onClear }\n        />\n      }\n      {/* <i\n        className=\"fas fa-redo-alt fa-2x\"\n        onClick={ onClear }\n       />\n\n      <button className='controlButton' onClick={ onClear } disabled={ isRunning }>CLEAR</button> */}\n    </div>\n  )\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumber, Expansion, Macro } from \"lambdulus-core\";\n\nimport { Breakpoint } from \"./Evaluator\";\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className='argument'\n            onClick={ () => this.onClick({ type : Beta, context }) }\n          >\n            { lambda.body.argument.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type : Beta, context : lambda })}\n            }>\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly redex : AST | null,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication(application: Application) : void {\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === application.identifier\n          &&\n        this.redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda(lambda: Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      const acc : JSX.Element = (\n        <span\n          className='argument'\n          onClick={ () => this.onClick({ type : Beta, context }) }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type: Beta, context: lambda })}\n            }>\n              λ { ' ' }\n          </span>\n          <span\n            className='argument'\n            onClick={ () => this.onClick({ type : Beta, context }) }\n          >\n            { args } { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumber(churchNumber: ChurchNumber) : void {\n    let className : string = 'churchnumeral'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === churchNumber.identifier\n          &&\n        this.redex === churchNumber\n      ) {\n        className += ' redex'\n    }\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : churchNumber }) }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro(macro: Macro) : void {\n    let className = 'macro'\n\n    if (this.redex !== null && this.redex.identifier === macro.identifier && this.redex === macro) {\n      className += ' redex'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : macro }) }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}","import React from 'react'\n\nimport { AST, Beta, Expansion, NormalEvaluator } from 'lambdulus-core';\n\nimport './StepStyle.css'\nimport { Breakpoint } from './Evaluator'\nimport ReactPrinter from './ReactPrinter';\n\n\ninterface StepProperties {\n  tree : AST | null\n  addBreakpoint (breakpoint : Breakpoint) : void\n}\n\nexport default function Step (props : StepProperties) : JSX.Element | null {\n  const { tree, addBreakpoint } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  let redex : AST | null  = null\n  const normal : NormalEvaluator = new NormalEvaluator(tree)\n  \n  if (normal.nextReduction instanceof Beta) {\n    redex = normal.nextReduction.redex\n  }\n  \n  if (normal.nextReduction instanceof Expansion) {\n    redex = normal.nextReduction.target\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, redex)\n\n  return (\n    <span className='step'>\n      { printer.print() }\n    </span>\n  )\n}","import React, { Component } from 'react'\n\nimport { AST, MacroMap, ASTReduction, Token, parse, tokenize, None, NormalEvaluator, Beta, Lambda, Variable, Expansion, ChurchNumber, Macro } from \"lambdulus-core\";\n\nimport './EvaluatorStyle.css'\nimport Controls from './Controls';\nimport Step from './Step';\nimport { mapRightFromTo } from '../misc'\n\n// import Slider, { Range } from 'rc-slider'\n// import 'rc-slider/assets/index.css'\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n}\n\nexport interface EvaluationState {\n  __key : string\n  expression : string\n  ast : AST\n  history : Array<AST>\n  steps : number\n  // isStepping : boolean\n  isRunning : boolean\n  lastReduction : ASTReduction | null\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n\n}\n\ninterface EvaluationProperties {\n  __key : string\n  ast : AST\n  expression : string\n  history : Array<AST>\n  steps : number\n  // isStepping : boolean\n  isRunning : boolean\n  lastReduction : ASTReduction | null\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n  updateState (state : EvaluationState) : void\n}\n\nfunction equalProps (oldProps : EvaluationProperties, newProps : EvaluationProperties) : boolean {\n  return (\n    oldProps.isRunning === newProps.isRunning\n      &&\n    oldProps.steps === newProps.steps\n      &&\n    oldProps.timeout === newProps.timeout\n  )\n} \n\nexport default React.memo(Evaluator, equalProps)\n\nfunction Evaluator (props : EvaluationProperties) : JSX.Element {\n  const {\n    history,\n    steps,\n    // isStepping,\n    isRunning,\n    lastReduction,\n    breakpoints,\n    timeoutID,\n    updateState,\n  } : EvaluationProperties = props\n\n  return (\n    <div className='evaluator'>\n      <Controls\n        onRun={ () => onRun(props) }\n        onStop={ () => onStop(props) }\n        onStep={ () => onStep(props) }\n        onClear={ () => onClear(props) }\n        isRunning={ isRunning }\n      />\n\n      <ul>\n        <li key={history.length - 1} className='activeStep'>\n          <Step\n            addBreakpoint={ (breakpoint : Breakpoint) => addBreakpoint(props, breakpoint) }\n            tree={ history[history.length - 1] }\n          />\n        </li>\n        {\n          mapRightFromTo(0, history.length - 2, history, (ast, i) =>\n            <li key={ i } className='inactiveStep' >\n              <Step addBreakpoint={ () => {} } tree={ ast } />\n            </li>)\n        }\n      </ul>\n    </div>\n  )\n} \n\nfunction onRun (props : EvaluationProperties) : void {\n  const { lastReduction, updateState, timeout } : EvaluationProperties = props\n\n  if (lastReduction instanceof None) {\n    return\n  }\n\n  updateState({\n    ...props,\n    isRunning : true,\n    // isStepping : true,\n    timeoutID : window.setTimeout(() => __onRun({\n      ...props,\n      isRunning : true,\n      // isStepping : true,\n    }), timeout),\n  })\n}\n\nfunction onStop (props : EvaluationProperties) : void {\n  const { updateState, timeoutID } : EvaluationProperties = props\n\n  window.clearTimeout(timeoutID)\n\n  updateState({\n    ...props,\n    // isStepping : false,\n    isRunning : false,\n    timeoutID : undefined\n  })\n}\n\nfunction onStep (props : EvaluationProperties) : void {\n  let { history, steps, lastReduction, updateState } : EvaluationProperties = props\n  \n  if (lastReduction instanceof None) {\n    return\n  }\n\n  let ast = history[history.length - 1].clone()\n\n  const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n  lastReduction = normal.nextReduction\n\n  if (normal.nextReduction instanceof None) {\n    updateState({\n      ...props,\n      // isStepping : false,\n      lastReduction\n    })\n    \n    return\n  }\n\n  ast = normal.perform()\n  steps++\n\n  updateState({\n    ...props,\n    history : [ ...history, ast ],\n    steps,\n    // isStepping : true,\n    lastReduction,\n  })\n}\n\nfunction onClear (props : EvaluationProperties) : void {\n  let { updateState } : EvaluationProperties = props\n\n  updateState({\n    ...props,\n    history : [ props.ast ],\n    steps : 0,\n    // isStepping : false,\n    isRunning : false,\n    lastReduction : null,\n    breakpoints : [],\n  })\n}\n\nfunction addBreakpoint (props: EvaluationProperties, breakpoint : Breakpoint) : void {\n  let { updateState } : EvaluationProperties = props\n\n  updateState({\n    ...props,\n    breakpoints : [ ...props.breakpoints, breakpoint ],\n  })\n}\n\nfunction shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n  if (reduction instanceof (breakpoint.type as any)\n      && reduction instanceof Beta && breakpoint.context instanceof Lambda\n      && reduction.target.identifier === breakpoint.context.body.identifier\n    ) {\n      return true\n  }\n  if (reduction instanceof (breakpoint.type as any)\n      && reduction instanceof Beta && breakpoint.context instanceof Variable\n      && reduction.redex.left instanceof Lambda\n      && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n  ) {\n    return true\n  }\n  if (reduction instanceof (breakpoint.type as any)\n      && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumber\n      && reduction.target.identifier === breakpoint.context.identifier\n  ) {\n    return true\n  }\n  if (reduction instanceof (breakpoint.type as any)\n      && reduction instanceof Expansion && breakpoint.context instanceof Macro\n      && reduction.target.identifier === breakpoint.context.identifier\n  ) {\n    return true\n  }\n\n  return false\n}\n\nfunction __onRun (props : EvaluationProperties) {\n  let { history, steps, lastReduction, isRunning, breakpoints, updateState, timeout } = props\n  \n  if ( ! isRunning) {\n    return\n  }\n  \n  if (lastReduction instanceof None) {\n    updateState({\n      ...props,\n      isRunning : false,\n      timeoutID : undefined,\n    })\n\n    return\n  }\n\n  let ast : AST = history[history.length - 1].clone()\n  const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n  lastReduction = normal.nextReduction\n  \n  if (normal.nextReduction instanceof None) {\n    history = [ ast ]\n\n    updateState({\n      ...props,\n      history,\n      steps,\n      lastReduction,\n      // isStepping : false,\n      isRunning : false,\n      timeoutID : undefined,\n    })\n\n    return\n  }\n\n  // TODO: maybe refactor a little\n  let index : number = 0\n  const breakpoint : Breakpoint | undefined = breakpoints.find(\n    (breakpoint : Breakpoint, id) =>\n      (index = id,\n      shouldBreak(breakpoint, normal.nextReduction))\n  )\n\n  if (breakpoint !== undefined) {\n    breakpoints.splice(index, 1)\n\n    updateState({\n      ...props,\n      isRunning : false,\n      // isStepping : false,\n      breakpoints,\n      timeoutID : undefined,\n    })\n\n    return\n  }\n  //\n\n  ast = normal.perform()\n  steps++\n\n  updateState({\n    ...props,\n    history : [ ast ],\n    steps,\n    lastReduction,\n    timeoutID : window.setTimeout(() => __onRun({\n      ...props,\n      history : [ ast ],\n      steps,\n      lastReduction,\n    }), timeout),\n  })\n}","export function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function mapRightFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = to; i >= from; --i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }","import React, { ChangeEvent } from 'react'\n\nimport './TopBarStyle.css'\n\nimport { AppState } from '../App'\nimport { EvaluationState } from './Evaluator';\nimport { AST, BasicPrinter, tokenize, parse, Token } from 'lambdulus-core';\n\n\ninterface TopBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n}\n\nexport default function TopBar (props : TopBarProperties) : JSX.Element {\n  const { state, onImport } : TopBarProperties = props\n  const dehydrated : object = dehydrate(state)\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n        <i className=\"icon fas fa-bars fa-2x\" />\n        <i className=\"save icon fas fa-save fa-2x\"></i>\n      <a\n        className='export icon'\n        href={ link }\n        download=\"notebook_lambdulus.json\"\n        onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n      >\n        <i id='download' className=\"fas fa-cloud-download-alt fa-2x\"></i>\n      </a>\n      <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n      <label htmlFor=\"input\">Import notebook</label>\n    </div>\n  )\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedExpressions : state.submittedExpressions.map((evaluation : EvaluationState) => {\n      return {\n        ...evaluation,\n        ast : null as any,\n        history : [],\n        isRunning : false,\n        lastReduction : null,\n        breakpoints : [],\n        timeoutID : undefined,\n      }\n    })\n  }\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  return {\n    ...dehydrated,\n    submittedExpressions : dehydrated.submittedExpressions.map((evaluation : EvaluationState) => {\n      const ast : AST = parseExpression(evaluation.expression, dehydrated)\n\n      return {\n        ...evaluation,\n        ast,\n        history : [ ast ],\n\n      }\n    })\n  }\n}\n\nfunction parseExpression (expression : string, state : AppState) : AST {\n  const { singleLetterVars, macroTable } : AppState = state\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file)\n\n  \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  // If we are replacing a previously generated file we need to\n  // manually revoke the object URL to avoid memory leaks.\n  // if (textFile !== null) {\n  //   window.URL.revokeObjectURL(textFile);\n  // }\n\n  return window.URL.createObjectURL(data);\n}","import React, { Component, ChangeEvent } from 'react';\n\nimport {\n  AST,\n  tokenize,\n  parse,\n  ASTReduction,\n  Token,\n  NormalEvaluator,\n  None,\n  builtinMacros,\n  MacroTable,\n  Application,\n  Beta,\n  Lambda,\n  Variable,\n  ChurchNumber,\n  Expansion,\n  Macro,\n  MacroMap\n} from 'lambdulus-core'\n\nimport './App.css'\nimport Editor from './components/Editor'\nimport { debounce } from './misc';\nimport Evaluator, { Breakpoint, EvaluationState } from './components/Evaluator';\nimport TopBar from './components/TopBar';\n\n\nconst HANDY_MACROS : MacroMap = {\n  FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  INFIX : 'APPLY (λ l op r . op l r)',\n}\n\nexport interface AppState {\n  editorState : {\n    expression : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  \n  singleLetterVars : boolean\n  macroTable : MacroMap\n\n  submittedExpressions : Array<EvaluationState>\n}\n\nexport default class App extends Component<any, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.parseExpression = this.parseExpression.bind(this)\n    this.getSavedMacros = this.getSavedMacros.bind(this)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    const [update, cancel] = debounce(this.updateURL.bind(this), 500)\n    this.updateURL = update\n    this.cancelUpdate = cancel\n    this.onExpression = this.onExpression.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onRemoveExpression = this.onRemoveExpression.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n\n    this.state = {\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      },\n      singleLetterVars : false,\n      macroTable : { ...HANDY_MACROS, ...this.getSavedMacros() },\n\n      submittedExpressions : [],\n\n    }\n    \n  }\n\n  render () {\n    const {\n      editorState : { expression, caretPosition, syntaxError },\n      singleLetterVars,\n      macroTable,\n      submittedExpressions\n    } : AppState = this.state\n\n    return (\n      <div className='app'>\n\n        <TopBar state={this.state} onImport={ (state : AppState) => this.setState(state) } />\n\n        <ul className='evaluatorSpace' >\n          { submittedExpressions.map((state : EvaluationState, i : number) =>\n            <li key={ state.__key }>\n              <div className='evaluationHeader'>\n                <i className=\"far fa-trash-alt fa-lg\" onClick={ () => this.onRemoveExpression(i) } />\n                <i className=\"fas fa-pencil-alt fa-lg\" />\n                <p>New Expression: { state.expression }</p>\n              </div>\n              <Evaluator\n                { ...state }\n                updateState={ (state : EvaluationState) => this.onUpdateEvaluationState(state, i) }\n              />\n            </li>\n            ) }\n        </ul>\n\n        <Editor\n        expression={ expression }\n        caretPosition={ caretPosition }\n        onExpression={ this.onExpression }\n        onSubmit={ this.onSubmit }\n        syntaxError={ syntaxError }\n        />\n\n        <div id=\"anchor\"></div>\n\n      </div>\n    )\n  }\n\n  updateURL (expression : string) : void {\n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"page title?\", \"#\" + encodeURI(expression))\n  }\n\n  cancelUpdate () : void {\n    // TODO: this is placeholder for cancel-debounced-function DONT REMOVE\n  }\n\n  onExpression (expression : string, caretPosition : number) : void {\n    this.setState({ ...this.state, editorState : { expression, caretPosition, syntaxError : null } } )\n    this.updateURL(expression)\n  }\n\n  onUpdateEvaluationState (state : EvaluationState, index : number) : void {\n    const { submittedExpressions } : AppState = this.state\n\n    submittedExpressions[index] = state\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  onRemoveExpression (index : number) {\n    console.log(index)\n    const { submittedExpressions } : AppState = this.state\n\n    submittedExpressions.splice(index, 1)\n\n    this.setState({\n      ...this.state,\n      submittedExpressions\n    })\n  }\n\n  onSubmit () : void {\n    this.cancelUpdate()\n    \n    const { editorState : { expression, caretPosition, }, submittedExpressions } : AppState = this.state\n    \n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"\", \"#\" + encodeURI(expression))\n\n    try {\n      const ast : AST = this.parseExpression(expression)\n      // window.location.hash = encodeURI('')\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const evaluationState : EvaluationState = {\n        __key : Date.now().toString(),\n        expression,\n        ast,\n        history : [ ast ],\n        steps : 0,\n        // isStepping : false,\n        isRunning : false,\n        lastReduction : null,\n        breakpoints : [],\n        timeoutID : undefined,\n        timeout : 10\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, evaluationState ]\n      })\n  \n    } catch (exception) {\n      this.updateURL(expression)\n      console.log(exception)\n      \n      this.setState({\n        ...this.state,\n        editorState : {\n          expression,\n          caretPosition,\n          syntaxError : exception,\n        }\n      })\n    }\n  }\n\n  getExpressionFromURL () : string {\n    // return ''\n    return decodeURI(window.location.hash.substring(1))\n  }\n\n  updateFromURL () : void {\n    const { editorState : { expression : currentExpr } } : AppState = this.state\n    const expression : string = this.getExpressionFromURL()\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    this.setState({\n      ...this.state,\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null\n      }\n    })\n  }\n\n  parseExpression (expression : string) : AST {\n    // TODO: without try and catch\n    // this method raises exception and caller handles it\n    // caller should by able to display error to user\n    // caller should store exception in editorState\n    const { singleLetterVars, macroTable } : AppState = this.state\n    \n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n\n  getSavedMacros () : MacroMap {\n    return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}