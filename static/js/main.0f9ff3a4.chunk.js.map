{"version":3,"sources":["components/InputField.tsx","components/Controls.tsx","components/Result.tsx","helpers.ts","components/UserMacros.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","width","fontSize","border","overflow","outline","resize","borderStyle","InputField","props","content","lines","onChange","caretPosition","react_default","a","createElement","value","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","selectionEnd","buttonStyle","background","borderBottom","marginLeft","marginRight","cursor","Controlls","run","step","clear","canRun","stepIn","stepBack","canStepOver","canStepIn","canGoBack","onClick","disabled","ReactPrinter","tree","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","body","Lambda","printLambdaBody","accumulator","args","argument","name","printLambdaArguments","application","right","Application","left","churchNumber","macro","variable","ASTVisitor","wordWrap","Result","printer","print","trimStr","str","trim","listStyle","padding","macroStyle","display","textAlign","paddingLeft","paddingRight","margin","borderRadius","color","userMacroStyle","paddingTop","paddingBottom","inputStyle","UserMacros","bind","listMacros","onAdd","isValidExpression","state","invalidMacro","entries","builtinMacros","map","_ref","_ref2","slicedToArray","macroName","title","key","onSubmit","objectSpread","type","event","expression","target","replace","setState","preventDefault","_this$state$value$spl","split","_this$state$value$spl2","definition","addMacro","_this2","macros","_ref3","_ref4","removeMacro","tokens","tokenize","lambdaLetters","singleLetterVars","parse","exception","Component","marginTop","resultStyle","sidebarStyle","position","top","height","backgroundColor","configWrapper","menuBtnStyle","itemStyle","marginBottom","App","parseExpression","onExpressionChange","autoSave","fn","treshold","timer","_len","arguments","length","Array","_key","window","clearTimeout","setTimeout","apply","debounce","getExpressionFromURL","updateFromURL","getMacrosFromLocalStorage","addEventListener","ast","steps","previousReduction","autoCloseParenthesis","macroTable","menuOpen","steping","briefHistory","controlProps","_this$state","className","checked","_","UserMacros_UserMacros","i","_this$state2","None","normal","NormalEvaluator","nextReduction","perform","clone","_this$state3","unshift","min","charAt","slice","encoded","encodeURI","location","hash","console","log","decodeURI","substring","JSON","localStorage","getItem","currentExpr","defineProperty","setItem","stringify","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f9ff3a4.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react'\n\n\ninterface InputProps {\n  content : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n}\n\nconst style = {\n  width: '100%',\n  fontSize: '3em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default function InputField (props : InputProps) : JSX.Element {\n  const { content, lines, onChange, caretPosition } : InputProps = props\n\n    return (\n      <textarea\n        style={ style }\n        onChange={ onChange }\n        value={ content }\n        placeholder='(λ f . (λ x . f (x x)) (λ x . f (x x)))'\n        wrap='hard'\n        autoFocus\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck={ false }\n        rows={ Math.max(lines + 1, 2) }\n        ref={ (element : HTMLTextAreaElement) => {\n          if (element !== null) {\n            element.selectionStart = caretPosition\n            element.selectionEnd = caretPosition\n          }\n        } }\n      />\n    )\n}","import React, { FunctionComponent, } from 'react'\n\n\nexport interface ControlProps {\n  run () : void,\n  step () : void,\n  clear () : void,\n  stepIn () : void,\n  stepBack () : void,\n  canRun : boolean,\n  canStepOver : boolean,\n  canStepIn : boolean,\n  canGoBack : boolean,\n}\n\nconst buttonStyle = {\n  fontSize: '1.5em',\n  background: 'none',\n  borderStyle: 'none',\n\tborderBottom: '2px solid navy',\n  marginLeft: '5px',\n  marginRight: '5px',  \n  cursor: 'pointer',\n  outline: 'none',\n}\n\nexport default function Controlls (props : ControlProps) : JSX.Element {\n  const {\n    run,\n    step,\n    clear,\n    stepIn,\n    stepBack,\n    canRun,\n    canStepOver,\n    canStepIn,\n    canGoBack,\n  } : ControlProps = props\n  \n  return (\n    <div>\n      <button style={ buttonStyle } onClick={ run } disabled={ ! canRun } >RUN</button>\n      <button style={ buttonStyle } onClick={ step } disabled={ ! canStepOver }>STEP</button>\n      <button style={ buttonStyle } onClick={ clear } disabled={ false }>CLEAR</button>\n      {/* <button style={ buttonStyle } onClick={ stepIn } disabled={ true }>STEP IN</button> */}\n      {/* <button style={ buttonStyle } onClick={ stepBack } disabled={ true }>GO BACK</button> */}\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport { AST, BasicPrinter, ASTVisitor, Macro, ChurchNumber, Variable, Lambda, Application } from 'lambdulus-core';\n\n\nclass ReactPrinter extends ASTVisitor {\n  // private expression : string = ''\n  private rendered : JSX.Element | null = null\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaBody (lambda : Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaBody(lambda.body)\n    }\n    else {\n      lambda.body.visit(this)\n    }\n  }\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaArguments (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const args : JSX.Element = \n      <span>\n        { accumulator } { lambda.body.argument.name() }\n      </span>\n      \n      this.printLambdaArguments(lambda.body, args)\n    }\n    else {\n      this.rendered = accumulator\n    }\n  }\n\n  constructor (\n    public readonly tree : AST,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: this is ugly as hell\n  onApplication(application: Application): void {\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span>\n        { left } ( { right } )\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: this is ugly as hell\n  onLambda(lambda: Lambda): void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaArguments(lambda, <span>{ lambda.argument.name() }</span>)\n      const args : JSX.Element | null = this.rendered\n\n      this.printLambdaBody(lambda)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span>\n        (λ { args } . { body } )\n      </span>\n    }\n    else {\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span>\n        (λ { args } . { body } )\n      </span>\n    }\n  }\n  \n  onChurchNumber(churchNumber: ChurchNumber): void {\n    this.rendered = <span>{ churchNumber.name() }</span>\n  }\n  \n  onMacro(macro: Macro): void {\n    this.rendered = <span>{ macro.name() }</span>\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span>{ variable.name() }</span>\n  }\n}\n\n\nconst style = {\n  fontSize: '2em',\n  wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n\n}\n\nexport default function Result (props : { tree : AST | null }) : JSX.Element | null {\n  const { tree } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree)\n\n  return (\n    <span style={ style } >\n      { printer.print() }\n    </span>\n  )\n}","export function debounce (fn : Function, treshold : number) {\n  let timer : number\n  \n  return function debounced (...args : Array<any>) {\n  \twindow.clearTimeout(timer)\n\n  \ttimer = window.setTimeout(() => {\n    \tfn(...args)\n    }, treshold)\n  }\n}\n\n// intentionaly not handling `this` - I don't want debounced callback to (ab)use `this`\n\nexport function trimStr (str : string) {\n  return str.trim()\n}","import React, { Component, ChangeEvent, SyntheticEvent } from 'react'\nimport { trimStr } from '../helpers'\nimport { MacroMap, builtinMacros, Token, tokenize, parse, AST } from 'lambdulus-core/'\n\ninterface Props {\n  disabled : boolean,\n  macros : MacroMap,\n  addMacro (name : string, definition : string) : void,\n  removeMacro (name : string) : void,\n}\n\ninterface State {\n  value : string,\n  invalidMacro : boolean,\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst macroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '1px solid gray',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'gray',\n  cursor: 'pointer',\n}\n\nconst userMacroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingTop: '3px',\n  paddingBottom: '3px',\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '2px solid black',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'black',\n  cursor: 'pointer',\n}\n\nconst inputStyle = {\n  width: '100%',\n  fontSize: '2em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  borderBottom: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default class UserMacros extends Component<Props, State> {\n  constructor (props : Props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.listMacros = this.listMacros.bind(this)\n    this.onAdd = this.onAdd.bind(this)\n    this.isValidExpression = this.isValidExpression.bind(this)\n\n    this.state = {\n      value : '',\n      invalidMacro : false,\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <span style={ { fontSize: '1.3em',  } } >Built-in Macros:</span>\n          { <ul style={ listStyle }>\n          { Object.entries(builtinMacros).map(([macroName, definition ]) => {\n              return <li title='Built-in Macro' style={ macroStyle } key={ macroName }>\n                { macroName }\n                {/* := { definition } */}\n              </li>\n            })\n          }\n          </ul> }\n        <span style={ { fontSize: '1.3em',  } } >User defined Macros:</span>\n        { this.listMacros() }\n        <br />\n        <form onSubmit={ this.onAdd } >\n          <input disabled={this.props.disabled} value={ this.state.value } onChange={ this.onChange }\n            placeholder='T := (λ t f . t)' style={ this.state.invalidMacro ? { ...inputStyle, borderBottom: '2px solid #EF3D59' } : inputStyle } autoFocus type='text'\n          />\n        </form>\n      </div>\n    )\n  }\n\n  onChange (event : ChangeEvent<HTMLInputElement>) : void {\n    let { target : { value : expression } } = event\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    this.setState({ ...this.state, value : expression, invalidMacro : false })\n  }\n\n  onAdd (event : SyntheticEvent) : void {\n    event.preventDefault()\n\n    const [ name, definition ] : Array<string> = this.state.value.split(':=').map(trimStr)\n\n    if (!definition\n        ||\n        ! this.isValidExpression(definition)) {\n      this.setState({ ...this.state, invalidMacro : true })\n      return\n    }\n    \n    \n    this.props.addMacro(name, definition)\n    this.setState({ ...this.state, value : '' })\n  }\n\n  listMacros () : JSX.Element {\n    const { macros } = this.props\n    return (\n      <ul style={ listStyle }>\n        { Object.entries(macros).map(([ name, definition ]) => {\n          return (\n            <li key={ name } title='Click to delete Macro' style={ userMacroStyle } onClick={ () => this.props.removeMacro(name) } >\n              { name } := { definition }\n            </li>\n          )\n        }) }\n      </ul>\n    )\n  }\n\n  isValidExpression (expression : string) : boolean {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars : false })\n      parse(tokens, this.props.macros)\n\n      return true\n    }\n    catch (exception) {\n      return false\n    }\n  }\n}","import React, { Component, ChangeEvent } from 'react';\nimport { AST, tokenize, parse, ASTReduction, Token, NormalEvaluator, None } from 'lambdulus-core'\n\nimport InputField from './components/InputField'\nimport Controls, { ControlProps } from './components/Controls'\nimport Result from './components/Result'\nimport UserMacros from './components/UserMacros';\nimport { debounce } from './helpers';\nimport { MacroMap } from 'lambdulus-core/';\n\n\ninterface state {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  ast : AST | null,\n  steps : number,\n  previousReduction : ASTReduction | null,\n  autoCloseParenthesis : boolean,\n  macroTable : MacroMap,\n  menuOpen: boolean,\n  steping : boolean,\n  briefHistory: Array<AST>,\n}\n\nconst inputStyle = {\n  margin: 'auto',\n  marginTop: '5vh',\n  width: '80%',\n  borderBottom: '2px solid gray',\n  padding: '10px',\n}\n\nconst resultStyle = {\n  margin: 'auto',\n  width: '80%',\n  marginTop: '2vh'\n}\n\nconst sidebarStyle = {\n  position: 'fixed' as any,\n  top: '0',\n  width: '100%',\n  height: '80%',\n  borderBottom: '2px solid gray',\n  backgroundColor: 'white',\n}\n\nconst configWrapper = {\n  margin: '10px'\n}\n\nconst menuBtnStyle = {\n  border: 'none',\n  background: 'transparent',\n  fontSize: '1.5em',\n  cursor: 'pointer',\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst itemStyle = {\n  listStyle: 'none',\n  marginBottom: '20px',\n}\n\nexport default class App extends Component<any, state> {\n  constructor (props : object) {\n    super(props)\n    \n    this.run = this.run.bind(this)\n    this.step = this.step.bind(this)\n    this.stepIn = this.stepIn.bind(this)\n    this.stepBack = this.stepBack.bind(this)\n    this.parseExpression = this.parseExpression.bind(this)\n    this.onExpressionChange = this.onExpressionChange.bind(this)\n    this.autoSave = debounce(this.autoSave.bind(this), 500)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    this.addMacro = this.addMacro.bind(this)\n    this.removeMacro = this.removeMacro.bind(this)\n    this.getMacrosFromLocalStorage = this.getMacrosFromLocalStorage.bind(this)\n    this.clear = this.clear.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n    \n    this.state = {\n      expression,\n      lines,\n      caretPosition : expression.length,\n      ast : null,\n      steps : 0,\n      previousReduction : null,\n      autoCloseParenthesis : false,\n      macroTable : this.getMacrosFromLocalStorage(),\n      menuOpen: false,\n      steping: false,\n      briefHistory: []\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ ...this.state, ast : this.parseExpression(this.state.expression) })\n  }\n\n  render() {\n    const controlProps : ControlProps = {\n      run : this.run,\n      step : this.step,\n      clear : this.clear,\n      stepIn : this.stepIn,\n      stepBack : this.stepBack,\n      canRun : true,\n      canStepOver : true,\n      canStepIn : true,\n      canGoBack : true,\n    }\n\n    const { ast, steps, expression, lines, caretPosition } = this.state\n\n    return (\n      <div className=\"App\">\n        {\n          this.state.menuOpen ?\n\n          <div style={ sidebarStyle }>\n            <button title='Close Menu' style={ menuBtnStyle } onClick={() => {\n              this.setState({ ...this.state, menuOpen : false })\n            }} >)(</button>\n            <div style={ configWrapper }>\n              <span style={ { fontSize: '1.3em' } } >Autocomplete parethesis</span>\n              <input type='checkbox' checked={ this.state.autoCloseParenthesis }\n              onChange={ _ => this.setState({ ...this.state, autoCloseParenthesis : !this.state.autoCloseParenthesis}) } />\n              <br />\n              <br />\n              <UserMacros disabled={this.state.steping} macros={ this.state.macroTable } addMacro={ this.addMacro } removeMacro={ this.removeMacro } />\n            </div>\n          </div>\n\n          :\n\n          <button title='Open Menu' style={ menuBtnStyle } onClick={() => {\n            this.setState({ ...this.state, menuOpen : true })\n          }} >()</button>\n        }\n        <div style={ inputStyle }>\n        <InputField content={ expression } lines={ lines } caretPosition={ caretPosition }\n          onChange={ this.onExpressionChange }  />\n        <br />\n        <Controls { ...controlProps } />\n        <br />\n        Steps: { steps }\n        <br />\n        <br />\n        </div>\n        <div style={ resultStyle }>\n          {/* <Result tree={ ast } /> */}\n          <ul style={ listStyle }>\n            {\n              this.state.briefHistory.map((ast, i) => {\n                return <li key={i} style={ i !== 0 ? { ...itemStyle, color: 'gray' } : itemStyle }><Result tree={ ast } /></li>\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  run () {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n    \n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    while (true) {\n      const normal : NormalEvaluator = new NormalEvaluator(ast)\n    \n      previousReduction = normal.nextReduction\n      if (normal.nextReduction instanceof None) {\n        break\n      }\n    \n      ast = normal.perform() // perform next reduction\n      steps++\n    }\n\n    briefHistory = [ast.clone()]\n\n    this.setState({ ...this.state, ast, steps, previousReduction, steping : false, briefHistory })\n  }\n\n  step () {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n\n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n    previousReduction = normal.nextReduction  \n    if (normal.nextReduction instanceof None) {\n      this.setState({ ...this.state, steping : false })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n    briefHistory.unshift(ast.clone())\n    briefHistory.length = Math.min(briefHistory.length, 5)\n\n    this.setState({ ...this.state, ast, steps, previousReduction, steping : true, briefHistory })\n  }\n\n  clear () : void {\n    this.setState({\n      steps : 0,\n      previousReduction : null,\n      briefHistory: [],\n      steping: false,\n    })\n  }\n\n  stepIn () {\n\n  }\n\n  stepBack () {\n\n  }\n\n  onExpressionChange (event : ChangeEvent<HTMLTextAreaElement>) : void  {\n    const { autoCloseParenthesis,  } : state = this.state\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const lines : number = expression.split('\\n').length\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n    \n    // TODO: if current and expression differs only at last char\n    // and this char is `(` then append `)` and put carret before `)`\n    if (autoCloseParenthesis\n        &&\n        expression.charAt(caretPosition - 1) === '('\n    ) {\n      expression = expression.slice(0, caretPosition) + ')' + expression.slice(caretPosition)\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.autoSave(expression)\n    this.setState({ expression, lines, ast, steps : 0 , previousReduction : null, caretPosition })\n  }\n\n  autoSave (expression : string) : void {\n    const encoded : string = encodeURI(expression)\n\n    window.location.hash = encoded\n  }\n\n  parseExpression (expression : string) : AST | null {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ', '~'], singleLetterVars : false })\n      const ast : AST = parse(tokens, this.state.macroTable)\n\n      console.log('successfuly parsed')\n\n      return ast\n    }\n    catch (exception) {\n      console.log('Something went wrong')\n      console.log(exception)\n      return null\n    }\n  }\n\n  getExpressionFromURL () : string {\n    const expression : string = decodeURI(window.location.hash.substring(1))\n    return expression\n  }\n\n  getMacrosFromLocalStorage () : MacroMap {\n    return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n  }\n\n  updateFromURL () : void {\n    const { expression : currentExpr } : state = this.state\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.setState({ expression, lines, ast, steps : 0, previousReduction : null })\n  }\n\n  addMacro (name : string, definition : string) : void {\n    // TODO: fix\n    const macroTable = { ...this.state.macroTable, [name] : definition }\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  removeMacro (name : string) : void {\n    const macroTable = { ...this.state.macroTable }\n    delete macroTable[name]\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}