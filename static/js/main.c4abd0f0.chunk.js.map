{"version":3,"sources":["components/InputField.tsx","components/Controls.tsx","components/Result.tsx","helpers.ts","components/UserMacros.tsx","components/UserStep.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","width","fontSize","border","overflow","outline","resize","borderStyle","InputField","props","content","lines","onChange","caretPosition","react_default","a","createElement","value","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","selectionEnd","buttonStyle","background","borderBottom","marginLeft","marginRight","cursor","Controlls","run","stop","step","clear","validate","canRun","stepIn","stepBack","canStepOver","running","canStepIn","canGoBack","onClick","disabled","ReactPrinter","tree","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","body","Lambda","printLambdaBody","accumulator","args","className","argument","name","printLambdaArguments","application","right","Application","left","_this2","console","log","type","Beta","context","churchNumber","macro","variable","ASTVisitor","wordWrap","Result","addBreakpoint","printer","breakpoint","undefined","print","trimStr","str","trim","TreeComparator","roots","translator","Map","equals","compare","createClass","key","_this$context","slicedToArray","backup","entries","set","Macro","ChurchNumber","Variable","get","listStyle","padding","macroStyle","display","textAlign","paddingLeft","paddingRight","margin","borderRadius","color","userMacroStyle","paddingTop","paddingBottom","inputStyle","UserMacros","bind","listMacros","onAdd","isValidExpression","state","invalidMacro","builtinsExpanded","macroError","title","_","setState","objectSpread","builtinMacros","map","_ref","_ref2","macroName","definition","onSubmit","event","expression","target","replace","preventDefault","_this$state$value$spl","split","_this$state$value$spl2","error","addMacro","_this3","macros","_ref3","_ref4","removeMacro","tokens","tokenize","lambdaLetters","singleLetterVars","parse","exception","Component","UserStep","invalidExpr","onComparison","marginTop","resultStyle","sidebarStyle","position","top","backgroundColor","configWrapper","menuBtnStyle","itemStyle","marginBottom","App","parseExpression","onExpressionChange","autoSave","fn","treshold","timer","_len","arguments","length","Array","_key","window","clearTimeout","setTimeout","apply","debounce","getExpressionFromURL","updateFromURL","getMacrosFromLocalStorage","__run","shouldBreak","addEventListener","ast","steps","previousReduction","autoCloseParenthesis","macroTable","menuOpen","steping","briefHistory","isValidating","breakpoints","controlProps","_this$state","checked","UserMacros_UserMacros","UserStep_UserStep","i","reduction","identifier","_this$state2","None","normal","NormalEvaluator","nextReduction","clone","index","find","id","splice","perform","_this4","_this$state3","unshift","min","userExpression","_this$state4","userAst","charAt","slice","encoded","encodeURI","location","hash","decodeURI","substring","userMacros","JSON","localStorage","getItem","fact","facct","fib","inflist","SHORTLIST","LONGLIST","LISTGREQ","LISTLESS","LISTGR","LISTEQ","CONNECT","QUICKSORT","currentExpr","defineProperty","setItem","stringify","concat","toConsumableArray","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4abd0f0.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react'\n\n\ninterface InputProps {\n  content : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n}\n\nconst style = {\n  width: '100%',\n  fontSize: '3em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default function InputField (props : InputProps) : JSX.Element {\n  const { content, lines, onChange, caretPosition } : InputProps = props\n\n    return (\n      <textarea\n        style={ style }\n        onChange={ onChange }\n        value={ content }\n        placeholder='(λ f . (λ x . f (x x)) (λ x . f (x x)))'\n        wrap='hard'\n        autoFocus\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck={ false }\n        rows={ Math.max(lines + 1, 2) }\n        ref={ (element : HTMLTextAreaElement) => {\n          if (element !== null) {\n            element.selectionStart = caretPosition\n            element.selectionEnd = caretPosition\n          }\n        } }\n      />\n    )\n}","import React, { FunctionComponent, } from 'react'\n\n\nexport interface ControlProps {\n  run () : void,\n  stop () : void,\n  step () : void,\n  clear () : void,\n  validate () : void,\n  stepIn () : void,\n  stepBack () : void,\n  canRun : boolean,\n  canStepOver : boolean,\n  canStepIn : boolean,\n  canGoBack : boolean,\n  running : boolean,\n}\n\nconst buttonStyle = {\n  fontSize: '1.5em',\n  background: 'none',\n  borderStyle: 'none',\n\tborderBottom: '2px solid navy',\n  marginLeft: '5px',\n  marginRight: '5px',  \n  cursor: 'pointer',\n  outline: 'none',\n}\n\nexport default function Controlls (props : ControlProps) : JSX.Element {\n  const {\n    run,\n    stop,\n    step,\n    clear,\n    validate,\n    stepIn,\n    stepBack,\n    canRun,\n    canStepOver,\n    canStepIn,\n    canGoBack,\n    running,\n  } : ControlProps = props\n  \n  return (\n    <div>\n      <button style={ buttonStyle } onClick={ () => (running ? stop : run)() } disabled={ ! canRun } >\n        { running ?  'STOP' : 'RUN' }\n      </button>\n      <button style={ buttonStyle } onClick={ step } disabled={ (! canStepOver) || running }>STEP</button>\n      <button style={ buttonStyle } onClick={ clear } disabled={ running }>CLEAR</button>\n      <button style={ buttonStyle } onClick={ validate } disabled={ false }>VALIDATE</button>\n\n      {/* <button style={ buttonStyle } onClick={ stepIn } disabled={ true }>STEP IN</button> */}\n      {/* <button style={ buttonStyle } onClick={ stepBack } disabled={ true }>GO BACK</button> */}\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport { AST, BasicPrinter, ASTVisitor, Macro, ChurchNumber, Variable, Lambda, Application, Beta } from 'lambdulus-core';\nimport { Breakpoint } from '../App';\n\n\nclass ReactPrinter extends ASTVisitor {\n  // private expression : string = ''\n  private rendered : JSX.Element | null = null\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaBody (lambda : Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaBody(lambda.body)\n    }\n    else {\n      lambda.body.visit(this)\n    }\n  }\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaArguments (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const args : JSX.Element = \n      <span className='arguments' >\n        { accumulator } { lambda.body.argument.name() }\n      </span>\n      \n      this.printLambdaArguments(lambda.body, args)\n    }\n    else {\n      this.rendered = accumulator\n    }\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: this is ugly as hell\n  onApplication(application: Application): void {\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='application' >\n        { left } ( { right } )\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='application' >\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: this is ugly as hell\n  onLambda(lambda: Lambda): void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaArguments(lambda, <span className='arguments' >{ lambda.argument.name() }</span>)\n      const args : JSX.Element | null = this.rendered\n\n      this.printLambdaBody(lambda)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='lambda' >\n        ( <span style={ { cursor: 'pointer' } } onClick={() => {\n          console.log(lambda)\n          this.onClick({ type: Beta, context: lambda })}\n         } >\n          λ\n        </span> { args } . { body } )\n      </span>\n    }\n    else {\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='lambda' >\n        (<span style={ { cursor: 'pointer' } } onClick={() => {\n          console.log(lambda)\n\n          this.onClick({ type: Beta, context: lambda })}\n         } >\n          λ\n        </span> { args } . { body } )\n      </span>\n    }\n  }\n  \n  onChurchNumber(churchNumber: ChurchNumber): void {\n    this.rendered = <span className='churchnumeral' >{ churchNumber.name() }</span>\n  }\n  \n  onMacro(macro: Macro): void {\n    this.rendered = <span className='macro' >{ macro.name() }</span>\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}\n\n\nconst style = {\n  fontSize: '2em',\n  wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n\n}\n\nexport default function Result (props : { tree : AST | null, addBreakpoint?(breakpoint : Breakpoint) : void }) : JSX.Element | null {\n  const { tree, addBreakpoint } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, (breakpoint : Breakpoint) => {\n    if (addBreakpoint !== undefined) {\n      console.log('CLICKED')\n      addBreakpoint(breakpoint)\n    }\n  })\n\n  return (\n    <span style={ style } >\n      { printer.print() }\n    </span>\n  )\n}","import { ASTVisitor, AST, Application, Lambda, ChurchNumber, Macro, Variable } from \"lambdulus-core\"\n\n\nexport function debounce (fn : Function, treshold : number) {\n  let timer : number\n  \n  return function debounced (...args : Array<any>) {\n  \twindow.clearTimeout(timer)\n\n  \ttimer = window.setTimeout(() => {\n    \tfn(...args)\n    }, treshold)\n  }\n}\n\n// intentionaly not handling `this` - I don't want debounced callback to (ab)use `this`\n\nexport function trimStr (str : string) {\n  return str.trim()\n}\n\n///////////////////////////////////////////////////////////////////////////////////////\n\ntype Pair<T, E> = [T, E]\n\n// TODO: fix the public equals interface, maybe public get and private set?\n// maybe implement public get method and bool itself leave private?\nexport class TreeComparator {\n  private translator : Map<string, string> = new Map\n  public equals : boolean = true\n  private context : Pair<AST, AST>\n\n  constructor (readonly roots : Pair<AST, AST> ) {\n    this.context = roots\n    this.compare()\n  }\n\n  compare () : void {\n    const [ left, right ] : Pair<AST, AST> = this.context\n\n    if (left instanceof Lambda && right instanceof Lambda) {\n      const backup : Map<string, string> = new Map(this.translator.entries())\n\n      this.translator.set(left.argument.name(), right.argument.name())\n      this.context = [ left.right, right.right]\n      this.compare()\n\n      this.translator = backup\n    }\n    else if (left instanceof Application && right instanceof Application) {\n      this.context = [ left.left, right.left ]\n      this.compare()\n\n      if ( ! this.equals) {\n        return\n      }\n\n      this.context = [ left.right, right.right ]\n      this.compare()\n    }\n    else if (left instanceof Macro && right instanceof Macro) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof ChurchNumber && right instanceof ChurchNumber) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof Variable && right instanceof Variable) {\n      this.equals = this.translator.get(left.name()) === right.name()\n    }\n    else {\n      this.equals = false\n    }\n  }\n\n  // sameType (left : AST, right : AST) : boolean {\n  //   return (\n  //     left instanceof Lambda && right instanceof Lambda\n  //     ||\n  //     left instanceof Application && right instanceof Application\n  //     ||\n  //     left instanceof Macro && right instanceof Macro\n  //     ||\n  //     left instanceof ChurchNumber && right instanceof ChurchNumber\n  //     ||\n  //     left instanceof Variable && right instanceof Variable\n  //   )\n  // }\n}","import React, { Component, ChangeEvent, SyntheticEvent } from 'react'\nimport { trimStr } from '../helpers'\nimport { MacroMap, builtinMacros, Token, tokenize, parse, AST } from 'lambdulus-core/'\n\ninterface Props {\n  disabled : boolean,\n  macros : MacroMap,\n  addMacro (name : string, definition : string) : void,\n  removeMacro (name : string) : void,\n}\n\ninterface State {\n  value : string,\n  invalidMacro : boolean,\n  builtinsExpanded : boolean,\n  macroError : null | string,\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst macroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '1px solid gray',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'gray',\n  cursor: 'pointer',\n}\n\nconst userMacroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingTop: '3px',\n  paddingBottom: '3px',\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '2px solid black',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'black',\n  cursor: 'pointer',\n}\n\nconst inputStyle = {\n  width: '100%',\n  fontSize: '2em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  borderBottom: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default class UserMacros extends Component<Props, State> {\n  constructor (props : Props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.listMacros = this.listMacros.bind(this)\n    this.onAdd = this.onAdd.bind(this)\n    this.isValidExpression = this.isValidExpression.bind(this)\n\n    this.state = {\n      value : '',\n      invalidMacro : false,\n      builtinsExpanded : true,\n      macroError : null,\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <span title='Click for toggle display'\n              style={ { fontSize: '1.3em', cursor: 'pointer', } }\n              onClick={_ => this.setState({\n                ...this.state,\n                builtinsExpanded : !this.state.builtinsExpanded,\n              })\n        } >\n          Built-in Macros:</span>\n          { <ul style={ listStyle }>\n          { this.state.builtinsExpanded\n              ?            \n            Object.entries(builtinMacros).map(([macroName, definition ]) => {\n              return <li title='Built-in Macro' style={ macroStyle } key={ macroName }>\n                { macroName }\n                { ' ' }\n                := { definition }\n              </li>\n            })\n              :\n              null\n          }\n          </ul> }\n        <span style={ { fontSize: '1.3em',  } } >User defined Macros:</span>\n        { this.listMacros() }\n        <br />\n        <form onSubmit={ this.onAdd } >\n          <input disabled={this.props.disabled} value={ this.state.value } onChange={ this.onChange }\n            placeholder='T := (λ t f . t)' style={ this.state.invalidMacro ? { ...inputStyle, borderBottom: '2px solid #EF3D59' } : inputStyle } autoFocus type='text'\n          />\n        </form>\n      </div>\n    )\n  }\n\n  onChange (event : ChangeEvent<HTMLInputElement>) : void {\n    let { target : { value : expression } } = event\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    this.setState({ ...this.state, value : expression, invalidMacro : false })\n  }\n\n  onAdd (event : SyntheticEvent) : void {\n    event.preventDefault()\n\n    const [ name, definition ] : Array<string> = this.state.value.split(':=').map(trimStr)\n\n    if (!definition\n        ||\n      ! this.isValidExpression(definition)\n        ||\n      name in builtinMacros) {\n      const macroError : string = (!definition) ? 'Empty definition.'\n        :\n        name in builtinMacros ? 'You can not redefine built-in macros.'\n          : 'Invalid macro.'\n\n      this.setState({ ...this.state, invalidMacro : true, macroError })\n      console.error(macroError)\n      return\n    }\n    \n    \n    this.props.addMacro(name, definition)\n    this.setState({ ...this.state, value : '' })\n  }\n\n  listMacros () : JSX.Element {\n    const { macros } = this.props\n    return (\n      <ul style={ listStyle }>\n        { Object.entries(macros).map(([ name, definition ]) => {\n          return (\n            <li key={ name }\n                title={ this.props.disabled ? 'You cannot remove Macro while evaluating' : 'Click to delete Macro' }\n                style={ userMacroStyle }\n                onClick={ () => ( ! this.props.disabled) && this.props.removeMacro(name) } >\n              { name } := { definition }\n            </li>\n          )\n        }) }\n      </ul>\n    )\n  }\n\n  isValidExpression (expression : string) : boolean {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars : false })\n      parse(tokens, this.props.macros)\n\n      return true\n    }\n    catch (exception) {\n      return false\n    }\n  }\n}","import React, { Component, ChangeEvent, SyntheticEvent } from 'react'\nimport { Token, tokenize, parse, } from 'lambdulus-core/'\n\ninterface Props {\n  onComparison (expression : string) : void,\n}\n\ninterface State {\n  value : string,\n  invalidExpr : boolean,\n}\n\nconst inputStyle = {\n  width: '100%',\n  fontSize: '2em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  borderBottom: 'none',\n}\n\nexport default class UserStep extends Component<Props, State> {\n  constructor (props : Props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.compare = this.compare.bind(this)\n    this.isValidExpression = this.isValidExpression.bind(this)\n\n    this.state = {\n      value : '',\n      invalidExpr : false,\n    }\n  }\n\n  render () {\n    return (\n      <form onSubmit={ this.compare } >\n        <input value={ this.state.value } onChange={ this.onChange }\n          placeholder='(λ t f . t)' style={ this.state.invalidExpr ? { ...inputStyle, borderBottom: '2px solid #EF3D59' } : inputStyle } autoFocus type='text'\n        />\n      </form>\n    )\n  }\n\n  onChange (event : ChangeEvent<HTMLInputElement>) : void {\n    let { target : { value : expression } } = event\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    this.setState({ ...this.state, value : expression, invalidExpr : false })\n  }\n\n  compare (event : SyntheticEvent) : void {\n    event.preventDefault()\n\n    const expression : string = this.state.value.trim()\n\n    if (!expression\n        ||\n        ! this.isValidExpression(expression)) {\n      this.setState({ ...this.state, invalidExpr : true })\n      return\n    }\n    \n    \n    this.props.onComparison(expression)\n    this.setState({ ...this.state, value : '' })\n  }\n\n  isValidExpression (expression : string) : boolean {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars : false })\n      parse(tokens, {})\n\n      return true\n    }\n    catch (exception) {\n      return false\n    }\n  }\n}","import React, { Component, ChangeEvent } from 'react';\nimport { AST, tokenize, parse, ASTReduction, Token, NormalEvaluator, None, builtinMacros, MacroTable, Application, Beta, Lambda } from 'lambdulus-core'\n\nimport InputField from './components/InputField'\nimport Controls, { ControlProps } from './components/Controls'\nimport Result from './components/Result'\nimport UserMacros from './components/UserMacros';\nimport { debounce, TreeComparator } from './helpers';\nimport { MacroMap } from 'lambdulus-core/';\nimport UserStep from './components/UserStep';\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n}\n\ninterface state {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  ast : AST | null,\n  steps : number,\n  previousReduction : ASTReduction | null,\n  autoCloseParenthesis : boolean,\n  macroTable : MacroMap,\n  menuOpen: boolean,\n  steping : boolean,\n  briefHistory : Array<AST>,\n  isValidating : boolean,\n  running : boolean,\n  singleLetterVars : boolean,\n  breakpoints : Array<Breakpoint>,\n}\n\nconst inputStyle = {\n  margin: 'auto',\n  marginTop: '5vh',\n  width: '80%',\n  borderBottom: '2px solid gray',\n  padding: '10px',\n}\n\nconst resultStyle = {\n  margin: 'auto',\n  width: '80%',\n  marginTop: '2vh'\n}\n\nconst sidebarStyle = {\n  position: 'absolute' as any,\n  top: '0',\n  width: '100%',\n  // height: '80%',\n  borderBottom: '2px solid gray',\n  backgroundColor: 'white',\n}\n\nconst configWrapper = {\n  margin: '10px'\n}\n\nconst menuBtnStyle = {\n  border: 'none',\n  background: 'transparent',\n  fontSize: '1.5em',\n  cursor: 'pointer',\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst itemStyle = {\n  listStyle: 'none',\n  marginBottom: '20px',\n}\n\nexport default class App extends Component<any, state> {\n  constructor (props : object) {\n    super(props)\n    \n    this.run = this.run.bind(this)\n    this.step = this.step.bind(this)\n    this.stepIn = this.stepIn.bind(this)\n    this.stepBack = this.stepBack.bind(this)\n    this.parseExpression = this.parseExpression.bind(this)\n    this.onExpressionChange = this.onExpressionChange.bind(this)\n    this.autoSave = debounce(this.autoSave.bind(this), 500)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    this.addMacro = this.addMacro.bind(this)\n    this.removeMacro = this.removeMacro.bind(this)\n    this.getMacrosFromLocalStorage = this.getMacrosFromLocalStorage.bind(this)\n    this.clear = this.clear.bind(this)\n    this.validate = this.validate.bind(this)\n    this.onComparison = this.onComparison.bind(this)\n    this.__run = this.__run.bind(this)\n    this.stop = this.stop.bind(this)\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n    \n    this.state = {\n      expression,\n      lines,\n      caretPosition : expression.length,\n      ast : null,\n      steps : 0,\n      previousReduction : null,\n      autoCloseParenthesis : false,\n      macroTable : this.getMacrosFromLocalStorage(),\n      menuOpen : false,\n      steping : false,\n      briefHistory : [],\n      isValidating : false,\n      running : false,\n      singleLetterVars : false, // TODO this.getConfigFromStorage(),\n      breakpoints : [],\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ ...this.state, ast : this.parseExpression(this.state.expression) })\n  }\n\n  render() {\n    const controlProps : ControlProps = {\n      run : this.run,\n      stop : this.stop,\n      step : this.step,\n      clear : this.clear,\n      validate : this.validate,\n      stepIn : this.stepIn,\n      stepBack : this.stepBack,\n      canRun : true,\n      canStepOver : true,\n      canStepIn : true,\n      canGoBack : true,\n      running : this.state.running,\n    }\n\n    const { ast, steps, expression, lines, caretPosition } = this.state\n\n    return (\n      <div className=\"App\">\n        {\n          this.state.menuOpen ?\n\n          <div style={ sidebarStyle }>\n            <button title='Close Menu' style={ menuBtnStyle } onClick={() => {\n              this.setState({ ...this.state, menuOpen : false })\n            }} >)(</button>\n            <div style={ configWrapper }>\n              <span style={ { fontSize: '1.3em' } } >Autocomplete parethesis</span>\n              <input type='checkbox' checked={ this.state.autoCloseParenthesis }\n              onChange={ _ => this.setState({ ...this.state, autoCloseParenthesis : !this.state.autoCloseParenthesis}) } />\n              <br />\n              <br />\n              <span style={ { fontSize: '1.3em' } } title='Write identifiers without spaces' >Single letter Identifiers</span>\n              <input type='checkbox' checked={ this.state.singleLetterVars }\n              onChange={ _ => this.setState({ ...this.state, singleLetterVars : !this.state.singleLetterVars}) } />\n              <br />\n              <br />\n              <UserMacros disabled={this.state.steping} macros={ this.state.macroTable } addMacro={ this.addMacro } removeMacro={ this.removeMacro } />\n            </div>\n          </div>\n\n          :\n\n          <button title='Open Menu' style={ menuBtnStyle } onClick={() => {\n            this.setState({ ...this.state, menuOpen : true })\n          }} >()</button>\n        }\n        <div style={ inputStyle }>\n        <InputField content={ expression } lines={ lines } caretPosition={ caretPosition }\n          onChange={ this.onExpressionChange }  />\n        <br />\n        <Controls { ...controlProps } />\n        <br />\n        Steps: { steps }\n        <br />\n        <br />\n        </div>\n        <div style={ resultStyle }>\n          {/* <Result tree={ ast } /> */}\n          {\n            this.state.isValidating\n              ?\n            <UserStep onComparison={ this.onComparison }/>\n              :\n            null\n          }\n          <ul style={ listStyle }>\n            {\n              this.state.briefHistory.map((ast, i) => {\n                return <li key={i} style={ i !== 0 ? { ...itemStyle, color: 'gray' } : itemStyle }>\n                {\n                  i === 0 ? <Result addBreakpoint={ this.addBreakpoint } tree={ ast } />\n                  : <Result tree={ ast } />\n                }\n                </li>\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Lambda\n        && reduction.target.identifier === breakpoint.context.body.identifier\n      ) {\n        return true\n    }\n    return false\n  }\n\n  __run () {\n    let { ast, expression, steps, previousReduction, briefHistory, running, breakpoints } = this.state\n    if ( ! running) {\n      return\n    }\n    \n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n    \n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    previousReduction = normal.nextReduction\n    if (normal.nextReduction instanceof None) {\n      // NOT CALL SETTIMEOUT AGAIN\n      briefHistory = [ast.clone()]\n\n      this.setState({\n        ...this.state,\n        ast,\n        steps,\n        previousReduction,\n        steping : false,\n        briefHistory,\n        isValidating : false,\n        running : false,\n      })\n\n      return\n    }\n\n    let index : number = 0\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint, id) =>\n        (index = id,\n        this.shouldBreak(breakpoint, normal.nextReduction))\n    )\n\n    if (breakpoint !== undefined) {\n      breakpoints.splice(index, 1)\n\n      this.setState({\n        ...this.state,\n        running : false,\n        steping : false,\n        breakpoints,\n      })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n    this.setState({\n      ...this.state,\n      ast,\n      steps,\n      previousReduction,\n      briefHistory : [ ast ],\n      isValidating : false,\n    })\n\n    window.setTimeout(this.__run, 10)    \n  }\n\n  run () {\n    if (this.state.previousReduction instanceof None) {\n      return\n    }\n    this.setState({ ...this.state, running : true, steping : true },\n      () => window.setTimeout(this.__run, 10))\n  }\n\n  stop () {\n    this.setState({ ...this.state, running : false })\n  }\n\n  step () {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n\n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n    previousReduction = normal.nextReduction\n    if (normal.nextReduction instanceof None) {\n      this.setState({ ...this.state, steping : false, previousReduction, })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n    briefHistory.unshift(ast.clone())\n    briefHistory.length = Math.min(briefHistory.length, 5)\n\n    this.setState({\n      ...this.state,\n      ast,\n      steps,\n      previousReduction,\n      steping : true,\n      briefHistory,\n      isValidating : false,\n    })\n  }\n\n  clear () : void {\n    this.setState({\n      steps : 0,\n      previousReduction : null,\n      briefHistory: [],\n      steping: false,\n      isValidating : false,\n      breakpoints : [],\n    })\n  }\n\n  validate () : void {\n    if (this.state.previousReduction instanceof None) {\n      return\n    }\n\n    this.setState({ ...this.state, isValidating : true })\n  }\n\n  onComparison (userExpression : string) : void {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n\n    // TODO: tohle se asi nestane - prozkoumat\n    // stane pokud nekdo chce kliknout na validaci kdyz neni nic napsany v inputu\n    // pripadne pokud nekdo chce kliknout na validaci kdyz uz neni co validovat myslim\n    if (ast === null || previousReduction instanceof None) {\n      this.setState({\n        ...this.state,\n        ast,\n        // steping : true,\n        isValidating : false,\n      })\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n    previousReduction = normal.nextReduction  \n    if (normal.nextReduction instanceof None) {\n      this.setState({ ...this.state, steping : false, isValidating : false })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n\n    // TODO: provest porovnani uzivatelskeho kroku a meho\n    // to znamena porovnani stromu vcetne vyznamu\n    // pokud nesedi, bude treba provest analyzu chyby\n    // zobrazit chybu\n    // pokracovat ve svem vyhodnocovani\n\n    const userAst : AST | null = this.parseExpression(userExpression)\n\n    if (userAst === null) {\n      console.error('User Input is INVALID λ expression.')\n      // TODO: put it in state\n      this.setState({\n        ...this.state,\n        ast,\n        // steping : true,\n        isValidating : false,\n      })\n      return\n    }\n\n    const treeComparator : TreeComparator = new TreeComparator([ ast, userAst ])\n    if ( ! treeComparator.equals) {\n      console.error('User Input is INCCORECT.')\n      \n      briefHistory.unshift(ast.clone())\n      briefHistory.length = Math.min(briefHistory.length, 5)\n      \n      this.setState({\n        ...this.state,\n        ast,\n        steps,\n        previousReduction,\n        // steping : true, // proc bych to tady daval true to neni duvod\n        briefHistory,\n        isValidating : false,\n      })\n    }\n    else {\n      console.log('User Input is CORRECT.')\n      \n      briefHistory.unshift(userAst.clone())\n      briefHistory.length = Math.min(briefHistory.length, 5)\n\n      this.setState({\n        ...this.state,\n        ast : userAst,\n        steps,\n        previousReduction,\n        // steping : true, // proc bych to tady daval true to neni duvod\n        briefHistory,\n        isValidating : false,\n      })\n    }\n\n    \n  }\n\n  stepIn () {\n\n  }\n\n  stepBack () {\n\n  }\n\n  onExpressionChange (event : ChangeEvent<HTMLTextAreaElement>) : void  {\n    const { autoCloseParenthesis,  } : state = this.state\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const lines : number = expression.split('\\n').length\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n    \n    // TODO: if current and expression differs only at last char\n    // and this char is `(` then append `)` and put carret before `)`\n    if (autoCloseParenthesis\n        &&\n        expression.charAt(caretPosition - 1) === '('\n    ) {\n      expression = expression.slice(0, caretPosition) + ')' + expression.slice(caretPosition)\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.autoSave(expression)\n    this.setState({\n      expression,\n      lines,\n      ast,\n      briefHistory: [],\n      steps : 0,\n      previousReduction : null,\n      caretPosition,\n      isValidating : false,\n      breakpoints : [],\n    })\n  }\n\n  autoSave (expression : string) : void {\n    const encoded : string = encodeURI(expression)\n\n    window.location.hash = encoded\n  }\n\n  parseExpression (expression : string) : AST | null {\n    const { singleLetterVars } = this.state\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ', '~'], singleLetterVars })\n      const ast : AST = parse(tokens, this.state.macroTable)\n\n      console.log('successfuly parsed')\n\n      return ast\n    }\n    catch (exception) {\n      console.log('Something went wrong')\n      console.error(exception)\n      return null\n    }\n  }\n\n  getExpressionFromURL () : string {\n    const expression : string = decodeURI(window.location.hash.substring(1))\n    return expression\n  }\n\n  getMacrosFromLocalStorage () : MacroMap {\n    const usefulMacros : MacroMap = {\n      fact : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n      facct : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n      fib : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n      inflist : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n      SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n      LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n      LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      CONNECT : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n      QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( CONNECT (fn (LISTLESS (FIRST list) list)) ( CONNECT (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n    }\n\n    const userMacros : MacroMap = JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n\n    return { ...usefulMacros, ...userMacros }\n  }\n\n  updateFromURL () : void {\n    const { expression : currentExpr } : state = this.state\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.setState({ expression, lines, ast, steps : 0, previousReduction : null })\n  }\n\n  addMacro (name : string, definition : string) : void {\n    // TODO: fix\n    const macroTable = { ...this.state.macroTable, [name] : definition }\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  removeMacro (name : string) : void {\n    const macroTable = { ...this.state.macroTable }\n    delete macroTable[name]\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    this.setState({\n      ...this.state,\n      breakpoints : [ ...this.state.breakpoints, breakpoint ],\n    })\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}