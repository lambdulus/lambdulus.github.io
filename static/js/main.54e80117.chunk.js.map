{"version":3,"sources":["components/Editor.tsx","misc/index.ts","components/Controls.tsx","components/ReactPrinter.tsx","components/Step.tsx","components/Box.tsx","App.tsx","components/Evaluator.tsx","components/MacroDefinition.tsx","components/Note.tsx","components/MenuBar.tsx","components/EvaluatorSpace.tsx","components/MacroSpace.tsx","serviceWorker.ts","index.tsx"],"names":["Editor","props","expression","caretPosition","onExpression","onEnter","syntaxError","lines","split","length","react_default","a","createElement","className","concat","InputField","onChange","event","target","value","selectionEnd","replace","onKeyDown","shiftKey","key","preventDefault","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","focus","trimStr","str","trim","HANDY_MACROS","FACT","FACCT","FIB","APPEND","LISTGREQ","LISTLESS","LISTGR","LISTEQ","QUICKSORT","INFLIST","REMOVENTH","NTH","LEN","GETNTH","MAP","REDUCE","APPLY","RANGE","LISTCOMPR","MOD","INFIX","getExpressionFromURL","decodeURI","window","location","hash","substring","Controls","onRun","onStop","onStep","onClear","isRunning","id","onClick","ReactPrinter","tree","redex","breakpoints","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","Lambda","context","argument","isBreakpoint","args","type","Beta","broken","Set","name","printMultiLambda","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","identifier","err","return","application","leftClassName","rightClassName","right","Application","left","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","variable","ASTVisitor","Step","addBreakpoint","normal","NormalEvaluator","nextReduction","printer","print","BoxType","Screen","Evaluator","bind","__onRun","shouldBreak","_this$props","state","history","updateState","steps","lastReduction","timeoutID","from","to","sequence","fn","result","Array","e","i","mapLeftFromTo","ast","editExpression","_this$props2","timeout","None","setTimeout","_this$props3","breakpoint","find","add","clearTimeout","console","log","perform","_this$props4","_this$props5","clone","toConsumableArray","_this$props6","_this$props7","reduction","Variable","ChurchNumeral","has","Macro","PureComponent","MacroDefinition","_props$state","macroName","macroExpression","Note","note","Box","Evaluator_Evaluator","MenuBar","onImport","onScreenChange","screen","dehydrated","objectSpread","submittedExpressions","map","dehydrateBox","dehydrate","link","content","data","Blob","URL","createObjectURL","createURL","JSON","stringify","main","macrolist","href","download","revokeObjectURL","accept","files","file","reader","FileReader","onload","parse","singleLetterVars","macroTable","config","box","tokens","tokenize","lambdaLetters","parseExpression","hydrateBox","hydrate","readAsText","onFiles","htmlFor","EvaluatorSpace","removeExpression","__key","_updateState","_x","apply","arguments","toString","_removeExpression","MacroSpace","removeMacro","entries","builtinMacros","_ref","_ref2","slicedToArray","_ref3","_ref4","App","updateFromURL","_debounce","treshold","timer","_len","_key","debounce","updateURL","_debounce2","update","cancel","cancelUpdate","onSubmit","onRemoveExpression","updateMacros","onUpdateEvaluationState","onRemoveMacro","addEventListener","editorState","localStorage","getItem","_this$state","_this$state$editorSta","notebooks","setState","pushState","encodeURI","index","splice","_this$state2","activeExpression","_this$state3","_this$state3$editorSt","indexOf","exception","isMacroDefinition","_expression$split$map","_expression$split$map2","macroState","Date","now","newMacroTable","defineProperty","isNote","noteState","evaluationState","currentExpr","_this$state4","setItem","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54e80117.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, SetStateAction, Dispatch, KeyboardEvent } from 'react'\n\nimport './EditorStyle.css'\n\n\ninterface EditorProperties {\n  expression : string\n  caretPosition : number\n  onExpression (newExpression : string, caretPosition : number) : void\n  onEnter () : void\n  syntaxError : Error | null\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const { expression, caretPosition, onExpression, onEnter, syntaxError } : EditorProperties = props\n  const lines : number = expression.split('\\n').length\n  \n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    onExpression(expression, caretPosition)\n  }\n\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if (! event.shiftKey && event.key === 'Enter') {\n      event.preventDefault()\n      onEnter()\n    }\n  }\n\n  return (\n    <div className='editorContainer'>\n      { syntaxError ? `${syntaxError}` : null }\n\n      <div className=\"editor\">      \n        {/* <button id='editorEnter' onClick={ onEnter } >\n          Δ\n        </button> */}\n        <InputField\n          expression={ expression }\n          lines={ lines }\n          caretPosition={ caretPosition }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n        />\n        {/* <i id='editorEnter' className=\"fas fa-plus\" onClick={ onEnter } /> */}\n        </div>\n\n    </div>\n  )\n}\n\ninterface InputProps {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void,\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { expression, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ expression }\n      placeholder='type here'\n      wrap='hard'\n      autoFocus\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n          element.focus()\n        }\n      } }\n    />\n  )\n}","import { strict } from \"assert\";\nimport { MacroMap } from \"lambdulus-core\";\n\nexport function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function mapRightFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = to; i >= from; --i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }\n\n  export function mapLeftFromTo(\n    from : number,\n    to : number,\n    sequence : Array<any>,\n    fn : (...args : Array<any>) => any) {\n      const result : Array<any> = new Array(to - from + 1)\n  \n      for (let e = 0, i = from; i <= to; ++i) {\n        result[e++] = fn(sequence[i], i)\n      }\n  \n      return result\n    }\n\nexport function trimStr (str : string) : string {\n  return str.trim()\n}\n\nexport const HANDY_MACROS : MacroMap = {\n  FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  INFIX : 'APPLY (λ l op r . op l r)',\n}\n\n// TODO: does not have to be in this class\nexport function getSavedMacros () : MacroMap {\n  return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n}\n\n// TODO: does not have to be in this class\nexport function isMacroDefinition (expression : string) : boolean {\n  // TODO: check if first part of macro assignment is valid identifier\n  // TODO: check if second part of macro assignment is valid lambda expression\n\n  try {\n    return expression.indexOf(':=') > 0\n  }\n  catch (exception) {\n    return false\n  }\n}\n\n// TODO: does not have to be in this class\nexport function isNote (expression : string) : boolean {\n  return expression.indexOf('#') === 0\n}\n\n// TODO: does not have to be in this class\nexport function getExpressionFromURL () : string {\n  return decodeURI(window.location.hash.substring(1))\n}","import React from 'react'\n\nimport './ControlsStyle.css'\n\n\nexport interface ControlsProps {\n  onRun () : void,\n  onStop () : void,\n  onStep () : void,\n  onClear () : void,\n  isRunning : boolean,\n}\n\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    onRun,\n    onStop,\n    onStep,\n    onClear,\n    isRunning,\n  } : ControlsProps = props\n  \n  return (\n    <div id=\"controls\">\n\n      {\n        isRunning ?\n        <i\n          className=\"enabled fas fa-pause\"\n          onClick={ onStop }\n        />\n          :\n        <i\n          className=\"enabled fas fa-forward\"\n          onClick={ onRun }\n        />  \n      }\n\n      {/* <button\n        className='controlButton'\n        \n        disabled={ false }\n      >\n        { isRunning ? 'STOP' : 'RUN' }\n      </button> */}\n      {/* <button className='controlButton' onClick={ onStep } disabled={ isRunning }>STEP</button> */}\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-play\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-play\"\n          onClick={ onStep }\n        />\n      }\n\n      {\n        isRunning ?\n        <i\n          className=\"disabled fas fa-redo-alt\"\n          onClick={ () => {} }\n        />\n          :\n        <i\n          className=\"enabled fas fa-redo-alt\"\n          onClick={ onClear }\n        />\n      }\n      {/* <i\n        className=\"fas fa-redo-alt fa-2x\"\n        onClick={ onClear }\n       />\n\n      <button className='controlButton' onClick={ onClear } disabled={ isRunning }>CLEAR</button> */}\n    </div>\n  )\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumeral, Expansion, Macro } from \"lambdulus-core\";\n\nimport { Breakpoint } from \"./Evaluator\";\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.body.argument)) {\n        className += ' breakpoint'\n      }\n\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className={ className }\n            onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n          >\n            { lambda.body.argument.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type : Beta, context : lambda, broken : new Set })}\n            }>\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  isBreakpoint (node : AST) : boolean {\n    for (const breakpoint of this.breakpoints) {\n      if (breakpoint.context.identifier === node.identifier) {\n        return true\n      }\n    }\n    return false\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly redex : AST | null,\n    private readonly breakpoints : Array<Breakpoint>,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication(application: Application) : void {\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === application.identifier\n          &&\n        this.redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda(lambda: Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      const acc : JSX.Element = (\n        <span\n          className={ className }\n          onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            onClick={ () => {\n              this.onClick({ type: Beta, context: lambda, broken : new Set })}\n            }>\n              λ { ' ' }\n          </span>\n          <span\n            className={ className }\n            onClick={ () => this.onClick({ type : Beta, context, broken : new Set }) }\n          >\n            { args } { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumeral(churchNumber: ChurchNumeral) : void {\n    let className : string = 'churchnumeral'\n\n    if (this.redex !== null\n          &&\n        this.redex.identifier === churchNumber.identifier\n          &&\n        this.redex === churchNumber\n      ) {\n        className += ' redex'\n    }\n\n    if (this.isBreakpoint(churchNumber)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : churchNumber, broken : new Set }) }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro(macro: Macro) : void {\n    let className = 'macro'\n\n    if (this.redex !== null && this.redex.identifier === macro.identifier && this.redex === macro) {\n      className += ' redex'\n    }\n\n    if (this.isBreakpoint(macro)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => this.onClick({ type: Expansion, context : macro, broken : new Set }) }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}","import React from 'react'\n\nimport { AST, Beta, Expansion, NormalEvaluator } from 'lambdulus-core';\n\nimport './StepStyle.css'\nimport { Breakpoint } from './Evaluator'\nimport ReactPrinter from './ReactPrinter';\n\n\ninterface StepProperties {\n  tree : AST | null\n  breakpoints : Array<Breakpoint>\n  addBreakpoint (breakpoint : Breakpoint) : void\n}\n\nexport default function Step (props : StepProperties) : JSX.Element | null {\n  const { tree, addBreakpoint, breakpoints } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  let redex : AST | null  = null\n  const normal : NormalEvaluator = new NormalEvaluator(tree)\n  \n  if (normal.nextReduction instanceof Beta) {\n    redex = normal.nextReduction.redex\n  }\n  \n  if (normal.nextReduction instanceof Expansion) {\n    redex = normal.nextReduction.target\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, redex, breakpoints)\n\n  return (\n    <span className='step'>\n      { printer.print() }\n    </span>\n  )\n}","import React from 'react'\nimport Evaluator, { EvaluationState } from './Evaluator';\nimport MacroDefinition, { MacroDefinitionState } from './MacroDefinition';\nimport Note, { NoteState } from './Note';\nimport { AST } from 'lambdulus-core';\n\n\nexport enum BoxType {\n  expression,\n  macro,\n  note\n}\n\nexport type BoxState = EvaluationState | MacroDefinitionState | NoteState\n\ninterface BoxProperties {\n  state : BoxState\n  // children : JSX.Element\n  updateState (state : BoxState) : void\n  removeExpression () : void\n  editExpression (ast : AST) : void\n}\n\nexport default function Box (props : BoxProperties) : JSX.Element {\n  const { state, updateState } : BoxProperties = props\n  const { type } = state\n\n  if (type === BoxType.expression) {\n    return (\n      <div className=''>\n        {/* <div className='evaluationHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Expression added</i>\n        </div> */}\n\n        <Evaluator\n          state={ state as EvaluationState }\n          updateState={ updateState }\n          editExpression={ props.editExpression }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.macro) {\n    return (\n      <div className=''>\n        {/* <div className='macroHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Macro defined</i>\n        </div> */}\n        <MacroDefinition state={ state as MacroDefinitionState } />\n      </div>\n    )\n  }\n\n  if (type === BoxType.note) {\n    return (\n      <div className=''>\n        {/* <div className='noteHeader'>\n          <i className=\"icon far fa-trash-alt\" onClick={ props.removeExpression } />\n          <i className=\"icon fas fa-pencil-alt\" />\n          <i className='headerTitle'>Note added</i>\n        </div> */}\n        <Note state={ state as NoteState } />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      I do not know what to do with this yet.\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nimport {\n  AST,\n  tokenize,\n  parse,\n  Token,\n  MacroMap,\n  None,\n  NormalEvaluator\n} from 'lambdulus-core'\n\nimport './App.css'\nimport Editor from './components/Editor'\nimport { debounce, trimStr, HANDY_MACROS, getExpressionFromURL, isNote, isMacroDefinition, getSavedMacros } from './misc';\nimport { EvaluationState } from './components/Evaluator';\nimport TopBar from './components/MenuBar';\nimport Box, { BoxState, BoxType } from './components/Box';\nimport { MacroDefinitionState } from './components/MacroDefinition';\nimport { NoteState } from './components/Note';\nimport EvaluatorSpace from './components/EvaluatorSpace';\nimport MacroSpace from './components/MacroSpace';\n\n\nexport enum Screen {\n  main,\n  macrolist,\n  notebooks,\n}\n\nexport interface AppState {\n  editorState : {\n    expression : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  \n  singleLetterVars : boolean\n  macroTable : MacroMap\n\n  submittedExpressions : Array<BoxState>\n  screen : Screen\n\n}\n\nexport default class App extends Component<any, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.parseExpression = this.parseExpression.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    const [update, cancel] = debounce(this.updateURL.bind(this), 500)\n    this.updateURL = update\n    this.cancelUpdate = cancel\n    this.onExpression = this.onExpression.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onRemoveExpression = this.onRemoveExpression.bind(this)\n    this.updateMacros = this.updateMacros.bind(this)\n    this.onUpdateEvaluationState = this.onUpdateEvaluationState.bind(this)\n    this.onRemoveMacro = this.onRemoveMacro.bind(this)\n    this.onEnter = this.onEnter.bind(this)\n    this.onStep = this.onStep.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = getExpressionFromURL()\n\n    this.state = {\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      },\n      singleLetterVars : false,\n      macroTable : { ...HANDY_MACROS, ...getSavedMacros() },\n      submittedExpressions : [],\n      screen : Screen.main,\n    }\n  }\n\n  render () {\n    const {\n      editorState : { expression, caretPosition, syntaxError },\n      singleLetterVars,\n      macroTable,\n      submittedExpressions,\n      screen\n    } : AppState = this.state\n\n    const getEvaluatorSpace = () =>\n    <EvaluatorSpace\n      removeExpression={ this.onRemoveExpression }\n      updateState={ this.onUpdateEvaluationState }\n      submittedExpressions={ submittedExpressions }\n      editExpression={ (ast : AST) => this.setState({\n        ...this.state,\n        editorState : {\n          expression : ast.toString(),\n          caretPosition : ast.toString().length,\n          syntaxError : null\n        }\n      }) }\n    />\n\n    const getMacroSpace = () =>\n    <MacroSpace\n      macroTable={ macroTable }\n      removeMacro={ this.onRemoveMacro }\n    />\n\n    const notebooks : JSX.Element = (\n      <div>\n        Notebooks are not implemented yet.\n      </div>\n    )\n\n    // const onKeyDown = (event : KeyboardEvent) => {\n    //   if (! event.shiftKey && event.key === 'Enter') {\n    //     event.preventDefault()\n    //     this.onEnter()\n    //   }\n    // }\n\n    // document.onkeydown = onKeyDown\n  \n\n    return (\n      <div className='app'>\n\n        <TopBar\n          state={this.state}\n          onImport={ (state : AppState) => this.setState(state) }\n          onScreenChange={ (screen : Screen) => this.setState({\n            ...this.state,\n            screen,\n          }) }\n         />\n\n        {\n          screen === Screen.main ?\n            getEvaluatorSpace()\n            :\n            screen === Screen.macrolist ?\n              getMacroSpace()\n              :\n              notebooks\n        }\n\n        <Editor\n          expression={ expression }\n          caretPosition={ caretPosition }\n          onExpression={ this.onExpression }\n          onEnter={ this.onEnter }\n          syntaxError={ syntaxError }\n        />\n\n        <div id=\"anchor\"></div>\n\n      </div>\n    )\n  }\n\n  // TODO: does not have to be in this class\n  updateURL (expression : string) : void {\n    history.pushState({}, \"page title?\", \"#\" + encodeURI(expression))\n  }\n\n  // TODO: does not have to be in this class\n  cancelUpdate () : void {\n    // TODO: this is placeholder for cancel-debounced-function DONT REMOVE\n  }\n\n  onExpression (expression : string, caretPosition : number) : void {\n    this.setState({ ...this.state, editorState : { expression, caretPosition, syntaxError : null } } )\n    this.updateURL(expression)\n  }\n\n  // TODO: tohle pujde v podstate pryc\n  onUpdateEvaluationState (state : BoxState, index : number) : void {\n    const { submittedExpressions } : AppState = this.state\n\n    submittedExpressions[index] = {\n      ...submittedExpressions[index],\n      ...state,\n    }\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  onRemoveExpression (index : number) {\n    const { submittedExpressions } : AppState = this.state\n\n    const removed : BoxState = submittedExpressions.splice(index, 1)[0]\n\n    // TODO: solve deleting a macro revoking problem \n\n    this.setState({\n      ...this.state,\n      submittedExpressions\n    })\n  }\n\n  onEnter () : void {\n    const { editorState : { expression }, submittedExpressions } = this.state\n    const activeExpression : BoxState = submittedExpressions[submittedExpressions.length - 1]\n\n    if (expression.length || activeExpression === undefined || activeExpression.type !== BoxType.expression) {\n      this.onSubmit()\n    }\n    else {\n      this.onStep()\n    }\n  }\n\n  onStep () : void {\n    const { submittedExpressions } = this.state\n    const activeExpression : EvaluationState = submittedExpressions[submittedExpressions.length - 1] as EvaluationState\n    let { history, steps, lastReduction } = activeExpression\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    let ast = history[history.length - 1].clone()\n    \n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      submittedExpressions[submittedExpressions.length - 1] = {\n        ...activeExpression,\n        lastReduction,\n      }\n\n      this.setState({\n        ...this.state,\n        submittedExpressions,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    submittedExpressions[submittedExpressions.length - 1] = {\n      ...activeExpression,\n      history : [ ...history, ast ],\n      steps,\n      lastReduction,\n    }\n\n    this.setState({\n      ...this.state,\n      submittedExpressions,\n    })\n  }\n\n  // TODO: break-down to 3 or so methods\n  onSubmit () : void {\n    // TODO: maybe cancel and clear URL only after succsessful parsing\n    this.cancelUpdate()\n    \n    const { editorState : { expression, caretPosition, }, submittedExpressions, macroTable } : AppState = this.state\n    \n    // window.location.hash = encodeURI(expression)\n    history.pushState({}, \"\", \"#\" + encodeURI(expression))\n\n    //\n    // TODO: here decide if it is macro\n    // note\n    // expression to evaluate\n    // macro contains := and name must be valid expression - later i will implement own parsing endpoint in core\n    // note starts with # and can contains anything whatever user wants\n    // expression is already implemented and working\n    //\n\n    if (isMacroDefinition(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const [macroName, macroExpression] : Array<string> = expression.split(':=').map(trimStr)\n\n      const macroState : MacroDefinitionState = {\n        type : BoxType.macro,\n        __key : Date.now().toString(),\n        macroName,\n        macroExpression,\n      }\n\n      const newMacroTable : MacroMap = {\n        ...macroTable,\n        [macroName] : macroExpression\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, macroState ],\n        macroTable : newMacroTable,\n      })\n\n      this.updateMacros(newMacroTable)\n    }\n\n    else if (isNote(expression)) {\n      history.pushState({}, \"\", \"#\" + encodeURI(''))\n\n      const noteState : NoteState = {\n        type : BoxType.note,\n        __key : Date.now().toString(),\n        note : expression.substring(1)\n      }\n\n      this.setState({\n        ...this.state,\n        editorState : {\n          expression : '',\n          caretPosition : 0,\n          syntaxError : null,\n        },\n        submittedExpressions : [ ...submittedExpressions, noteState ]\n      })\n    }\n\n    else {\n      try {\n        const ast : AST = this.parseExpression(expression)\n        // window.location.hash = encodeURI('')\n        history.pushState({}, \"\", \"#\" + encodeURI(''))\n  \n        const evaluationState : EvaluationState = {\n          type : BoxType.expression,\n          __key : Date.now().toString(),\n          expression,\n          ast,\n          history : [ ast.clone() ],\n          steps : 0,\n          // isStepping : false,\n          isRunning : false,\n          lastReduction : null,\n          breakpoints : [],\n          timeoutID : undefined,\n          timeout : 10\n        }\n  \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression : '',\n            caretPosition : 0,\n            syntaxError : null,\n          },\n          submittedExpressions : [ ...submittedExpressions, evaluationState ]\n        })\n    \n      } catch (exception) {\n        this.updateURL(expression)\n        console.log(exception)\n        \n        this.setState({\n          ...this.state,\n          editorState : {\n            expression,\n            caretPosition,\n            syntaxError : exception,\n          }\n        })\n      }\n    }\n  }\n\n  updateFromURL () : void {\n    const { editorState : { expression : currentExpr } } : AppState = this.state\n    const expression : string = getExpressionFromURL()\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    this.setState({\n      ...this.state,\n      editorState : {\n        expression,\n        caretPosition : expression.length,\n        syntaxError : null\n      }\n    })\n  }\n\n  // THROWS Exceptions\n  parseExpression (expression : string) : AST {\n    const { singleLetterVars, macroTable } : AppState = this.state\n    \n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n\n  onRemoveMacro (name : string) : void {\n    const { macroTable } = this.state\n    \n    const newMacroTable = { ...macroTable }\n    delete newMacroTable[name]\n\n    this.setState({\n      ...this.state,\n      macroTable : newMacroTable\n    })\n\n    this.updateMacros(newMacroTable)\n  }\n\n  updateMacros (macroTable : MacroMap) : void {\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n}","import React, { PureComponent } from 'react'\n\nimport { AST, ASTReduction, None, NormalEvaluator, Beta, Lambda, Variable, Expansion, ChurchNumeral, Macro } from \"lambdulus-core\";\n\nimport './EvaluatorStyle.css'\nimport Controls from './Controls';\nimport Step from './Step';\nimport { mapRightFromTo, mapLeftFromTo } from '../misc'\nimport { BoxType } from './Box';\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n  broken : Set<AST>,\n}\n\nexport interface EvaluationState {\n  __key : string\n  type : BoxType\n  expression : string\n  ast : AST\n  history : Array<AST>\n  steps : number\n  isRunning : boolean\n  lastReduction : ASTReduction | null\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n}\n\nexport interface EvaluationStatePatch {\n  __key? : string\n  type? : BoxType\n  expression? : string\n  ast? : AST\n  history? : Array<AST>\n  steps? : number\n  isRunning? : boolean\n  lastReduction? : ASTReduction | null\n  breakpoints? : Array<Breakpoint>\n  timeoutID? : number | undefined\n  timeout? : number\n}\n\ninterface EvaluationProperties {\n  state : EvaluationState\n  updateState (state : EvaluationStatePatch) : void\n  editExpression (ast : AST) : void\n}\n\nexport default class Evaluator extends PureComponent<EvaluationProperties, EvaluationState> {\n  constructor (props : EvaluationProperties) {\n    super(props)\n\n    this.onClear = this.onClear.bind(this)\n    this.onStep = this.onStep.bind(this)\n    this.onRun = this.onRun.bind(this)\n    this.__onRun = this.__onRun.bind(this)\n    this.onStop = this.onStop.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { state, updateState } : EvaluationProperties = this.props\n    const {\n      history,\n      steps,\n      isRunning,\n      lastReduction,\n      breakpoints,\n      timeoutID,\n    } : EvaluationState = state\n\n    return (\n      <div className='box boxEval'>\n        <ul>\n          {\n            mapLeftFromTo(0, history.length - 2, history, (ast, i) =>\n              <li key={ i } className='inactiveStep' >\n                <Step\n                  breakpoints={ breakpoints }\n                  addBreakpoint={ () => {} }\n                  tree={ ast }\n                />\n                <i\n                className=\"hiddenIcon fas fa-pencil-alt\"\n                onClick={ () => this.props.editExpression(ast) } />\n              </li>)\n          }\n          <li key={history.length - 1} className='activeStep'>\n            <Step\n              breakpoints={ breakpoints }\n              addBreakpoint={ this.addBreakpoint }\n              tree={ history[history.length - 1] }\n            />\n            <i\n                className=\"hiddenIcon fas fa-pencil-alt\"\n                onClick={ () => this.props.editExpression(history[history.length - 1]) } />\n          </li>\n        </ul>\n        <Controls\n          onRun={ this.onRun }\n          onStop={ this.onStop }\n          onStep={ this.onStep }\n          onClear={ this.onClear }\n          isRunning={ isRunning }\n        />\n      </div>\n    )\n  }\n\n  onRun () : void {\n    const { state, updateState, } : EvaluationProperties = this.props\n    const { lastReduction, timeout } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    updateState({\n      isRunning : true,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  __onRun () {\n    const { state, updateState } = this.props\n    let { history, steps, lastReduction, isRunning, breakpoints, timeoutID, timeout } = state\n  \n    if ( ! isRunning) {\n      return\n    }\n    \n    if (lastReduction instanceof None) {\n      updateState({\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // let ast : AST = history[history.length - 1].clone()\n    let ast : AST = history[history.length - 1]\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n    \n    if (normal.nextReduction instanceof None) {\n      history = [ ast ]\n  \n      updateState({\n        history,\n        steps,\n        lastReduction,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // TODO: maybe refactor a little\n    let index : number = 0\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint, id) =>\n        (index = id,\n        this.shouldBreak(breakpoint, normal.nextReduction))\n    )\n  \n    if (breakpoint !== undefined) {\n      if (normal.nextReduction instanceof Expansion) {\n\n        breakpoint.broken.add(normal.nextReduction.target)\n      }\n\n      window.clearTimeout(timeoutID)\n      \n      // breakpoints.splice(index, 1)\n  \n      updateState({\n        isRunning : false,\n        breakpoints,\n        timeoutID : undefined,\n      })\n\n      console.log('NEMENIM AST')\n  \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ast ],\n      steps,\n      lastReduction,\n      timeoutID : window.setTimeout(this.__onRun, timeout),\n    })\n  }\n\n  onStop () : void {\n    const { updateState, state } : EvaluationProperties = this.props\n    const { timeoutID } = state\n  \n    window.clearTimeout(timeoutID)\n  \n    updateState({\n      isRunning : false,\n      timeoutID : undefined\n    })\n  }\n\n  onStep () : void {\n    const { state, updateState } : EvaluationProperties = this.props\n    let { history, steps, lastReduction } = state\n  \n    if (lastReduction instanceof None) {\n      return\n    }\n  \n    let ast = history[history.length - 1].clone()\n    // let ast = history[history.length - 1]\n\n    \n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      updateState({\n        lastReduction,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n    steps++\n  \n    updateState({\n      history : [ ...history, ast ],\n      steps,\n      lastReduction,\n    })\n  }\n\n  onClear () : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      history : [ state.ast.clone() ],\n      steps : 0,\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n    })\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    let { state, updateState } : EvaluationProperties = this.props\n  \n    updateState({\n      breakpoints : [ ...state.breakpoints, breakpoint ],\n    })\n  }\n\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Lambda\n        && reduction.target.identifier === breakpoint.context.body.identifier\n      ) {\n        return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Variable\n        && reduction.redex.left instanceof Lambda\n        && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n        // && ! breakpoint.broken.has(reduction.redex.left.argument)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumeral\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof Macro\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n  \n    return false\n  }\n\n\n\n}\n\n\n\n\n// function equalProps (oldProps : EvaluationProperties, newProps : EvaluationProperties) : boolean {\n//   return (\n//     oldProps.state.isRunning === newProps.state.isRunning\n//       &&\n//     oldProps.state.steps === newProps.state.steps\n//       &&\n//     oldProps.state.timeout === newProps.state.timeout\n//   )\n// }\n\n// export default React.memo(Evaluator, equalProps)\n\n// function _Evaluator (props : EvaluationProperties) : JSX.Element {\n//   const {\n//     state,\n//     updateState,\n//   } : EvaluationProperties = props\n//   const {\n//     history,\n//     steps,\n//     // isStepping,\n//     isRunning,\n//     lastReduction,\n//     breakpoints,\n//     timeoutID,\n//   } : EvaluationState = state\n\n//   return (\n//     <div className='box'>\n//       <Controls\n//         onRun={ () => onRun(props) }\n//         onStop={ () => onStop(props) }\n//         onStep={ () => onStep(props) }\n//         onClear={ () => onClear(props) }\n//         isRunning={ isRunning }\n//       />\n\n//       <ul>\n//         <li key={history.length - 1} className='activeStep'>\n//           <Step\n//             addBreakpoint={ (breakpoint : Breakpoint) => addBreakpoint(props, breakpoint) }\n//             tree={ history[history.length - 1] }\n//           />\n//         </li>\n//         {\n//           mapRightFromTo(0, history.length - 2, history, (ast, i) =>\n//             <li key={ i } className='inactiveStep' >\n//               <Step addBreakpoint={ () => {} } tree={ ast } />\n//             </li>)\n//         }\n//       </ul>\n//     </div>\n//   )\n// } ","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface MacroDefinitionState {\n  __key : string\n  type : BoxType\n  macroName : string\n  macroExpression : string\n}\n\nexport interface MacroDefinitionProperties {\n  state : MacroDefinitionState\n}\n\nexport default function MacroDefinition (props : MacroDefinitionProperties) : JSX.Element {\n  const { state : { macroName, macroExpression } } : MacroDefinitionProperties = props\n\n  return (\n    <div className='box boxMacro'>\n      { macroName } := { macroExpression }\n    </div>\n  )\n}","import React from 'react'\nimport { BoxType, BoxState } from './Box';\n\n\nexport interface NoteState {\n    __key : string\n  type : BoxType\n  note : string\n}\n\nexport interface NoteProperties {\n  state : NoteState\n}\n\nexport default function Note (props : NoteProperties) : JSX.Element {\n  const { state : { note } } : NoteProperties = props\n\n  return (\n    <div className='box boxNote'>\n      { note }\n    </div>\n  )\n}","import React, { ChangeEvent } from 'react'\n\nimport './TopBarStyle.css'\n\nimport { AppState, Screen } from '../App'\nimport { EvaluationState } from './Evaluator';\nimport { AST, tokenize, parse, Token, MacroMap } from 'lambdulus-core';\nimport { BoxState, BoxType } from './Box';\n\n\ninterface MenuBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n  onScreenChange (screen : Screen) : void\n}\n\nexport default function MenuBar (props : MenuBarProperties) : JSX.Element {\n  const { state, onImport, onScreenChange } : MenuBarProperties = props\n  const { screen } = state\n\n  const dehydrated : object = dehydrate(state)\n\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n        {/* <i className=\"icon fas fa-cog fa-2x\" /> */}\n        <div>\n          <i id='notebooks' className=\"icon fas fa-book-open fa-2x\" />\n          <p className='iconLabel'>Notebooks</p>\n        </div>\n\n        <div>\n          {\n            screen === Screen.main ?\n              <i className=\"icon fas fa-list-ul fa-2x\" onClick={ () => onScreenChange(Screen.macrolist) } />\n              :\n              <i className=\"icon far fa-window-close fa-2x\" onClick={ () => onScreenChange(Screen.main) } />\n          }\n          <p className='iconLabel'>Macros</p>\n        </div>        \n        \n\n        {/* <i className=\"save icon fas fa-save fa-2x\" /> */}\n      <div>\n        <a\n          className='export'\n          href={ link }\n          download=\"notebook_lambdulus.json\"\n          onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n        >\n          <i id='download' className=\"icon fas fa-cloud-download-alt fa-2x\" />\n        </a>\n        <p className='iconLabel'>Export</p>\n      </div>\n      \n      <div>\n        <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n        <label htmlFor=\"input\"><i className=\"icon fas fa-cloud-upload-alt fa-2x\"></i></label>\n        <p className='iconLabel'>Import</p>\n      </div>      \n    </div>\n  )\n}\n\nfunction dehydrateBox (box : BoxState) : BoxState {\n\n  // console.log('dehydrate')\n  const { type } : BoxState = box\n\n  if (type === BoxType.expression) {\n\n    // console.log('dehydrate expression')\n    return {\n      ...box,\n      ast : null as any,\n      history : [],\n      isRunning : false,\n      lastReduction : null,\n      breakpoints : [],\n      timeoutID : undefined,\n    }\n  }\n\n  // console.log('dehydrate something else')\n\n  return box\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedExpressions : state.submittedExpressions.map(dehydrateBox)\n  }\n}\n\nfunction hydrateBox (box : BoxState, config : Config) : BoxState {\n  const { type } : BoxState = box\n  \n  if (type === BoxType.expression) {\n    const ast : AST = parseExpression((box as EvaluationState).expression, config)\n\n    return {\n      ...box,\n      ast,\n      history : [ ast ],\n    }\n  }\n\n  return box\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  const { singleLetterVars, macroTable } = dehydrated\n  const config = { singleLetterVars, macroTable }\n\n  return {\n    ...dehydrated,\n    submittedExpressions : dehydrated.submittedExpressions.map((box) => hydrateBox(box, config))\n  }\n}\n\ninterface Config {\n  singleLetterVars : boolean\n  macroTable : MacroMap\n}\n\nfunction parseExpression (expression : string, config : Config) : AST {\n  const { singleLetterVars, macroTable } : Config = config\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file)\n\n  \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  // If we are replacing a previously generated file we need to\n  // manually revoke the object URL to avoid memory leaks.\n  // if (textFile !== null) {\n  //   window.URL.revokeObjectURL(textFile);\n  // }\n\n  return window.URL.createObjectURL(data);\n}","import React from 'react'\nimport Box, { BoxState } from './Box';\nimport { EvaluationState } from './Evaluator';\nimport { AST } from 'lambdulus-core';\n\n\nexport interface EvaluatorProperties {\n  submittedExpressions : Array<BoxState>\n  updateState (state : BoxState, index : number) : void\n  removeExpression (index : number) : void\n  editExpression (ast : AST) : void\n}\n\nexport default function EvaluatorSpace (props: EvaluatorProperties) : JSX.Element {\n  const { submittedExpressions, updateState, removeExpression } = props\n\n  return (\n    <div className='evaluatorSpace'>\n      {\n        submittedExpressions.length ?\n          <ul>\n            { submittedExpressions.map((state : BoxState, i : number) =>\n              <li key={ state.__key }>\n                <Box\n                  state={ state }\n                  updateState={ (state : EvaluationState) => updateState(state, i) }\n                  removeExpression={ () => removeExpression(i) }\n                  editExpression={ props.editExpression }\n                />\n              </li>\n              ) }\n          </ul>\n          :\n          null\n      }\n    </div>\n  )\n}","import React from 'react'\nimport { MacroMap, builtinMacros } from 'lambdulus-core';\n\n\nexport interface MacroProperties {\n  macroTable : MacroMap\n  removeMacro (name : string) : void\n}\n\nexport default function MacroSpace (props : MacroProperties) : JSX.Element {\n  const { macroTable, removeMacro } = props\n\n  return (\n    <div className='macroSpace'>\n      <p>Built-in Macros</p>\n      <ul>\n        { Object.entries(builtinMacros).map(([macroName, macroExpression]) =>\n          <div key={ macroName }>\n            {/* <div className='macroHeader'>\n              <i className='headerTitle'>{ macroName }</i>\n            </div> */}\n            <li>\n              <div className='box boxMacro'>\n                { macroName } := { macroExpression }\n              </div>\n            </li>\n          </div>\n        ) }\n      </ul>\n\n      <p>User-defined Macros</p>\n      <ul>\n        { Object.entries(macroTable).map(([macroName, macroExpression]) =>\n            <div key={ macroName }>\n              {/* <div className='macroHeader'>\n                <i className=\"icon far fa-trash-alt\" onClick={ () => removeMacro(macroName) } />\n                <i className=\"icon fas fa-pencil-alt\" />\n                <i className='headerTitle'>{ macroName }</i>\n              </div> */}\n              <li>\n                <div className='box boxMacro'>\n                  { macroName } := { macroExpression }\n                </div>\n              </li>\n            </div>\n          ) }\n      </ul>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}