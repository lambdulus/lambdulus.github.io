{"version":3,"sources":["misc/index.ts","components/Editor.tsx","components/TreeComparator.ts","components/EmptyEvaluator.tsx","components/ReactPrinter.tsx","components/ReductionMessage.tsx","components/Step.tsx","components/InactiveEvaluator.tsx","components/Controls.tsx","components/Evaluator.tsx","components/EvaluatorBox.tsx","components/MacroDefinition.tsx","components/Box.tsx","components/Note.tsx","components/MenuBar.tsx","components/BoxSpace.tsx","components/MacroSpace.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["trimStr","str","trim","ActionType","HANDY_MACROS","FACT","FACCT","FIB","APPEND","LISTGREQ","LISTLESS","LISTGR","LISTEQ","QUICKSORT","INFLIST","REMOVENTH","NTH","LEN","GETNTH","MAP","REDUCE","APPLY","RANGE","LISTCOMPR","MOD","INFIX","TreeComparator","roots","Object","classCallCheck","this","translator","Map","equals","context","_roots","_roots2","toArray","slice","compare","createClass","key","value","_this$context","slicedToArray","left","right","Lambda","backup","entries","set","argument","name","Application","Macro","ChurchNumeral","Variable","get","Editor","props","placeholder","content","caretPosition","syntaxError","isMarkDown","onContent","onEnter","onExecute","lines","split","length","react_default","a","createElement","className","concat","InputField","onChange","event","target","selectionEnd","replace","onKeyDown","shiftKey","ctrlKey","preventDefault","wrap","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","focus","EmptyEvaluator","_this$props","isActive","editor","makeActive","onDoubleClick","Editor_Editor","history","PureComponent","ReactPrinter","tree","onClick","reduction","breakpoints","_this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","isBreakpoint","Alpha","Array","from","conversions","some","conversion","identifier","args","Symbol","type","Beta","broken","Set","printMultiLambda","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","application","leftClassName","rightClassName","redex","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","variable","ASTVisitor","ReductionMessage","lastReduction","Eta","memo","stepRecord","addBreakpoint","children","strategy","ast","step","message","strategyToEvaluator","nextReduction","printer","print","lastStep","InactiveEvaluator","components_Step","globalStrategy","addBox","createBoxFrom","require","Switch","Radio","Controls","isExercise","makeExercise","endExercise","id","checked","e","shape","Evaluator","state","Controls_Controls","setBoxState","objectSpread","PromptPlaceholder","VALIDATE_MODE","EVAL_MODE","to","sequence","fn","result","i","mapLeftFromTo","toString","isNormalForm","breakpoint","_this$props2","toConsumableArray","EvaluationStrategy","NORMAL","NormalEvaluator","APPLICATIVE","ApplicativeEvaluator","OPTIMISATION","OptimizeEvaluator","EvaluatorBox","bind","onSubmitExpression","parseExpression","onExerciseStep","onStep","onRun","onStop","shouldBreak","expression","EmptyEvaluator_EmptyEvaluator","Evaluator_Evaluator","InactiveEvaluator_InactiveEvaluator","singleLetterNames","BoxType","EXPRESSION","__key","Date","now","clone","isRunning","timeoutID","timeout","_this$props$state","console","log","_this$props3","None","exception","_this$props4","userAst","normal","perform","_this$props5","_this$props6","push","window","setTimeout","_this$props7","pop","find","add","clearTimeout","_this$props8","has","macroTable","singleLetterVars","tokens","tokenize","lambdaLetters","parse","MacroDefinition","defineMacro","macroName","macroExpression","_state$editor","_content$split$map","map","_content$split$map2","builtinMacros","Error","root","isValidName","isValidExpression","ReactMarkdown","Note","_props$state","note","_props$state$editor","isEditing","onSubmitNote","source","Box","EvaluatorBox_EvaluatorBox","MACRO","NOTE","MenuBar","onImport","onScreenChange","screen","dehydrated","submittedBoxes","dehydrateBox","dehydrate","link","data","Blob","URL","createObjectURL","createURL","JSON","stringify","Screen","main","macrolist","href","download","revokeObjectURL","accept","files","file","reader","FileReader","onload","box","_ref","config","hydrateBox","hydrate","readAsText","onFiles","htmlFor","BoxSpace","activeBoxIndex","addBoxControls","addEmptyBox","INIT","createEmptyExp","createEmptyMacro","boxState","_setBoxState","_x","apply","arguments","_makeActive","MacroSpace","removeMacro","_ref2","_ref3","_ref4","App","changeActiveBox","changeActiveStrategy","changeActiveSingleLetterNames","getActiveStrategy","getActiveSingleLetterNames","updateMacros","createBoxFromURL","localStorage","getItem","addEventListener","_this$state","MenuBar_MenuBar","setState","App_Switch","disabled","App_Radio","style","hash","decodeURI","location","substring","indexOf","index","_this$state2","expPrefix","pushState","encodeURI","_this$state3","_this$state4","_this$state5","activeBoxState","_this$state6","_this$state7","setItem","enabled","_this$state8","newMacroTable","definition","defineProperty","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c498086.chunk.js","sourcesContent":["import { MacroMap } from \"lambdulus-core\"\n\n\nexport function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function getSavedMacros () : MacroMap {\n  return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n}\n\nexport function trimStr (str : string) : string {\n  return str.trim()\n}\n\nexport function mapLeftFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = from; i <= to; ++i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }\n\nexport const HANDY_MACROS : MacroMap = {\n  FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  INFIX : 'APPLY (λ l op r . op l r)',\n}","import React, { ChangeEvent, useState, SetStateAction, Dispatch, KeyboardEvent } from 'react'\n\nimport '../styles/Editor.css'\n\n// import { EvaluationStrategy } from '../App'\n\n\nexport enum ActionType {\n  ENTER_EXPRESSION = 'Enter Expression',\n  ENTER_EXERCISE = 'Enter Exercise',\n  NEXT_STEP = 'Next Step',\n  RUN = 'Run',\n  ENTER_MD = 'Enter MarkDown',\n}\n\ninterface EditorProperties {\n  placeholder: string\n  content : string\n  caretPosition : number\n  syntaxError : Error | null\n  isMarkDown : boolean\n  \n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n  // onReset () : void\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const {\n    placeholder,\n    content,\n    caretPosition,\n    syntaxError,\n    isMarkDown,\n\n    onContent,\n    onEnter,\n    onExecute,\n  } : EditorProperties = props\n  const lines : number = content.split('\\n').length\n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : content } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    content = content.replace(/\\\\/g, 'λ')\n\n    onContent(content, caretPosition)\n  }\n\n  // TODO: Editor should not decide that - it should only implement onEnter onShiftEnter onCtrlEnter\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if ( ! event.shiftKey && ! event.ctrlKey && event.key === 'Enter') {\n      \n      if (isMarkDown) {\n        return\n      }\n\n      event.preventDefault()\n      onEnter()\n    }\n\n    if (event.shiftKey && event.key === 'Enter' && isMarkDown) {\n      event.preventDefault()\n      onEnter()\n    }\n    if (event.ctrlKey && event.key === 'Enter') {\n      event.preventDefault()\n      onExecute()\n    }\n\n    // TODO: not yet\n    // if (event.ctrlKey && event.key === 'r') {\n    //   event.preventDefault()\n    //   onReset()\n    // }\n  }\n\n  return (\n    <div className='editorContainer'>\n      {\n        syntaxError ?\n        <p className='editorError'>\n          { `${syntaxError}` }\n        </p>\n        :\n        null\n      }\n\n      <div className=\"editor\">\n        <InputField\n          placeholder={ placeholder }\n          content={ content }\n          lines={ lines }\n          caretPosition={ caretPosition }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n        />\n      </div>\n    </div>\n  )\n}\n\ninterface InputProps {\n  placeholder : string\n  content : string\n  lines : number\n  caretPosition : number\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { placeholder, content, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ content }\n      placeholder={ placeholder }\n      wrap='hard'\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n          element.focus()\n        }\n      } }\n    />\n  )\n}","import { AST, Lambda, Application, Macro, ChurchNumeral, Variable } from \"lambdulus-core\";\n\n///////////////////////////////////////////////////////////////////////////////////////\n\ntype Pair<T> = [T, T]\ntype Triple<T> = [T, T, T]\n\n\n// TODO: fix the public equals interface, maybe public get and private set?\n// maybe implement public get method and bool itself leave private?\n//\n// first I need more trees, I need the previous AST\nexport class TreeComparator {\n  private translator : Map<string, string> = new Map\n  public equals : boolean = true\n  private context : Pair<AST>\n\n  constructor (readonly roots : Pair<AST> ) {\n    [ ...this.context ] = roots\n    // TODO: I need to compare roots first\n    this.compare()\n  }\n\n  compare () : void {\n    /**\n    TODO: compare need to compare both children if got\n    if one of them is incorrect\n    then solve that problem\n    if both of them is incorrect\n    then solve both problems and then decide how both come together\n\n    then I have an instance of knowledge system\n    I can fire up that system in this context (this node with invalid children)\n    system will need to get instance of something to call methods on\n    because system needs to ask questions - like, is this possible,\n    is this error applicable?\n    so instead of human, code will look up the AST and answer the questions\n    so it will be some kind of class which is able to observe all 3 ASTs at the same time\n    it will also have implemented query methods,\n    probably wont be many of them, just few\n    **/\n    \n    const [ left, right ] : Pair<AST> = this.context\n\n    if (left instanceof Lambda && right instanceof Lambda) {\n      const backup : Map<string, string> = new Map(this.translator.entries())\n\n      this.translator.set(left.argument.name(), right.argument.name())\n      this.context = [ left.right, right.right ]\n      this.compare()\n\n      this.translator = backup\n    }\n    else if (left instanceof Application && right instanceof Application) {\n      this.context = [ left.left, right.left ]\n      this.compare()\n\n      if ( ! this.equals) {\n        return\n      }\n\n      this.context = [ left.right, right.right ]\n      this.compare()\n    }\n    else if (left instanceof Macro && right instanceof Macro) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof ChurchNumeral && right instanceof ChurchNumeral) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof Variable && right instanceof Variable) {\n      this.equals = this.translator.get(left.name()) === right.name()\n    }\n    else {\n      this.equals = false\n    }\n  }\n}","import React, { PureComponent } from 'react'\n\nimport Editor from './Editor'\nimport { StepRecord } from './EvaluatorBox'\n\ninterface EmptyEvaluatorProps {\n  className : string\n  isActive : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  history : Array<StepRecord>\n\n  makeActive () : void\n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n}\n\n\nexport default class EmptyEvaluator extends PureComponent<EmptyEvaluatorProps> {\n  render () : JSX.Element {\n    const { className, isActive, editor, makeActive } = this.props\n    const {\n      placeholder,\n      content,\n      caretPosition,\n      syntaxError,\n    } = editor\n\n    return (\n      <div\n        className={ `${className} ${isActive ? '' : ' inactiveBox'}` }\n        onDoubleClick={ this.props.makeActive } >\n          {/* <p className='emptyStep'>Empty expression box.</p> */}\n          {\n            isActive ?\n              (\n                <Editor\n                  placeholder={ placeholder } // data\n                  content={ content } // data\n                  caretPosition={ caretPosition } // data\n                  syntaxError={ syntaxError } // data\n                  isMarkDown={ false } // data\n\n                  onContent={ this.props.onContent } // fn\n                  onEnter={ this.props.onEnter } // fn // tohle asi bude potreba\n                  onExecute={ this.props.onExecute } // fn // tohle asi bude potreba\n                />\n              )\n              :\n              (\n                <p className='inactiveMessage'>\n                  Collapsing { Math.max(0, this.props.history.length - 1) } { this.props.history.length === 2 ? 'step' : 'steps' }. Double click to activate this box.\n                </p>\n              )\n          }\n        </div>\n    )\n  }\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumeral, Expansion, Macro, ASTReduction, None, Alpha } from \"lambdulus-core\";\n\nimport { Breakpoint } from \"./EvaluatorBox\";\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n  private argument : Variable | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.body.argument)) {\n        className += ' breakpoint'\n      }\n\n      // bug@highlight-alpha\n      let set = false\n      if (this.reduction instanceof Alpha\n            &&\n          Array.from(this.reduction.conversions).some((conversion : Lambda) => {\n            return conversion.identifier === lambda.body.identifier\n          })\n          ) {\n              this.argument = context\n              set = true\n      }\n\n      // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n      let argument : Variable | null = this.argument\n      if (this.argument !== lambda.body.argument\n          &&\n          this.argument !== null\n          &&\n          this.argument.name() === lambda.body.argument.name()) {\n        this.argument = null\n      } // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n\n      // TODO: same here\n      if (this.argument\n          &&\n          this.argument.name() === context.name()) {\n            className += ' substitutedArg'\n        }\n\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className={ className }\n            onClick={ () => {\n              (context as any).identifier = Symbol()\n              this.onClick({ type : Beta, context, broken : new Set }) }\n            }\n          >\n            { context.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n      if (set === true) {\n        this.argument = null\n      }\n      this.argument = argument // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            >\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  isBreakpoint (node : AST) : boolean {\n    for (const breakpoint of this.breakpoints) {\n      if (breakpoint.context.identifier === node.identifier) {\n        return true\n      }\n    }\n    return false\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly reduction : ASTReduction,\n    private readonly breakpoints : Array<Breakpoint>,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication (application: Application) : void {\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n    let set : boolean = false\n    let redex : AST | null = null\n\n    if (this.reduction instanceof Beta) {\n      redex = this.reduction.redex\n    }\n    // else if (this.reduction instanceof Expansion) {\n    //   redex = this.reduction.target\n    // } // to asi neni uplne potreba tady\n\n    if (redex !== null\n          &&\n        redex.identifier === application.identifier // tohle je asi trosku useles\n          &&\n        redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n\n        // TODO: this is probably not good and should be done other way\n\n        if (application.left instanceof Lambda) {\n          this.argument = application.left.argument\n          set = true\n        }\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      // tohle delam proto, ze se nesmi vypnout this.argument u libovolne aplikace, jenom u te ktera ho setnula\n      // priklad + 2 3 a krokuj - zakomentuj a krokuj znovu Y se bude chovat spatne hned v prvnich krocich\n      if (set) {\n        this.argument = null\n      }\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      // tohle delam proto, ze se nesmi vypnout this.argument u libovolne aplikace, jenom u te ktera ho setnula\n      // priklad + 2 3a krokuj - zakomentuj a krokuj znovu Y se bude chovat spatne hned v prvnich krocich\n      if (set) {\n        this.argument = null\n      }\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className='application'>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda (lambda: Lambda) : void {\n    // TODO: this also seems not so elegant and clean\n    let argument : Variable | null = this.argument\n    if (this.argument !== lambda.argument\n        &&\n        this.argument !== null\n        &&\n        this.argument.name() === lambda.argument.name()) {\n      this.argument = null\n    }\n\n\n    // multilambda\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      // TODO: same here\n      if (this.argument\n        &&\n        this.argument.name() === context.name()) {\n          className += ' substitutedArg'\n      }\n\n      const acc : JSX.Element = (\n        <span\n          className={ className }\n          onClick={ () => {\n            (context as any).identifier = Symbol()\n            this.onClick({ type : Beta, context, broken : new Set }) }\n          }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n      }\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            >\n              λ { ' ' }\n          </span>\n          <span\n            className={ className }\n            onClick={ () => {\n              (context as any).identifier = Symbol()              \n              this.onClick({ type : Beta, context, broken : new Set }) }\n            }\n          >\n            { args } { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n\n    if (argument !== null) {\n      this.argument = argument\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumeral (churchNumber: ChurchNumeral) : void {\n    let className : string = 'churchnumeral'\n    const redex : AST | null = this.reduction instanceof Expansion ? this.reduction.target : null\n\n    if (redex !== null\n          &&\n        redex.identifier === churchNumber.identifier\n          &&\n        redex === churchNumber\n      ) {\n        className += ' redex'\n    }\n\n    if (this.isBreakpoint(churchNumber)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => {\n          (churchNumber as any).identifier = Symbol()\n          this.onClick({ type: Expansion, context : churchNumber, broken : new Set }) }\n        }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro (macro: Macro) : void {\n    let className = 'macro'\n    const redex : AST | null = this.reduction instanceof Expansion ? this.reduction.target : null\n\n    if (redex !== null\n          &&\n        redex.identifier === macro.identifier\n          &&\n        redex === macro\n        ) {\n      className += ' redex'\n    }\n\n    if (this.isBreakpoint(macro)) {\n      className += ' breakpoint'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        onClick={ () => {\n          (macro as any).identifier = Symbol()\n          this.onClick({ type: Expansion, context : macro, broken : new Set }) }\n        }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable (variable: Variable): void {\n    // TODO: same here - not so clean\n    let className : string = 'variable'\n\n    if (this.argument\n        &&\n        this.argument.name() === variable.name()) {\n          className += ' substitutedArg'\n      }\n\n    this.rendered = <span className={ className } >{ variable.name() }</span>\n  }\n}","import React from 'react'\nimport { ASTReduction, Beta, Alpha, Expansion } from 'lambdulus-core';\nimport { Eta } from 'lambdulus-core/dist/reductions/eta';\n\n\ninterface ReductionMessageProperties {\n  lastReduction : ASTReduction | null\n}\n\nexport default function ReductionMessage (props : ReductionMessageProperties) : JSX.Element {\n  const { lastReduction } = props\n\n  if (lastReduction === null) {\n    return null as any\n  }\n\n  if (lastReduction instanceof Beta) {\n    return (\n      <p className='lastReduction'>\n        β reduction\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Alpha) {\n    return (\n      <p className='lastReduction'>\n        α conversion\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Expansion) {\n    return (\n      <p className='lastReduction'>\n        Macro expansion\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Eta) {\n    return (\n      <p className='lastReduction'>\n        η conversion\n      </p>\n    )\n  }\n\n  else {\n    return null as any\n  }\n  \n}","import React, { memo } from 'react'\nimport { AST, Beta, Expansion, NormalEvaluator, ASTReduction, Alpha } from 'lambdulus-core'\n\nimport '../styles/Step.css'\n\nimport { Breakpoint, StepRecord, _Evaluator, strategyToEvaluator } from './EvaluatorBox'\nimport ReactPrinter from './ReactPrinter'\nimport ReductionMessage from './ReductionMessage'\nimport { EvaluationStrategy, } from '../App';\n\n\ninterface StepProperties {\n  stepRecord : StepRecord\n  breakpoints : Array<Breakpoint>\n  addBreakpoint (breakpoint : Breakpoint) : void\n  children : JSX.Element\n  strategy : EvaluationStrategy\n  lastStep : boolean\n}\n\n// This is done because of highlighting - if Strategy is changed ->\n// old steps should not be re-highlighted with changed Strategy - but stay same\nexport default memo(Step, (props : StepProperties) => !props.lastStep)\n\nfunction Step (props : StepProperties) : JSX.Element | null {\n  const { stepRecord, addBreakpoint, breakpoints, children, strategy } = props\n\n  const { ast : tree, lastReduction, step, message } = stepRecord\n\n  if (tree === null) {\n    return null\n  }\n\n  // TODO: tohle se musi fixnout\n  // validni redex se musi dostat ze statu a ne si ho tedka vymyslet sam\n\n  // let redex : AST | null  = null\n  const evaluator : _Evaluator = new (strategyToEvaluator(strategy) as any)(tree)\n  const reduction : ASTReduction = evaluator.nextReduction\n  // if (normal.nextReduction instanceof Beta) {\n  //   redex = normal.nextReduction.redex\n  // }\n  \n  // if (normal.nextReduction instanceof Expansion) {\n  //   redex = normal.nextReduction.target\n  // }\n\n  // if (normal.nextReduction instanceof Alpha) {\n    \n  // }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, reduction, breakpoints)\n\n  return (\n    <span className='step'>\n      <ReductionMessage lastReduction={ lastReduction } />\n      <div className='inlineblock' >\n        <p className='stepNumber' >\n          { step } :\n        </p>\n        { printer.print() }\n        { children }\n        {\n          stepRecord.message === '' ?\n            null\n            :\n            <p className='stepMessage'>\n              { stepRecord.message }\n            </p>\n        }\n      </div>\n    </span>\n  )\n}","import React, { PureComponent } from 'react'\n\nimport Step from './Step'\nimport { EvaluationState, StepRecord, Breakpoint } from './EvaluatorBox'\nimport { BoxState } from './Box'\nimport { EvaluationStrategy } from '../App'\n\ninterface InactiveEvaluatorProps {\n  className : string\n  breakpoints : Array<Breakpoint>\n  history : Array<StepRecord>\n  globalStrategy : EvaluationStrategy\n\n  makeActive () : void\n  addBox (boxState : BoxState) : void\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState\n}\n\n\nexport default class InactiveEvaluator extends PureComponent<InactiveEvaluatorProps> {\n  render () : JSX.Element {\n    const { className } = this.props\n\n    return (\n      <div className={ className + ' inactiveBox' } onDoubleClick={ this.props.makeActive } >\n          <ul className='UL'>\n            <li key={ 0 } className='activeStep LI'>\n              <Step\n                breakpoints={ this.props.breakpoints }\n                addBreakpoint={ () => {} } // blank function - NOOP\n                stepRecord={ this.props.history[0] }\n                strategy={ this.props.globalStrategy }\n                lastStep={ false }\n              >\n                <i\n                  className=\"hiddenIcon fas fa-pencil-alt\"\n                  onClick={ () => this.props.addBox(this.props.createBoxFrom(this.props.history[0])) }\n                />\n              </Step>\n            </li>\n          </ul>\n          <p className='inactiveMessage'>\n            Collapsing { this.props.history.length - 1 } { this.props.history.length === 2 ? 'step' : 'steps' }. Double click to activate this box.\n          </p>\n        </div>\n    )\n  }\n}","import React, { ChangeEvent } from 'react'\nconst { Switch, Radio } = require('pretty-checkbox-react')\n\n\nimport 'pretty-checkbox'\nimport '../styles/Controls.css'\n\n\nexport interface ControlsProps {\n  isExercise : boolean\n  makeExercise () : void\n  endExercise () : void\n}\n\n// TODO: maybe not really needed or rename it accordingly\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    isExercise,\n    makeExercise,\n    endExercise,\n  } : ControlsProps = props\n\n  return (\n    <div id=\"controls\">\n      <div>\n        <Switch\n          className='exerciseSwitch'\n          checked={ isExercise }\n          onChange={ (e : ChangeEvent<HTMLInputElement>) =>\n            e.target.checked ? makeExercise() : endExercise()\n          }\n          shape=\"fill\"\n        >\n          Exercise\n        </Switch>\n      </div>\n    </div>\n  )\n}","import React, { PureComponent } from 'react'\n\nimport Controls from './Controls'\nimport Step from './Step'\nimport { EvaluationState, StepRecord, Breakpoint } from './EvaluatorBox'\nimport { PromptPlaceholder, EvaluationStrategy } from '../App'\nimport { mapLeftFromTo } from '../misc'\nimport { BoxState } from './Box'\nimport Editor from './Editor'\n\n\ninterface EvaluatorProps {\n  className : string\n  isExercise : boolean\n  state : EvaluationState\n  breakpoints : Array<Breakpoint>\n  history : Array<StepRecord>\n  globalStrategy : EvaluationStrategy\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  isNormalForm : boolean\n\n  addBox (boxState : BoxState) : void\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState\n  setBoxState (state : EvaluationState) : void\n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n}\n\nexport default class Evaluator extends PureComponent<EvaluatorProps> {\n\n  render () : JSX.Element {\n    const { className, isExercise, state, editor } = this.props\n\n    const {\n      placeholder,\n      content,\n      caretPosition,\n      syntaxError,\n    } = editor\n\n    return (\n      <div className={ className }>\n        <Controls\n          isExercise={ isExercise }\n          makeExercise={ () =>\n            this.props.setBoxState({\n              ...state,\n              isExercise : true,\n              editor: {\n                ...state.editor,\n                placeholder : PromptPlaceholder.VALIDATE_MODE,\n              },\n            })\n          }\n          endExercise={ () =>\n            this.props.setBoxState({\n              ...state,\n              isExercise : false,\n              editor: {\n                ...state.editor,\n                placeholder : PromptPlaceholder.EVAL_MODE,\n              },\n            })\n          }\n        />\n        <ul className='UL'>\n          {\n            mapLeftFromTo(0, this.props.history.length - 2, this.props.history, (stepRecord : StepRecord, i : Number) =>\n              <li key={ i.toString() } className='inactiveStep LI' >\n                <Step\n                  breakpoints={ this.props.breakpoints }\n                  addBreakpoint={ () => {} }\n                  stepRecord={ stepRecord }\n                  strategy={ this.props.globalStrategy }\n                  lastStep={ false }\n                >\n                  <i\n                    className=\"hiddenIcon fas fa-pencil-alt\"\n                    onClick={ () => this.props.addBox(this.props.createBoxFrom(stepRecord)) }\n                  />\n                </Step>\n              </li>)\n          }\n          <li key={this.props.history.length - 1} className='activeStep LI'>\n            <Step\n              breakpoints={ this.props.breakpoints }\n              addBreakpoint={ this.addBreakpoint }\n              stepRecord={ this.props.history[this.props.history.length - 1] }\n              strategy={ this.props.globalStrategy }\n              lastStep={ true }\n            >\n                <i\n                  className=\"hiddenIcon fas fa-pencil-alt\"\n                  onClick={ () => this.props.addBox(this.props.createBoxFrom(this.props.history[this.props.history.length - 1])) }\n                />\n            </Step>\n          </li>\n        </ul>\n\n        {\n          this.props.isNormalForm ?\n            null\n            :\n            (\n              <Editor\n                placeholder={ placeholder } // data\n                content={ content } // data\n                caretPosition={ caretPosition } // data\n                syntaxError={ syntaxError } // data\n                isMarkDown={ false } // data\n\n                onContent={ this.props.onContent } // fn\n                onEnter={ this.props.onEnter } // fn // tohle asi bude potreba\n                onExecute={ this.props.onExecute } // fn // tohle asi bude potreba\n              />\n            )\n        }\n      </div>\n    )\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    let { state, setBoxState } = this.props\n  \n    setBoxState({\n      ...state,\n      breakpoints : [ ...state.breakpoints, breakpoint ],\n    })\n  }\n}","import React, { PureComponent } from 'react'\nimport {\n  AST,\n  ASTReduction,\n  None,\n  NormalEvaluator,\n  Beta,\n  Lambda,\n  Variable,\n  Expansion,\n  ChurchNumeral,\n  Macro,\n  Token,\n  tokenize,\n  parse,\n  ApplicativeEvaluator,\n  OptimizeEvaluator,\n  MacroMap,\n} from \"lambdulus-core\"\n\nimport '../styles/EvaluatorBox.css'\n\nimport { BoxType, BoxState } from './Box'\nimport { EvaluationStrategy, PromptPlaceholder } from '../App'\nimport { TreeComparator } from './TreeComparator'\nimport EmptyEvaluator from './EmptyEvaluator'\nimport InactiveEvaluator from './InactiveEvaluator'\nimport Evaluator from './Evaluator'\n\n\nexport type _Evaluator = NormalEvaluator | ApplicativeEvaluator | OptimizeEvaluator\n\nexport function strategyToEvaluator (strategy : EvaluationStrategy) : _Evaluator {\n  switch (strategy) {\n    case EvaluationStrategy.NORMAL:\n      return NormalEvaluator as any\n \n    case EvaluationStrategy.APPLICATIVE:\n      return ApplicativeEvaluator as any\n\n    case EvaluationStrategy.OPTIMISATION:\n      return OptimizeEvaluator as any\n  }\n}\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n  broken : Set<AST>,\n}\n\nexport interface StepRecord {\n  ast : AST\n  lastReduction : ASTReduction | null\n  step : number\n  message : string\n  isNormalForm : boolean\n}\n\nexport interface EvaluationState {\n  __key : string\n  type : BoxType\n  expression : string\n  ast : AST | null\n  history : Array<StepRecord>\n  isRunning : boolean\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n  isExercise : boolean\n  strategy : EvaluationStrategy\n  singleLetterNames : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\nexport interface EvaluationProperties {\n  state : EvaluationState\n  globalStrategy : EvaluationStrategy\n  isActive : boolean\n  macroTable : MacroMap\n\n  setBoxState (state : EvaluationState) : void\n  makeActive () : void\n  addBox (boxState : BoxState) : void\n}\n\nexport default class EvaluatorBox extends PureComponent<EvaluationProperties> {\n  constructor (props : EvaluationProperties) {\n    super(props)\n\n    this.onContent = this.onContent.bind(this)\n    this.onSubmitExpression = this.onSubmitExpression.bind(this)\n    this.parseExpression = this.parseExpression.bind(this)\n    this.onEnter = this.onEnter.bind(this)\n    this.onExerciseStep = this.onExerciseStep.bind(this)\n    this.onStep = this.onStep.bind(this)\n    this.onExecute = this.onExecute.bind(this)\n    this.onRun = this.onRun.bind(this)\n    this.onStop = this.onStop.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n    this.createBoxFrom = this.createBoxFrom.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { state, isActive } : EvaluationProperties = this.props\n    const {\n      history,\n      breakpoints,\n      isExercise,\n      strategy,\n      expression,\n      editor,\n    } : EvaluationState = state\n\n    let className : string = 'box boxEval'\n    const { isNormalForm } = history.length ? history[history.length - 1] : { isNormalForm : false }\n\n    if (expression === '') {\n      return (\n        <EmptyEvaluator\n          className={ className }\n          isActive={ this.props.isActive }\n          editor={ editor }\n          history={ history }\n\n          makeActive={ this.props.makeActive }\n          onContent={ this.onContent }\n          onEnter={ this.onEnter }\n          onExecute={ this.onExecute }\n        />\n      )\n    }\n\n    if (isExercise) {\n      className += ' boxExercise'\n    }\n\n    if ( ! isActive) {\n      return (\n        <InactiveEvaluator\n          className={ className }\n          breakpoints={ breakpoints }\n          history={ history }\n          globalStrategy={ this.props.globalStrategy } // TODO: nemel bych pouzit strategy?\n          \n          makeActive={ this.props.makeActive }\n          addBox={ this.props.addBox }\n          createBoxFrom={ this.createBoxFrom }\n        />\n      )\n    }\n\n    return (\n      <Evaluator\n        className={ className }\n        isExercise={ isExercise }\n        state={ state }\n        breakpoints={ breakpoints }\n        history={ history }\n        globalStrategy={ this.props.globalStrategy } // TODO: nemel bych pouzit strategy?\n        editor={ editor }\n        isNormalForm={ isNormalForm }\n\n        addBox={ this.props.addBox }\n        createBoxFrom={ this.createBoxFrom }\n        setBoxState={ this.props.setBoxState }\n        onContent={ this.onContent }\n        onEnter={ this.onEnter }\n        onExecute={ this.onExecute }\n      />\n    )\n  }\n\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState {\n    const { state } : EvaluationProperties = this.props\n    const {\n      strategy,\n      singleLetterNames,\n    } : EvaluationState = state\n    const { ast } = stepRecord\n\n    return {\n      type : BoxType.EXPRESSION,\n      __key : Date.now().toString(),\n      expression : ast.toString(),\n      ast : ast.clone(),\n      history : [ {\n        ast : ast.clone(),\n        lastReduction : null,\n        step : 0,\n        message : '',\n        isNormalForm : false,\n      } ],\n      isRunning : false,\n      breakpoints : [],\n      timeoutID : undefined,\n      timeout : 10,\n      isExercise : false,\n      strategy,\n      singleLetterNames,\n      editor : {\n        placeholder : PromptPlaceholder.EVAL_MODE,\n        content : '',\n        caretPosition : 0,\n        syntaxError : null,\n      }\n    }\n  }\n\n  onContent (content : string, caretPosition : number) : void {\n    const { state, setBoxState } = this.props\n\n    setBoxState({\n      ...state,\n      editor : {\n        ...state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n  }\n\n  onEnter () : void {\n    const { expression, isExercise, editor : { content } } = this.props.state\n\n    if (expression === '') {\n      this.onSubmitExpression()\n    }\n    else if (content !== '' && isExercise) {\n      this.onExerciseStep()\n    }\n    else if (content === '' && (! isExercise)) {\n      this.onStep()\n    }\n    else {\n      console.log('Error: Something unexpected just happened. A')\n    }\n  }\n\n  onSubmitExpression () : void {\n    const { state, setBoxState } = this.props\n    const {\n      editor : { content },\n    } = state\n\n    try {\n      const ast : AST = this.parseExpression(content)\n\n      setBoxState({\n        ...state,\n        ast,\n        expression : content,\n        history : [ {\n          ast : ast.clone(),\n          lastReduction : None,\n          step : 0,\n          message : '',\n          isNormalForm : false\n        } ],\n        editor : {\n          content : '',\n          caretPosition : 0,\n          placeholder : PromptPlaceholder.EVAL_MODE,\n          syntaxError : null,\n        }\n      })\n\n    } catch (exception) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : exception.toString(),\n        }\n      })\n    }\n  }\n\n  onExerciseStep () {\n    const { state, setBoxState } = this.props\n    const { strategy, history, editor : { content } } = state\n    try {\n      const userAst : AST = this.parseExpression(content)\n      const stepRecord : StepRecord = history[history.length - 1]\n      const { isNormalForm, step } = stepRecord\n      let { ast, lastReduction } = stepRecord\n      ast = ast.clone()\n\n      if (isNormalForm) {\n        // TODO: do something about it\n        // say user - there are no more steps and it is in normal form        \n        // TODO: consider immutability\n        stepRecord.message = 'No more steps available. Expression is in normal form.'\n\n        setBoxState({\n          ...state,\n        })\n\n        return\n      }\n    \n      const normal : _Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n      lastReduction = normal.nextReduction\n    \n      if (normal.nextReduction instanceof None) {\n        // TODO: refactor PLS - update history\n        // TODO: say user it is in normal form and they are mistaken\n        stepRecord.isNormalForm = true\n        stepRecord.message = 'Expression is already in normal form.'\n        \n        setBoxState({\n          ...state,\n        })\n        \n        return\n      }\n    \n      ast = normal.perform()\n    \n      let message : string = ''\n      const comparator : TreeComparator = new TreeComparator([ userAst, ast ])\n      if (comparator.equals) {\n        ast = userAst\n        message = 'Correct.'\n      }\n      else {\n        // TODO: say user it was incorrect\n        // TODO: na to se pouzije uvnitr EvaluatorState prop messages nebo tak neco\n        console.log('Incorrect step')\n        message = `Incorrect step. ${content}`\n      }\n\n      setBoxState({\n        ...state,\n        history : [ ...history, { ast, lastReduction, step : step + 1, message, isNormalForm : false } ],\n        editor : {\n          ...state.editor,\n          content : '',\n          caretPosition : 0,\n          placeholder : PromptPlaceholder.VALIDATE_MODE,\n          syntaxError : null,\n        }\n      })\n    } catch (exception) {\n      // TODO: print syntax error\n      // TODO: do it localy - no missuse of onSubmit\n\n      // TODO: print syntax error\n    }\n  }\n\n  onStep () : void {\n    const { state, setBoxState } = this.props\n    const { strategy, history, editor : { content } } = state\n    const stepRecord = history[history.length - 1]\n    const { isNormalForm, step } = stepRecord\n    let { ast, lastReduction } = stepRecord\n    ast = ast.clone()\n  \n    if (isNormalForm) {\n      return\n    }\n\n    const normal : _Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      stepRecord.isNormalForm = true\n      stepRecord.message = 'Expression is in normal form.'\n      \n      setBoxState({\n        ...state,\n      })\n      \n      return\n    }\n  \n    ast = normal.perform()\n  \n    setBoxState({\n      ...state,\n      history : [ ...history, { ast, lastReduction, step : step + 1, message : '', isNormalForm : false } ],\n\n    })\n  }\n\n  onExecute () : void {\n    const { state, setBoxState } = this.props\n    const { isRunning, isExercise } = state\n\n    if (isExercise) {\n      // TODO: exercises can not be run - some message to user???\n      return\n    }\n\n    if (isRunning) {\n      this.onStop()\n    }\n    else {\n      const { timeout, history } = state\n      const stepRecord = history[history.length - 1]\n  \n      if (stepRecord.isNormalForm) {\n        return\n      }\n      \n      const { ast, step, lastReduction, isNormalForm, message } = stepRecord\n      history.push(history[history.length - 1])\n      history[history.length - 2] = { ast : ast.clone(), step, lastReduction, message : 'Skipping some steps...', isNormalForm }\n\n      setBoxState({\n        ...state,\n        isRunning : true,\n        timeoutID : window.setTimeout(this.onRun, timeout),\n      })\n    }\n  }\n\n  onRun () : void {\n    const { state, setBoxState } = this.props\n    const { strategy } = state\n    let { history, isRunning, breakpoints, timeoutID, timeout } = state\n    const stepRecord : StepRecord = history[history.length - 1]\n    const { isNormalForm, step } = stepRecord\n    let { lastReduction } = stepRecord\n\n    if ( ! isRunning) {\n      return\n    }\n    \n    if (isNormalForm) {\n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    let { ast } = stepRecord\n    const normal : _Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n    lastReduction = normal.nextReduction\n    \n    if (normal.nextReduction instanceof None) {\n      // TODO: consider immutability\n      history.pop()\n      history.push({\n        ast,\n        lastReduction : stepRecord.lastReduction,\n        step,\n        message : 'Expression is in normal form.',\n        isNormalForm : true\n      })\n  \n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // TODO: maybe refactor a little\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint) =>\n        this.shouldBreak(breakpoint, normal.nextReduction)\n    )\n\n    if (breakpoint !== undefined) {\n      // TODO: consider immutability\n      if (normal.nextReduction instanceof Expansion) {\n        breakpoint.broken.add(normal.nextReduction.target)\n      }\n      if (normal.nextReduction instanceof Beta && normal.nextReduction.redex.left instanceof Lambda) {\n        breakpoint.broken.add(normal.nextReduction.redex.left.argument)\n      }\n\n      window.clearTimeout(timeoutID)\n\n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID,\n      })\n\n      return\n    }\n  \n    ast = normal.perform()\n\n    history[history.length - 1] = { ast, lastReduction, step : step + 1, message : '', isNormalForm }\n    \n    setBoxState({\n      ...state,\n      timeoutID : window.setTimeout(this.onRun, timeout)\n    })\n  }\n\n  onStop () : void {\n    const { state, setBoxState } = this.props\n    const { timeoutID } = state\n  \n    window.clearTimeout(timeoutID)\n  \n    setBoxState({\n      ...state,\n      isRunning : false,\n      timeoutID : undefined\n    })\n  }\n\n  // TODO: breakpointy se pak jeste musi predelat\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    // if (reduction instanceof (breakpoint.type as any)\n    //     && reduction instanceof Beta && breakpoint.context instanceof Lambda\n    //     && reduction.target.identifier === breakpoint.context.body.identifier\n    //   ) {\n    //     return true\n    // }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Variable\n        && reduction.redex.left instanceof Lambda\n        && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.redex.left.argument)\n    ) {\n      return true\n    }\n\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumeral\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof Macro\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n  \n    return false\n  }\n\n  // THROWS Exceptions\n  parseExpression (expression : string) : AST {\n    const { macroTable } = this.props\n    const { singleLetterNames : singleLetterVars } = this.props.state\n\n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n}","import React from 'react'\n\nimport { BoxType, BoxState } from './Box'\nimport { trimStr } from '../misc'\nimport Editor from './Editor'\nimport { tokenize, parse, AST, Token, Variable, builtinMacros } from 'lambdulus-core'\n\n\nexport interface MacroDefinitionState {\n  __key : string\n  type : BoxType\n  macroName : string\n  macroExpression : string\n  singleLetterNames : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\nexport interface MacroDefinitionProperties {\n  state : MacroDefinitionState\n  setBoxState (boxState : BoxState) : void\n  addBox (boxState : BoxState) : void\n  defineMacro (name : string, definition : string) : void\n}\n\nexport default function MacroDefinition (props : MacroDefinitionProperties) : JSX.Element {\n  const { state, setBoxState, defineMacro } = props\n  const { macroName, macroExpression, singleLetterNames } = state\n  const { editor : { content, caretPosition, placeholder, syntaxError } } = state\n\n  const onContent = (content : string, caretPosition : number) => {\n    setBoxState({\n      ...props.state,\n      editor : {\n        ...props.state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n  }\n\n  const onSubmit = () => {\n    const [ macroName, macroExpression ] : Array<string> = content.split(':=').map(trimStr)\n\n    // TODO: refactor later - this is just dirty little quick fix\n    if ( ! isMacroUnambigous(macroName)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : new Error(`Macro name is not valid. It redefines built-in Macro.`),\n        }\n      })\n\n      return\n    }\n\n    if ( ! isValidName(macroName, singleLetterNames)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError :\n          // TODO: please fix this - only dirty quick impl\n            new Error(`Macro name is not valid.\n            ${singleLetterNames && macroName.length !== 1 ? 'Name should be single letter.' : '' }`),\n        }\n      })\n\n      return\n    }\n\n    if ( ! isValidExpression(macroExpression, singleLetterNames)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : new Error(`Macro expression is not valid.`)\n        }\n      })\n\n      return\n    }\n\n    setBoxState({\n      ...state,\n      macroName,\n      macroExpression,\n    })\n\n    defineMacro(macroName, macroExpression)\n  \n    // const newMacroTable : MacroMap = {\n    //   ...macroTable,\n    //   [macroName] : macroExpression\n    // }\n    // this.updateMacros(newMacroTable)\n  }\n\n  // TODO: implement same as Evaluator - editor and stuff\n  if (macroName === '' && macroExpression === '') {\n    return (\n      <div className='box boxMacro inactiveBox'>\n          {/* <p className='emptyStep'>Empty macro box.</p> */}\n          <Editor\n            placeholder={ placeholder } // data\n            content={ content } // data\n            caretPosition={ caretPosition } // data\n            syntaxError={ syntaxError } // data\n            isMarkDown={ false } // data\n\n            onContent={ onContent } // fn\n            onEnter={ onSubmit } // fn // tohle asi bude potreba\n            onExecute={ () => {} } // fn // TODO: tohle Macro nepotrebuje\n          />\n          </div>\n    )\n  }\n\n  return (\n    <div className='box boxMacro'>\n      { macroName } := { macroExpression }\n    </div>\n  )\n}\n\n// TODO: in the future there should be more then boolean to indicate validity\nfunction isValidName (name : string, singleLetterNames : boolean) : boolean {\n  try {\n    const root : AST = parseExpression(name, singleLetterNames)\n\n    return root instanceof Variable\n  }\n  catch (exception) {\n    return false\n  }\n}\n\n// THROWS Exceptions\nfunction parseExpression (expression : string, singleLetterNames : boolean) : AST {\n  const macroTable = {}\n  const singleLetterVars : boolean = singleLetterNames\n\n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction isMacroUnambigous (name : string) : boolean {\n  return ! (name in builtinMacros)\n}\n\nfunction isValidExpression (expression : string, singleLetterNames : boolean) : boolean {\n  try {\n    parseExpression(expression, singleLetterNames)\n\n    return true\n  }\n  catch (exception) {\n    return false\n  }\n}","import React from 'react'\n\nimport Evaluator, { EvaluationState } from './EvaluatorBox'\nimport MacroDefinition, { MacroDefinitionState } from './MacroDefinition'\nimport Note, { NoteState } from './Note'\nimport { EvaluationStrategy } from '../App'\nimport { MacroMap } from 'lambdulus-core'\n\n\n// TODO: rename EXPRESSION, MACRO, NOTE\nexport enum BoxType {\n  EXPRESSION,\n  MACRO,\n  NOTE\n}\n\nexport type BoxState = EvaluationState | MacroDefinitionState | NoteState\n\ninterface BoxProperties {\n  state : BoxState\n  globalStrategy : EvaluationStrategy\n  isActive : boolean\n  macroTable : MacroMap\n\n  setBoxState (state : BoxState) : void\n  makeActive () : void\n  addBox (boxState : BoxState) : void\n  defineMacro (name : string, definition : string) : void\n  // removeExpression () : void // not yet\n}\n\nexport default function Box (props : BoxProperties) : JSX.Element {\n  const { state, isActive, macroTable, setBoxState, makeActive, addBox, defineMacro } : BoxProperties = props\n  const { type } = state\n\n  if (type === BoxType.EXPRESSION) {\n    return (\n      <div className=''>\n        <Evaluator\n          state={ state as EvaluationState }\n          globalStrategy={ props.globalStrategy }\n          isActive={ isActive }\n          macroTable={ macroTable }\n          \n          setBoxState={ setBoxState }\n          makeActive={ props.makeActive }\n          addBox={ addBox }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.MACRO) {\n    return (\n      <div className=''>\n        <MacroDefinition\n          state={ state as MacroDefinitionState }\n          setBoxState={ setBoxState }\n\n          addBox={ addBox }\n          defineMacro={ defineMacro }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.NOTE) {\n    return (\n      <div className=''>\n        <Note\n          state={ state as NoteState }\n          isActive={ isActive }\n\n          setBoxState={ setBoxState }\n          makeActive={ props.makeActive }\n          addBox={ addBox }\n        />\n      </div>\n    )\n  }\n\n  return null as any // never happens\n}","import React from 'react'\nconst ReactMarkdown = require('react-markdown')\nimport 'github-markdown-css'\n\nimport { BoxType, BoxState } from './Box'\nimport Editor from './Editor'\n\n\nexport interface NoteState {\n  __key : string\n  type : BoxType\n  note : string\n  isEditing : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\nexport interface NoteProperties {\n  state : NoteState\n  isActive : boolean\n\n  setBoxState (state : BoxState) : void\n  makeActive () : void\n  addBox (boxState : BoxState) : void\n}\n\nexport default function Note (props : NoteProperties) : JSX.Element {\n  const {\n    state : {\n      note,\n      editor : { placeholder, content, caretPosition, syntaxError },\n      isEditing,\n    },\n    isActive,\n    setBoxState,\n    makeActive,\n  } = props\n\n  const onContent = (content : string, caretPosition : number) => {\n    setBoxState({\n      ...props.state,\n      editor : {\n        ...props.state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n    // this.updateURL(expression) // tohle musim nejak vyresit - mozna ta metoda setBoxState v APP bude checkovat propisovat do URL\n  }\n\n  const onSubmitNote = () => {\n    setBoxState({\n      ...props.state,\n      note : content,\n      isEditing : false,\n    })\n  }\n\n\n  if (isEditing && isActive) {\n    return (\n      <div className='box boxNoteEditor'>\n        {/* <p className='emptyStep'>Empty note box.</p>         */}\n        <Editor\n          placeholder={ placeholder } // data\n          content={ content } // data\n          caretPosition={ caretPosition } // data\n          syntaxError={ syntaxError } // data\n          isMarkDown={ true } // data\n          \n          onContent={ onContent } // fn\n          onEnter={ onSubmitNote } // fn\n          onExecute={ () => {} } // fn\n          // onReset={ this.onClear } // fn not yet\n        />\n\n\n        <div id=\"controls\">\n          <button onClick={ () => onSubmitNote() }>\n            Save\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n\n  return (\n    <div className='box boxNote markdown-body'>\n      {/* {\n        note === '' ? \n          <p className='emptyStep'>Empty note box.</p>\n        :\n          null\n      } */}\n      <ReactMarkdown source={ note } />\n      <div id=\"controls\">\n          <button onClick={ () => {\n            setBoxState({\n              ...props.state,\n              isEditing : true,\n            })\n            makeActive()            \n          }\n          }\n            \n          >\n            Edit\n          </button>\n        </div>\n    </div>\n  )\n}","// TODOs\n// hydratace a dehydratace kompletniho statu\n//\n//\n\nimport React, { ChangeEvent } from 'react'\nimport { AST, tokenize, parse, Token, MacroMap, None } from 'lambdulus-core'\n\nimport { AppState, Screen } from '../App'\nimport { EvaluationState } from './EvaluatorBox'\nimport { BoxState, BoxType } from './Box'\n\nimport '../styles/MenuBar.css'\n\ninterface MenuBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n  onScreenChange (screen : Screen) : void\n}\n\nexport default function MenuBar (props : MenuBarProperties) : JSX.Element {\n  const { state, onImport, onScreenChange } : MenuBarProperties = props\n  const { screen } = state\n\n  const dehydrated : object = dehydrate(state)\n\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n      {/* <div>\n        <i id='notebooks' className=\"icon fas fa-book-open fa-2x\" />\n        <p className='iconLabel'>Notebooks</p>\n      </div> */}\n\n      <div>\n        {\n          screen === Screen.main ?\n            <i className=\"icon fas fa-list-ul fa-2x\" onClick={ () => onScreenChange(Screen.macrolist) } />\n            :\n            <i className=\"icon far fa-window-close fa-2x\" onClick={ () => onScreenChange(Screen.main) } />\n        }\n        <p className='iconLabel'>Macros</p>\n      </div>        \n        \n      <div>\n        <a\n          className='export'\n          href={ link }\n          download=\"notebook_lambdulus.json\"\n          onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n        >\n          <i id='download' className=\"icon fas fa-cloud-download-alt fa-2x\" />\n        </a>\n        <p className='iconLabel'>Export</p>\n      </div>\n      \n      <div>\n        <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n        <label htmlFor=\"input\"><i className=\"icon fas fa-cloud-upload-alt fa-2x\"></i></label>\n        <p className='iconLabel'>Import</p>\n      </div>      \n    </div>\n  )\n}\n\nfunction dehydrateBox (box : BoxState) : BoxState {\n  const { type } : BoxState = box\n\n  if (type === BoxType.EXPRESSION) {\n\n    return {\n      ...box,\n      ast : null as any, // TODO: don't\n      history : [], // TODO: don't\n      isRunning : false,\n      breakpoints : [], // TODO: solve how to don't\n      timeoutID : undefined,\n    }\n  }\n\n  return box\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedBoxes : state.submittedBoxes.map(dehydrateBox)\n  }\n}\n\nfunction hydrateBox (box : BoxState, macroTable : MacroMap) : BoxState {\n  const { type } : BoxState = box\n  \n  if (type === BoxType.EXPRESSION) {\n    const { singleLetterNames } = box as EvaluationState\n    const ast : AST = parseExpression((box as EvaluationState).expression, { macroTable, singleLetterNames })\n\n    return {\n      ...box,\n      ast,\n      history : [ { ast, lastReduction : None, step : 0, message : '', isNormalForm : false } ],\n    }\n  }\n\n  return box\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  const { macroTable } = dehydrated\n  const config = { macroTable }\n\n  return {\n    ...dehydrated,\n    submittedBoxes : dehydrated.submittedBoxes.map((box) => hydrateBox(box, macroTable))\n  }\n}\n\ninterface Config {\n  singleLetterNames : boolean\n  macroTable : MacroMap\n}\n\nfunction parseExpression (expression : string, config : Config) : AST {\n  const { singleLetterNames : singleLetterVars, macroTable } : Config = config\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file) \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  return window.URL.createObjectURL(data);\n}","import React from 'react'\n\nimport Box, { BoxState, BoxType } from './Box'\nimport { EvaluationState } from './EvaluatorBox'\nimport { EvaluationStrategy, PromptPlaceholder } from '../App'\nimport { MacroDefinitionState } from './MacroDefinition'\nimport { NoteState } from './Note'\nimport { MacroMap } from 'lambdulus-core'\n\n\nexport interface BoxSpaceProperties {\n  submittedBoxes : Array<BoxState>\n  activeBoxIndex : number\n  globalStrategy : EvaluationStrategy\n  singleLetterNames : boolean\n  macroTable : MacroMap\n  \n  makeActive (index : number) : void\n  setBoxState (index : number, state : BoxState) : void\n  addEmptyBox (boxState : BoxState) : void\n  addBox (boxState : BoxState) : void\n  defineMacro (name : string, definition : string) : void\n  // removeExpression (index : number) : void // not yet\n}\n\nexport default function BoxSpace (props: BoxSpaceProperties) : JSX.Element {\n  const {\n    globalStrategy : strategy,\n    singleLetterNames,\n    submittedBoxes,\n    activeBoxIndex,\n    macroTable,\n    setBoxState,\n    makeActive,\n    addBox,\n    defineMacro,\n  } = props\n\n  const addBoxControls : JSX.Element = (\n    <div className='emptyC'>\n      <p\n        className='plusBtn inlineblock'\n        onClick={ () => props.addEmptyBox(createEmptyExp(strategy, singleLetterNames)) }\n      >\n        <i>+ λ</i>\n      </p>\n      <p\n        className='plusBtn inlineblock'\n        onClick={ () => props.addEmptyBox(createEmptyMacro(singleLetterNames)) }\n      >\n        <i>+ Macro\n        </i></p>\n      <p\n        className='plusBtn inlineblock'\n        onClick={ () => props.addEmptyBox(createEmptyNote()) }\n      >\n        <i>+ MD</i>\n      </p>\n    </div>\n  )\n\n  if (submittedBoxes.length === 0) {\n    return (\n      <div className='evaluatorSpace'>\n        <div className='bigEmpty'>\n          { addBoxControls }\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='evaluatorSpace'>\n      <ul className='evaluatorList UL'>\n        { submittedBoxes.map((boxState : BoxState, i : number) =>\n          <li className='LI' key={ boxState.__key }>\n            <Box\n              state={ boxState }\n              globalStrategy={ props.globalStrategy }\n              isActive={ i === activeBoxIndex }\n              macroTable={ macroTable }\n              \n              setBoxState={ (state : EvaluationState) => setBoxState(i, state) }\n              makeActive={ () => makeActive(i) }\n              addBox={ addBox }\n              defineMacro={ defineMacro }\n              // removeExpression={ () => removeExpression(i) }\n            />\n          </li>\n          ) }\n          <div className='smallEmpty'>\n          { addBoxControls }\n          </div>\n      </ul>\n    </div>\n  )\n}\n\nfunction createEmptyExp (strategy : EvaluationStrategy, singleLetterNames : boolean) : EvaluationState {\n  return {\n    type : BoxType.EXPRESSION,\n    __key : Date.now().toString(),\n    expression : '',\n    ast : null,\n    history : [],\n    isRunning : false,\n    breakpoints : [],\n    timeoutID : undefined,\n    timeout : 10,\n    isExercise : false,\n    strategy,\n    singleLetterNames,\n    editor : {\n      placeholder : PromptPlaceholder.INIT,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null,\n    }\n  }\n}\n\nfunction createEmptyMacro (singleLetterNames : boolean) : MacroDefinitionState {\n  return {\n    type : BoxType.MACRO,\n    __key : Date.now().toString(),\n    macroName : '',\n    macroExpression : '',\n    singleLetterNames,\n    editor : {\n      placeholder : PromptPlaceholder.MACRO,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null\n    }\n  }\n}\n\nfunction createEmptyNote () : NoteState {\n  return {\n    type : BoxType.NOTE,\n    __key : Date.now().toString(),\n    note : '',\n    isEditing : true,\n    editor : {\n      placeholder : PromptPlaceholder.NOTE,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null,\n    }\n  }\n}","import React from 'react'\nimport { MacroMap, builtinMacros } from 'lambdulus-core'\n\n\nexport interface MacroProperties {\n  macroTable : MacroMap\n  removeMacro (name : string) : void\n}\n\nexport default function MacroSpace (props : MacroProperties) : JSX.Element {\n  const { macroTable, removeMacro } = props\n\n  return (\n    <div className='macroSpace'>\n      <div className='builtinMacros'>\n        <p>Built-in Macros</p>\n        <ul className='UL'>\n          { Object.entries(builtinMacros).map(([macroName, macroExpression]) =>\n            <div key={ macroName }>\n              <li className='LI'>\n                <div className='box boxMacro'>\n                  { macroName } := { macroExpression }\n                </div>\n              </li>\n            </div>\n          ) }\n        </ul>\n      </div>\n\n      <div className='userMacros'>      \n        <p>User-defined Macros</p>\n        <ul>\n          { Object.entries(macroTable).map(([macroName, macroExpression]) =>\n              <div key={ macroName }>\n                <li className='LI'>\n                  <div className='box boxMacro'>\n                    { macroName } := { macroExpression }\n                    <i className=\"hiddenMacroIcon far fa-trash-alt\" onClick={ () => removeMacro(macroName) } />\n                  </div>\n                </li>\n              </div>\n            ) }\n        </ul>\n      </div>\n    </div>\n  )\n}","import React, { Component, ChangeEvent } from 'react'\nconst { Switch, Radio } = require('pretty-checkbox-react')\n\nimport {\n  AST,\n  MacroMap,\n  NormalEvaluator,\n  ApplicativeEvaluator,\n  OptimizeEvaluator,\n  Token,\n  tokenize,\n  parse\n} from 'lambdulus-core'\n\nimport './App.css'\n\nimport { HANDY_MACROS, getSavedMacros } from './misc'\nimport MenuBar from './components/MenuBar'\nimport BoxSpace from './components/BoxSpace'\nimport Editor, { ActionType } from './components/Editor'\nimport { BoxState, BoxType } from './components/Box'\nimport MacroSpace from './components/MacroSpace'\nimport { EvaluationState } from './components/EvaluatorBox'\nimport { MacroDefinitionState } from './components/MacroDefinition';\n\n\nexport enum EvaluationStrategy {\n  NORMAL = 'Normal Evaluation',\n  APPLICATIVE = 'Applicative Evaluation',\n  OPTIMISATION = 'Optimisation - η Conversion',\n}\n\nexport enum Screen {\n  main,\n  macrolist,\n  // notebooks,\n}\n\nexport enum PromptPlaceholder {\n  INIT = 'Type λ expression and hit enter',\n  EVAL_MODE = 'Hit enter for next step',\n  VALIDATE_MODE = 'Write next step and hit enter for validation',\n  MACRO = 'Define Macro like: `NAME := [λ expression]` and hit enter',\n  NOTE = 'Type note and hit shift enter'\n}\n\n// zvazit jestli nechci vytvorit record type pro ruzne stavy settings\n// v pripade ze je to markdown tak nedava smysl mit strategy a podobne\n// na druhou stranu, melo by si to pamatovat po prepnuti z MD znova do expr strategy a podobne\nexport interface AppState {\n  // settings : {\n  //   strategy : EvaluationStrategy // podle me to tu nema co delat - je to specific pro aktivni Box\n  //   singleLetterNames : boolean // podle me to tu nema co delat - je to specific pro aktivni Box\n  //   isExercise : boolean // podle me to tu nema co delat - je to specific pro aktivni Box\n  //   isMarkDown : boolean // podle me to tu nema co delat - je to specific pro aktivni Box\n  // }\n  \n  macroTable : MacroMap\n\n  submittedBoxes : Array<BoxState>\n  screen : Screen\n  activeBoxIndex : number\n}\n\nexport default class App extends Component<{}, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.setBoxState = this.setBoxState.bind(this)\n    this.addEmptyBox = this.addEmptyBox.bind(this)\n    this.changeActiveBox = this.changeActiveBox.bind(this)\n    this.changeActiveStrategy = this.changeActiveStrategy.bind(this)\n    this.changeActiveSingleLetterNames = this.changeActiveSingleLetterNames.bind(this)\n    this.getActiveStrategy = this.getActiveStrategy.bind(this)\n    this.getActiveSingleLetterNames = this.getActiveSingleLetterNames.bind(this)\n    this.addBox = this.addBox.bind(this)\n    this.removeMacro = this.removeMacro.bind(this)\n    this.updateMacros = this.updateMacros.bind(this)\n    this.defineMacro = this.defineMacro.bind(this)\n    this.createBoxFromURL = this.createBoxFromURL.bind(this)\n\n    this.state = {\n      macroTable : { ...HANDY_MACROS, ...getSavedMacros() },\n      submittedBoxes : [],\n      screen : Screen.main,\n      activeBoxIndex : -1,\n    }\n\n    setTimeout(this.createBoxFromURL, 1)\n    window.addEventListener('hashchange', this.createBoxFromURL)\n  }\n\n  render () : JSX.Element {\n    const {\n      // settings : { strategy, singleLetterNames },\n      macroTable,\n      submittedBoxes,\n      screen,\n      activeBoxIndex,\n    } : AppState = this.state\n\n    const getEvaluatorSpace = () =>\n    <BoxSpace\n      submittedBoxes={ submittedBoxes }\n      activeBoxIndex={ activeBoxIndex }\n      globalStrategy={ this.getActiveStrategy() }\n      singleLetterNames={ this.getActiveSingleLetterNames() }\n      macroTable={ macroTable }\n\n      makeActive={ this.changeActiveBox }\n      setBoxState={ this.setBoxState }\n      addEmptyBox={ this.addEmptyBox }\n      addBox={ this.addBox }\n      defineMacro={ this.defineMacro }\n      // removeExpression={ this.onRemoveExpression } // to bude asi potreba az zbytek bude hotovej \n      \n      \n      // onEnter={ this.onEnter } // ten se presune dolu do Boxu\n      // onEditNote={ this.onEditNote } // zmeni se na onChangeActiveBox a isEditing se udela v Boxu\n\n    />\n\n    const getMacroSpace = () =>\n    <MacroSpace\n      macroTable={ macroTable }\n\n      removeMacro={ this.removeMacro }\n    />\n\n    return (\n      <div className='app'>\n\n        <MenuBar\n          state={this.state} // to je nutny\n          \n          onImport={ (state : AppState) => this.setState(state) } // to je docela kratky OK\n          \n          onScreenChange={(screen : Screen) => // mozna tohle zmenit nejakym patternem\n            this.setState({\n              ...this.state,\n              screen,\n            })\n          }\n         />\n\n        {/* celou tuhle componentu bych klidne mohl wrapnout v nejaky custom comp */}\n        {/* taky je dulezity odkud bude tahle kompontnta brat stav - z aktivniho Boxu */}\n        {/* kdyz neni zadnej box - tedy neni zadnej aktivni - tak nejakej default */}\n        <div className='editorSettings'>\n          <Switch\n            checked={ this.getActiveSingleLetterNames() }\n            disabled={ false } // TODO: tohle bude rozhodne chtit prepsat\n            shape=\"fill\"\n            \n            onChange={ (e : ChangeEvent<HTMLInputElement>) => // taky nejakej pattern\n              this.changeActiveSingleLetterNames(e.target.checked)\n            }\n          >\n            Single Letter Names\n          </Switch>\n\n          <div className='strategies inlineblock'>\n            <p className='stratsLabel inlineblock'>Evaluation Strategies:</p>\n            <Radio\n              name=\"strategy\"\n              style=\"fill\"\n              checked={ this.getActiveStrategy() === EvaluationStrategy.NORMAL }\n              \n              onChange={ () => this.changeActiveStrategy(EvaluationStrategy.NORMAL) }\n            >\n              Normal\n            </Radio>\n            <Radio\n              style=\"fill\"\n              name=\"strategy\"\n              checked={ this.getActiveStrategy() === EvaluationStrategy.APPLICATIVE }\n              \n              onChange={ () => this.changeActiveStrategy(EvaluationStrategy.APPLICATIVE) }\n            >\n              Applicative\n            </Radio>\n          </div>\n          \n        </div>\n\n        {\n          screen === Screen.main ? getEvaluatorSpace()\n            :\n          getMacroSpace()\n        }\n\n      </div>\n    )\n  }\n\n  createBoxFromURL () {\n    const hash : string = decodeURI(window.location.hash.substring(1))\n    const isExercise : boolean = hash.indexOf('exercise') !== -1\n\n    const expression : string = isExercise ? hash.substring(8) : hash\n\n    if (expression === '') {\n      return\n    }\n\n    const box : BoxState = {\n      type : BoxType.EXPRESSION,\n      __key : Date.now().toString(),\n      expression : '',\n      ast : null,\n      history : [],\n      isRunning : false,\n      breakpoints : [],\n      timeoutID : undefined,\n      timeout : 10,\n      isExercise : isExercise,\n      strategy : this.getActiveStrategy(),\n      singleLetterNames : this.getActiveSingleLetterNames(),\n      editor : {\n        placeholder : PromptPlaceholder.INIT,\n        content : expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      }\n    }\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ box ],\n      activeBoxIndex : 0,\n    })\n  }\n\n  setBoxState (index : number, boxState : BoxState) : void {\n    // TODO: bude asi osetrovat update URL\n    const { submittedBoxes, activeBoxIndex } = this.state\n    \n    // const activeBox : BoxState = submittedBoxes[activeBoxIndex]\n    const expression : string = boxState.editor.content || (boxState as EvaluationState).expression // TODO: DIRTY DIRTY BIG TIME\n    const expPrefix : string = boxState.type === BoxType.EXPRESSION && (boxState as EvaluationState).isExercise ? 'exercise' : '' \n    \n    history.pushState({}, \"page title?\", \"#\" + expPrefix + encodeURI(expression))\n\n    // TODO: doresit update URL\n\n    // TODO: consider immutability\n    submittedBoxes[index] = boxState\n\n    this.setState({\n      ...this.state,\n      submittedBoxes,\n    })\n\n  }\n\n  addEmptyBox (boxState : BoxState) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ ...submittedBoxes, boxState ],\n      activeBoxIndex : Math.max(0, submittedBoxes.length),\n    })\n  }\n\n  addBox (boxState : BoxState) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ ...submittedBoxes, boxState ],\n      activeBoxIndex : submittedBoxes.length\n    })\n  }\n\n  changeActiveBox (activeBoxIndex : number) : void {\n    this.setState({\n      ...this.state,\n      activeBoxIndex,\n    })\n  }\n\n  getActiveStrategy () : EvaluationStrategy {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    if (activeBoxIndex === -1) {\n      return JSON.parse(window.localStorage.getItem('strategy') || JSON.stringify(EvaluationStrategy.NORMAL)) as EvaluationStrategy\n    }\n\n    const activeBoxState : BoxState = submittedBoxes[activeBoxIndex]\n\n    if (activeBoxState.type !== BoxType.EXPRESSION) {\n      return JSON.parse(window.localStorage.getItem('strategy') || JSON.stringify(EvaluationStrategy.NORMAL)) as EvaluationStrategy\n    }\n\n    return (activeBoxState as EvaluationState).strategy\n  }\n\n  getActiveSingleLetterNames () : boolean {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    if (activeBoxIndex === -1) {\n      return JSON.parse(window.localStorage.getItem('SLI') || 'true')\n    }\n\n    const activeBoxState : BoxState = submittedBoxes[activeBoxIndex]\n\n    if (activeBoxState.type === BoxType.NOTE) {\n      return JSON.parse(window.localStorage.getItem('SLI') || 'true')\n    }\n\n    if (activeBoxState.type === BoxType.EXPRESSION) {\n      return (activeBoxState as EvaluationState).singleLetterNames\n    }\n\n    if (activeBoxState.type === BoxType.MACRO) {\n      return (activeBoxState as MacroDefinitionState).singleLetterNames\n    }\n\n    return JSON.parse(window.localStorage.getItem('SLI') || 'true') // to nikdy nenastane doufam\n  }\n\n  changeActiveStrategy (strategy : EvaluationStrategy) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n    // TODO: consider immutability\n    submittedBoxes[activeBoxIndex] = {\n      ...submittedBoxes[activeBoxIndex],\n      strategy,\n    }\n    \n    this.setState({\n      ...this.state,\n    })\n\n    window.localStorage.setItem('strategy', JSON.stringify(strategy))\n  }\n\n  changeActiveSingleLetterNames (enabled : boolean) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n    // TODO: consider immutability\n    submittedBoxes[activeBoxIndex] = {\n      ...submittedBoxes[activeBoxIndex],\n      singleLetterNames : enabled,\n    }\n\n    this.setState({\n      ...this.state\n    })\n\n    window.localStorage.setItem('SLI', JSON.stringify(enabled))\n  }\n\n  removeMacro (name : string) : void {\n    const { macroTable } = this.state\n    \n    const newMacroTable = { ...macroTable }\n    delete newMacroTable[name]\n\n    this.setState({\n      ...this.state,\n      macroTable : newMacroTable\n    })\n\n    this.updateMacros(newMacroTable)\n  }\n\n  updateMacros (macroTable : MacroMap) : void {\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  defineMacro (name : string, definition : string) : void {\n    const { macroTable } = this.state\n\n    this.setState({\n      ...this.state,\n      macroTable : { ...macroTable, [name] : definition }\n    })\n\n    this.updateMacros({ ...macroTable, [name] : definition })\n  }\n  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}