{"version":3,"sources":["misc/index.ts","AppTypes.ts","components/MenuBar.tsx","components/MacroSpace.tsx","components/Settings.tsx","components/Editor.tsx","components/TreeComparator.ts","components/EmptyExpression.tsx","components/ReactPrinter.tsx","components/ReductionMessage.tsx","components/DataInjector.tsx","components/Step.tsx","components/MethodInjector.tsx","components/InactiveExpression.tsx","components/Controls.tsx","components/Expression.tsx","components/ExpressionBox.tsx","components/MacroDefinition.tsx","components/Note.tsx","components/Box.tsx","components/CreateBox.tsx","components/BoxSpace.tsx","components/EvaluatorSpace.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getSavedMacros","JSON","parse","window","localStorage","getItem","trimStr","str","trim","EvaluationStrategy","Screen","PromptPlaceholder","HANDY_MACROS","updateMacros","macroTable","setItem","stringify","reportEvent","category","action","label","ga","getAll","send","exception","console","log","error","BoxType","DEFAULT_STATE","Object","objectSpread","submittedBoxes","screen","main","activeBoxIndex","MenuBar","props","state","onImport","onScreenChange","dehydrated","map","dehydrateBox","dehydrate","link","content","data","Blob","type","URL","createObjectURL","createURL","react_default","a","createElement","id","title","className","onClick","macrolist","href","download","setTimeout","revokeObjectURL","accept","onChange","e","event","files","target","file","reader","FileReader","onload","result","box","EXPRESSION","_ref","singleLetterNames","ast","expression","config","singleLetterVars","tokens","tokenize","lambdaLetters","parseExpression","history","lastReduction","None","step","message","isNormalForm","hydrateBox","hydrate","readAsText","onFiles","htmlFor","isRunning","breakpoints","timeoutID","undefined","MacroSpace","removeMacro","entries","builtinMacros","_ref2","slicedToArray","macroName","macroExpression","key","_ref3","_ref4","require","Switch","Radio","Settings","checked","getActiveSingleLetterNames","disabled","shape","changeActiveSingleLetterNames","getActiveStandalones","changeActiveStandalones","name","style","getActiveStrategy","ABSTRACTION","changeActiveStrategy","NORMAL","APPLICATIVE","ActionType","TreeComparator","roots","classCallCheck","this","translator","Map","equals","context","_roots","_roots2","toArray","slice","compare","createClass","value","_this$context","left","right","Lambda","backup","set","argument","Application","Macro","ChurchNumeral","Variable","get","Editor","placeholder","caretPosition","syntaxError","isMarkDown","onContent","onEnter","onExecute","lines","split","length","concat","InputField","selectionEnd","replace","onKeyDown","shiftKey","ctrlKey","preventDefault","wrap","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","focus","EmptyExpression","isActive","editor","makeActive","useContext","MakeActiveContext","deleteBox","DeleteBox","onDoubleClick","Editor_Editor","ReactPrinter","tree","reduction","_this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","accumulator","_this2","body","isBreakpoint","Alpha","Array","from","conversions","some","conversion","identifier","args","Symbol","Beta","broken","Set","printMultiLambda","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","application","leftClassName","rightClassName","redex","Gama","includes","_this3","acc","churchNumber","_this4","Expansion","macro","_this5","redexes","redexClass","variable","ASTVisitor","ReductionMessage","Eta","StateContext","createContext","SLIContext","StrategyContext","DataInjector","SLI","strategy","children","Provider","StepMemo","memo","stepRecord","addBreakpoint","strategyToEvaluator","nextReduction","printer","print","lastStep","StepWrapper","Consumer","assign","AddBoxContext","boxState","RemoveBoxContext","index","AddEmptyBoxContext","ChangeActiveBoxContext","SetBoxStateContext","DefineMacroContext","definition","MethodInjector","addBox","removeBox","addEmptyBox","changeActiveBox","setBoxState","defineMacro","InactiveExpression","createBoxFrom","Controls","isExercise","makeExercise","endExercise","Controls_Switch","Expression","bind","_this$props","Controls_Controls","VALIDATE_MODE","EVAL_MODE","to","sequence","fn","i","mapLeftFromTo","toString","breakpoint","_this$props2","toConsumableArray","PureComponent","NormalEvaluator","ApplicativeEvaluator","OPTIMISATION","OptimizeEvaluator","NormalAbstractionEvaluator","ExpressionBox","onSubmitExpression","onExerciseStep","onStep","onRun","onStop","shouldBreak","Expression_Expression","standalones","__key","Date","now","clone","timeout","_this$props$state","_this$props3","_this$props4","userAst","normal","perform","_this$props5","_this$props6","push","_this$props7","pop","find","add","clearTimeout","_this$props8","has","MacroDefinition","_state$editor","_content$split$map","_content$split$map2","Error","root","isValidName","isValidExpression","macroBody","ReactMarkdown","Note","_props$state","note","_props$state$editor","isEditing","SetBoxContext","onSubmitNote","source","Box","MacroTableContext","ExpressionBox_ExpressionBox","MACRO","NOTE","CreateBox","INIT","createEmptyExp","createEmptyMacro","BoxSpace","EvaluatorSpace","App","createBoxFromURL","addEventListener","_this$state","MenuBar_MenuBar","setState","hash","decodeURI","location","substring","indexOf","expPrefix","pushState","encodeURI","_this$state2","splice","_this$state3","activeBoxState","_this$state4","_this$state5","_this$state6","enabled","_this$state7","_this$state8","newMacroTable","defineProperty","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f327ce5c.chunk.js","sourcesContent":["import { MacroMap } from \"@lambdulus/core\"\n\n\nexport function debounce (fn : Function, treshold : number)\n : [ (...args : Array<any>) => void, () => void ] {\n  let timer : number\n  \n  return [\n    function debounced (...args : Array<any>) : void {\n      window.clearTimeout(timer)\n\n      timer = window.setTimeout(() => {\n        fn(...args)\n      }, treshold)\n    },\n    function cancel () : void {\n      window.clearTimeout(timer)\n    }\n  ]\n}\n\nexport function getSavedMacros () : MacroMap {\n  return JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n}\n\nexport function trimStr (str : string) : string {\n  return str.trim()\n}\n\nexport function mapLeftFromTo(\n  from : number,\n  to : number,\n  sequence : Array<any>,\n  fn : (...args : Array<any>) => any) {\n    const result : Array<any> = new Array(to - from + 1)\n\n    for (let e = 0, i = from; i <= to; ++i) {\n      result[e++] = fn(sequence[i], i)\n    }\n\n    return result\n  }\n\nexport const HANDY_MACROS : MacroMap = {\n  // FACT : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n  // FACCT : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n  // FIB : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n  // // SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n  // // LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n  // APPEND : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n  // LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  // LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  // LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  // LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n  // QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( APPEND (fn (LISTLESS (FIRST list) list)) ( APPEND (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n  // INFLIST : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n  // REMOVENTH : 'Y (λ fn list n . IF (= n 0) (SECOND list) (IF (NULL list) NIL (CONS (FIRST list) (fn (SECOND list) (- n 1) ) ) ) )',\n  // NTH : 'Y (λ fn list n . IF (= n 0) (FIRST list) (IF (NULL (list)) NIL (fn (SECOND list) (- n 1)) ) )',\n  // LEN : 'Y (λ fn list . IF (NULL list) (0) (+ 1 (fn (SECOND list) )) )',\n  // GETNTH : '(λ end . (Y (λ f n i . (end i) (i) ( (= n 0) (Y (λ f a . (end a) (i) (f) ) ) (f (- n 1)) ) )) )',\n  // MAP : '(λ fn l . (Y (λ f it . IF (NULL it) (NIL) (CONS (fn (FIRST it)) (f (SECOND it))) )) l )',\n  // REDUCE : '(λ fn l init . Y (λ f it acc . IF (NULL it) (acc) (f (SECOND it) (fn (FIRST it) acc)) ) l init )',\n  // APPLY : '(λ f args . Y (λ ff f l . (NULL l) (f) (ff (f (FIRST l)) (SECOND l)) ) f args )',\n  // RANGE : '(λ m n . Y (λ f e . (= e n) (CONS e NIL) (CONS e (f (+ e 1))) ) m )',\n  // LISTCOMPR : '(λ args . APPLY (λ op in rng cond . Y (λ f l . (NULL l) (NIL) ( (cond (FIRST l)) (CONS (op (FIRST l)) (f (SECOND l))) (CONS (FIRST l) (f (SECOND l))) ) ) rng ) args )',\n  // MOD : '(λ n m . (n (λ n . (= n (- m 1)) (0) (+ n 1)) (0)) )',\n  // INFIX : 'APPLY (λ l op r . op l r)',\n}\n\nexport function updateMacros (macroTable : MacroMap) : void {\n  window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n}\n\nexport function reportEvent (category : string, action : string, label : string) : void {\n  try {\n    const tracker = (window as any).ga.getAll()[0]\n    \n    tracker.send('event', category, action, label )\n  }\n  catch (exception) {\n    console.log(\"\")\n    console.log('PLEASE DISABLE YOUR ADBLOCKER OR ALLOW GOOGLE ANALYTICS FOR THIS SITE')\n    console.log(\"\")\n    console.error(exception)\n  }\n}","import { MacroMap, AST, ASTReduction, NormalEvaluator, ApplicativeEvaluator, OptimizeEvaluator } from \"@lambdulus/core\"\n\nimport { HANDY_MACROS, getSavedMacros } from \"./misc\"\n\n\n//////////////////////////////////\n\nexport enum EvaluationStrategy {\n  NORMAL = 'Normal Evaluation',\n  APPLICATIVE = 'Applicative Evaluation',\n  OPTIMISATION = 'Optimisation - η Conversion',\n  ABSTRACTION = 'Abstraction / Simplified Evaluation'\n}\n\nexport enum Screen {\n  main,\n  macrolist,\n  // notebooks,\n}\n\nexport enum PromptPlaceholder {\n  INIT = 'Type λ (as \\\\) expression and hit enter',\n  EVAL_MODE = 'Hit enter for next step',\n  VALIDATE_MODE = 'Write next step and hit enter for validation',\n  MACRO = 'Define Macro like: `NAME := [λ expression]` and hit enter',\n  NOTE = 'Type note and hit shift enter'\n}\n\nexport interface AppState {  \n  macroTable : MacroMap\n  submittedBoxes : Array<BoxState>\n  screen : Screen\n  activeBoxIndex : number\n}\n\nexport const DEFAULT_STATE : AppState = {\n  macroTable : { ...HANDY_MACROS, ...getSavedMacros() },\n  submittedBoxes : [],\n  screen : Screen.main,\n  activeBoxIndex : -1,\n}\n\n//////////////////////////////////\n\nexport type Evaluator = NormalEvaluator | ApplicativeEvaluator | OptimizeEvaluator\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n  broken : Set<AST>,\n}\n\nexport interface StepRecord {\n  ast : AST\n  lastReduction : ASTReduction | null\n  step : number\n  message : string\n  isNormalForm : boolean\n}\n\nexport interface EvaluationState {\n  __key : string\n  type : BoxType\n  expression : string\n  ast : AST | null\n  history : Array<StepRecord>\n  isRunning : boolean\n  breakpoints : Array<Breakpoint>\n  timeoutID : number | undefined\n  timeout : number\n  isExercise : boolean\n  strategy : EvaluationStrategy\n  singleLetterNames : boolean\n  standalones : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\n//////////////////////////////////\n\nexport enum BoxType {\n  EXPRESSION,\n  MACRO,\n  NOTE\n}\n\nexport type BoxState = EvaluationState | MacroDefinitionState | NoteState\n\n//////////////////////////////////\n\nexport interface MacroDefinitionState {\n  __key : string\n  type : BoxType\n  macroName : string\n  macroExpression : string\n  singleLetterNames : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\n//////////////////////////////////\n\nexport interface NoteState {\n  __key : string\n  type : BoxType\n  note : string\n  isEditing : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n}\n\n//////////////////////////////////","// TODOs\n// hydratace a dehydratace kompletniho statu\n//\n//\n\nimport React, { ChangeEvent } from 'react'\nimport { AST, tokenize, parse, Token, MacroMap, None } from '@lambdulus/core'\n\nimport { AppState, Screen, BoxState, BoxType, EvaluationState } from '../AppTypes'\n\nimport '../styles/MenuBar.css'\n\ninterface MenuBarProperties {\n  state : AppState\n  onImport (state : AppState) : void\n  onScreenChange (screen : Screen) : void\n}\n\nexport default function MenuBar (props : MenuBarProperties) : JSX.Element {\n  const { state, onImport, onScreenChange } : MenuBarProperties = props\n  const { screen } = state\n\n  const dehydrated : object = dehydrate(state)\n\n  const serialized : string = JSON.stringify(dehydrated)\n  const link : string = createURL(serialized)\n\n  return (\n    <div id=\"topbar\">\n      {/* <div>\n        <i id='notebooks' className=\"icon fas fa-book-open fa-2x\" />\n        <p className='iconLabel'>Notebooks</p>\n      </div> */}\n\n      <div title='List all defined macros' >\n        {\n          screen === Screen.main ?\n            <i className=\"icon fas fa-list-ul fa-2x\" onClick={ () => onScreenChange(Screen.macrolist) } />\n            :\n            <i className=\"icon far fa-window-close fa-2x\" onClick={ () => onScreenChange(Screen.main) } />\n        }\n        <p className='iconLabel'>Macros</p>\n      </div>        \n        \n      <div title='Download this notebook'>\n        <a\n          className='export'\n          href={ link }\n          download=\"notebook_lambdulus.json\"\n          onClick={ () => setTimeout(() => window.URL.revokeObjectURL(link), 10) }\n        >\n          <i id='download' className=\"icon fas fa-cloud-download-alt fa-2x\" />\n        </a>\n        <p className='iconLabel'>Export</p>\n      </div>\n      \n      <div title='Open exported notebook'>\n        <input type=\"file\" accept=\"application/json\" id=\"input\" onChange={ (e) => onFiles(e, onImport) } />\n        <label htmlFor=\"input\"><i className=\"icon fas fa-cloud-upload-alt fa-2x\"></i></label>\n        <p className='iconLabel'>Import</p>\n      </div>      \n    </div>\n  )\n}\n\nfunction dehydrateBox (box : BoxState) : BoxState {\n  const { type } : BoxState = box\n\n  if (type === BoxType.EXPRESSION) {\n\n    return {\n      ...box,\n      ast : null as any, // TODO: don't\n      history : [], // TODO: don't\n      isRunning : false,\n      breakpoints : [], // TODO: solve how to don't\n      timeoutID : undefined,\n    }\n  }\n\n  return box\n}\n\nfunction dehydrate (state : AppState) : AppState {\n  return {\n    ...state,\n    submittedBoxes : state.submittedBoxes.map(dehydrateBox)\n  }\n}\n\nfunction hydrateBox (box : BoxState, macroTable : MacroMap) : BoxState {\n  const { type } : BoxState = box\n  \n  if (type === BoxType.EXPRESSION) {\n    const { singleLetterNames } = box as EvaluationState\n    const ast : AST = parseExpression((box as EvaluationState).expression, { macroTable, singleLetterNames })\n\n    return {\n      ...box,\n      ast,\n      history : [ { ast, lastReduction : None, step : 0, message : '', isNormalForm : false } ],\n    }\n  }\n\n  return box\n}\n\nfunction hydrate (dehydrated : AppState) : AppState {\n  const { macroTable } = dehydrated\n  const config = { macroTable }\n\n  return {\n    ...dehydrated,\n    submittedBoxes : dehydrated.submittedBoxes.map((box) => hydrateBox(box, macroTable))\n  }\n}\n\ninterface Config {\n  singleLetterNames : boolean\n  macroTable : MacroMap\n}\n\nfunction parseExpression (expression : string, config : Config) : AST {\n  const { singleLetterNames : singleLetterVars, macroTable } : Config = config\n  \n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction onFiles (event : ChangeEvent<HTMLInputElement>, onImport : (state : AppState) => void) : void {\n  const { target : { files } } = event\n  if (files === null) {\n    return\n  }\n\n  const file : File = files[0]\n  const reader : FileReader = new FileReader\n  reader.onload = (event : Event) => {\n    const state : AppState = JSON.parse(reader.result as string)\n\n    onImport(hydrate(state))\n  }\n\n  reader.readAsText(file) \n}\n\nfunction createURL (content : string) : string {\n  const data = new Blob([ content ], {\n    type: 'application/json'\n  })\n\n  return window.URL.createObjectURL(data);\n}","import React from 'react'\nimport { MacroMap, builtinMacros } from '@lambdulus/core'\n\n\nexport interface MacroProperties {\n  macroTable : MacroMap\n  removeMacro (name : string) : void\n}\n\nexport default function MacroSpace (props : MacroProperties) : JSX.Element {\n  const { macroTable, removeMacro } = props\n\n  return (\n    <div className='macroSpace'>\n      <div className='builtinMacros'>\n        <p>Built-in Macros</p>\n        <ul className='UL'>\n          { Object.entries(builtinMacros).map(([macroName, macroExpression]) =>\n            <div key={ macroName }>\n              <li className='LI'>\n                <div className='box boxMacro'>\n                  { macroName } := { macroExpression }\n                </div>\n              </li>\n            </div>\n          ) }\n        </ul>\n      </div>\n\n      <div className='userMacros'>      \n        <p>User-defined Macros</p>\n        <ul>\n          { Object.entries(macroTable).map(([macroName, macroExpression]) =>\n              <div key={ macroName }>\n                <li className='LI'>\n                  <div className='box boxMacro'>\n                    { macroName } := { macroExpression }\n                    <i\n                      className=\"hiddenMacroIcon far fa-trash-alt\"\n                      onClick={ () => removeMacro(macroName) }\n                      title='Delete this macro'                      \n                      />\n                  </div>\n                </li>\n              </div>\n            ) }\n        </ul>\n      </div>\n    </div>\n  )\n}","import React, { ChangeEvent } from 'react'\nconst { Switch, Radio } = require('pretty-checkbox-react')\n\nimport { EvaluationStrategy } from '../AppTypes'\n\n\ninterface SettingsProperties {\n  getActiveSingleLetterNames () : boolean\n  changeActiveSingleLetterNames (enabled : boolean) : void\n  getActiveStrategy () : EvaluationStrategy\n  changeActiveStrategy (strategy : EvaluationStrategy) : void\n  getActiveStandalones () : boolean\n  changeActiveStandalones (enabled : boolean) : void\n}\n\nexport default function Settings (props : SettingsProperties) {\n  return (\n    <div className='editorSettings'>\n      <span title='Enable names without spaces'>\n        <Switch\n          checked={ props.getActiveSingleLetterNames() }\n          disabled={ false } // TODO: tohle bude rozhodne chtit prepsat\n          shape=\"fill\"\n          \n          onChange={ (e : ChangeEvent<HTMLInputElement>) => // taky nejakej pattern\n            props.changeActiveSingleLetterNames(e.target.checked)\n          }\n        >\n          Single Letter Names\n        </Switch>\n      </span>\n\n      <span title='Expand stand-alones'>\n        <Switch\n          checked={ props.getActiveStandalones() }\n          disabled={ false } // TODO: tohle bude rozhodne chtit prepsat\n          shape=\"fill\"\n          \n          onChange={ (e : ChangeEvent<HTMLInputElement>) => // taky nejakej pattern\n            props.changeActiveStandalones(e.target.checked)\n          }\n        >\n          Expand stand-alones\n        </Switch>\n      </span>\n\n      <div className='strategies inlineblock'>\n        <p className='stratsLabel inlineblock'>Evaluation Strategies:</p>\n        <Radio\n          name=\"strategy\"\n          style=\"fill\"\n          checked={ props.getActiveStrategy() === EvaluationStrategy.ABSTRACTION }\n          \n          onChange={ () => props.changeActiveStrategy(EvaluationStrategy.ABSTRACTION) }\n        >\n          Simplified\n        </Radio>\n        <Radio\n          name=\"strategy\"\n          style=\"fill\"\n          checked={ props.getActiveStrategy() === EvaluationStrategy.NORMAL }\n          \n          onChange={ () => props.changeActiveStrategy(EvaluationStrategy.NORMAL) }\n        >\n          Normal\n        </Radio>\n        <Radio\n          name=\"strategy\"\n          style=\"fill\"\n          checked={ props.getActiveStrategy() === EvaluationStrategy.APPLICATIVE }\n          \n          onChange={ () => props.changeActiveStrategy(EvaluationStrategy.APPLICATIVE) }\n        >\n          Applicative\n        </Radio>\n      </div>\n    </div>\n  )\n}","import React, { ChangeEvent, KeyboardEvent } from 'react'\n\nimport '../styles/Editor.css'\n\n// import { EvaluationStrategy } from '../App'\n\n\nexport enum ActionType {\n  ENTER_EXPRESSION = 'Enter Expression',\n  ENTER_EXERCISE = 'Enter Exercise',\n  NEXT_STEP = 'Next Step',\n  RUN = 'Run',\n  ENTER_MD = 'Enter MarkDown',\n}\n\ninterface EditorProperties {\n  placeholder: string\n  content : string\n  caretPosition : number\n  syntaxError : Error | null\n  isMarkDown : boolean\n  \n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n  // onReset () : void\n}\n\nexport default function Editor (props : EditorProperties) : JSX.Element {\n  const {\n    placeholder,\n    content,\n    caretPosition,\n    syntaxError,\n    isMarkDown,\n\n    onContent,\n    onEnter,\n    onExecute,\n  } : EditorProperties = props\n  const lines : number = content.split('\\n').length\n\n  const onChange = (event : ChangeEvent<HTMLTextAreaElement>) => {\n    let { target : { value : content } } : { target : { value : string } } = event\n    const caretPosition : number = event.target.selectionEnd\n\n    content = content.replace(/\\\\/g, 'λ')\n\n    onContent(content, caretPosition)\n  }\n\n  // TODO: Editor should not decide that - it should only implement onEnter onShiftEnter onCtrlEnter\n  const onKeyDown = (event : KeyboardEvent<HTMLTextAreaElement>) => {\n    if ( ! event.shiftKey && ! event.ctrlKey && event.key === 'Enter') {\n      \n      if (isMarkDown) {\n        return\n      }\n\n      event.preventDefault()\n      onEnter()\n    }\n\n    if (event.shiftKey && event.key === 'Enter' && isMarkDown) {\n      event.preventDefault()\n      onEnter()\n    }\n    if (event.ctrlKey && event.key === 'Enter') {\n      event.preventDefault()\n      onExecute()\n    }\n\n    // TODO: not yet\n    // if (event.ctrlKey && event.key === 'r') {\n    //   event.preventDefault()\n    //   onReset()\n    // }\n  }\n\n  return (\n    <div className='editorContainer'>\n      {\n        syntaxError ?\n        <p className='editorError'>\n          { `${syntaxError}` }\n        </p>\n        :\n        null\n      }\n\n      <div className=\"editor\">\n        <InputField\n          placeholder={ placeholder }\n          content={ content }\n          lines={ lines }\n          caretPosition={ caretPosition }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n        />\n      </div>\n    </div>\n  )\n}\n\ninterface InputProps {\n  placeholder : string\n  content : string\n  lines : number\n  caretPosition : number\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void\n  onKeyDown (event : KeyboardEvent<HTMLTextAreaElement>) : void\n}\n\nfunction InputField (props : InputProps) : JSX.Element {\n  const { placeholder, content, lines, onChange, onKeyDown, caretPosition } : InputProps = props\n\n  return (\n    <textarea\n      className='prompt'\n      onKeyDown={ onKeyDown }\n      onChange={ onChange }\n      value={ content }\n      placeholder={ placeholder }\n      wrap='hard'\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={ false }\n      rows={ Math.max(lines, 1) } \n      ref={ (element : HTMLTextAreaElement) => {\n        if (element !== null) {\n          element.selectionStart = caretPosition\n          element.selectionEnd = caretPosition\n          element.focus()\n        }\n      } }\n    />\n  )\n}","import { AST, Lambda, Application, Macro, ChurchNumeral, Variable } from \"@lambdulus/core\"\n\n///////////////////////////////////////////////////////////////////////////////////////\n\ntype Pair<T> = [T, T]\ntype Triple<T> = [T, T, T]\n\n\n// TODO: fix the public equals interface, maybe public get and private set?\n// maybe implement public get method and bool itself leave private?\n//\n// first I need more trees, I need the previous AST\nexport class TreeComparator {\n  private translator : Map<string, string> = new Map\n  public equals : boolean = true\n  private context : Pair<AST>\n\n  constructor (readonly roots : Pair<AST> ) {\n    [ ...this.context ] = roots\n    // TODO: I need to compare roots first\n    this.compare()\n  }\n\n  compare () : void {\n    /**\n    TODO: compare need to compare both children if got\n    if one of them is incorrect\n    then solve that problem\n    if both of them is incorrect\n    then solve both problems and then decide how both come together\n\n    then I have an instance of knowledge system\n    I can fire up that system in this context (this node with invalid children)\n    system will need to get instance of something to call methods on\n    because system needs to ask questions - like, is this possible,\n    is this error applicable?\n    so instead of human, code will look up the AST and answer the questions\n    so it will be some kind of class which is able to observe all 3 ASTs at the same time\n    it will also have implemented query methods,\n    probably wont be many of them, just few\n    **/\n    \n    const [ left, right ] : Pair<AST> = this.context\n\n    if (left instanceof Lambda && right instanceof Lambda) {\n      const backup : Map<string, string> = new Map(this.translator.entries())\n\n      this.translator.set(left.argument.name(), right.argument.name())\n      this.context = [ left.right, right.right ]\n      this.compare()\n\n      this.translator = backup\n    }\n    else if (left instanceof Application && right instanceof Application) {\n      this.context = [ left.left, right.left ]\n      this.compare()\n\n      if ( ! this.equals) {\n        return\n      }\n\n      this.context = [ left.right, right.right ]\n      this.compare()\n    }\n    else if (left instanceof Macro && right instanceof Macro) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof ChurchNumeral && right instanceof ChurchNumeral) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof Variable && right instanceof Variable) {\n      this.equals = this.translator.get(left.name()) === right.name()\n    }\n    else {\n      this.equals = false\n    }\n  }\n}","import React, { useContext } from 'react'\n\nimport Editor from './Editor'\nimport { MakeActiveContext, DeleteBox } from './BoxSpace'\nimport { StepRecord } from '../AppTypes'\n\ninterface EmptyExpressionProps {\n  className : string\n  isActive : boolean\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  history : Array<StepRecord>\n\n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n}\n\n\nexport default function EmptyExpression(props : EmptyExpressionProps) : JSX.Element{\n  const { className, isActive, editor } = props\n  const {\n    placeholder,\n    content,\n    caretPosition,\n    syntaxError,\n  } = editor\n\n  const makeActive = useContext(MakeActiveContext)\n  const deleteBox = useContext(DeleteBox)\n\n  return (\n    <div\n      className={ `${className} ${isActive ? '' : ' inactiveBox'}` }\n      onDoubleClick={ makeActive } >\n        {\n          isActive ? <p className='emptyStep'>Empty expression box.</p> : null\n        }\n        {\n          isActive ?\n            (\n              <div>\n                <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n                <Editor\n                  placeholder={ placeholder } // data\n                  content={ content } // data\n                  caretPosition={ caretPosition } // data\n                  syntaxError={ syntaxError } // data\n                  isMarkDown={ false } // data\n  \n                  onContent={ props.onContent } // fn\n                  onEnter={ props.onEnter } // fn // tohle asi bude potreba\n                  onExecute={ props.onExecute } // fn // tohle asi bude potreba\n                />\n              </div>\n            )\n            :\n            (\n              <div>\n                <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n                <p className='inactiveMessage'>\n                  Collapsing { Math.max(0, props.history.length - 1) } { props.history.length === 2 ? 'step' : 'steps' }. Double click to activate this box.\n                </p>\n                </div>\n            )\n        }\n    </div>\n  )\n}","import React from 'react'\n\nimport { ASTVisitor, Lambda, Variable, Beta, AST, Application, ChurchNumeral, Expansion, Macro, ASTReduction, Alpha, Gama } from \"@lambdulus/core\"\nimport { Breakpoint } from '../AppTypes'\nimport { reportEvent } from '../misc';\n\n\nexport default class ReactPrinter extends ASTVisitor {\n  private rendered : JSX.Element | null = null\n  private argument : Variable | null = null\n\n  private printMultiLambda (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.body.argument\n      let className : string = 'argument'\n      let title : string = ''\n\n      if (this.isBreakpoint(lambda.body.argument)) {\n        className += ' breakpoint'\n        title = 'Will break on substitution'\n      }\n\n      // bug@highlight-alpha\n      let set = false\n      if (this.reduction instanceof Alpha\n            &&\n          Array.from(this.reduction.conversions).some((conversion : Lambda) => {\n            return conversion.identifier === lambda.body.identifier\n          })\n          ) {\n              this.argument = context\n              set = true\n      }\n\n      // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n      let argument : Variable | null = this.argument\n      if (this.argument !== lambda.body.argument\n          &&\n          this.argument !== null\n          &&\n          this.argument.name() === lambda.body.argument.name()) {\n        this.argument = null\n      } // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n\n      // TODO: same here\n      if (this.argument\n          &&\n          this.argument.name() === context.name()) {\n            className += ' substitutedArg'\n        }\n\n      const args : JSX.Element = (\n        <span className='arguments'>\n          { accumulator } {' '}\n          <span\n            className={ className }\n            title={ title }\n            onClick={ () => {\n              (context as any).identifier = Symbol()\n              this.onClick({ type : Beta, context, broken : new Set })\n              reportEvent('Breakpoint added to argument', 'Breakpoint was added', '')\n            }\n            }\n          >\n            { context.name() }\n          </span>\n        </span>\n      )\n      \n      this.printMultiLambda(lambda.body, args)\n      if (set === true) {\n        this.argument = null\n      }\n      this.argument = argument // TO JE KVULI FIXU MULTILAMBDA FACCT 3 beta redukce nad shadowingem\n    }\n    else {\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n      this.rendered = accumulator\n\n      this.rendered = (\n        <span className='function'>\n          (\n          <span\n            className='lambda'\n            >\n              λ { ' ' }\n          </span>\n          { accumulator } . { body }\n          )\n        </span>\n      )\n    }\n  }\n\n  isBreakpoint (node : AST) : boolean {\n    for (const breakpoint of this.breakpoints) {\n      if (breakpoint.context.identifier === node.identifier) {\n        return true\n      }\n    }\n    return false\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n    private readonly reduction : ASTReduction,\n    private readonly breakpoints : Array<Breakpoint>,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: little bit refactored, maybe keep going\n  onApplication (application: Application) : void {\n    let className : string = 'application'\n    let leftClassName : string = 'left'\n    let rightClassName : string = 'right'\n    let set : boolean = false\n    let redex : AST | null = null\n\n    if (this.reduction instanceof Beta) {\n      redex = this.reduction.redex\n    }\n\n    if (this.reduction instanceof Gama && this.reduction.args.includes(application)) {\n      className += ' redex abstraction argument'\n    }\n    // else if (this.reduction instanceof Expansion) {\n    //   redex = this.reduction.target\n    // } // to asi neni uplne potreba tady\n\n    if (redex !== null\n          &&\n        redex.identifier === application.identifier // tohle je asi trosku useles\n          &&\n        redex === application\n      ) {\n        leftClassName += ' redex'\n        rightClassName += ' redex'\n\n        // TODO: this is probably not good and should be done other way\n\n        if (application.left instanceof Lambda) {\n          this.argument = application.left.argument\n          set = true\n        }\n    }\n\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      // tohle delam proto, ze se nesmi vypnout this.argument u libovolne aplikace, jenom u te ktera ho setnula\n      // priklad + 2 3 a krokuj - zakomentuj a krokuj znovu Y se bude chovat spatne hned v prvnich krocich\n      if (set) {\n        this.argument = null\n      }\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>( { this.rendered } )</span>\n\n      this.rendered =\n      <span className={ className }>\n        { left } { right }\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = <span className={ leftClassName }>{this.rendered}</span>\n\n      // tohle delam proto, ze se nesmi vypnout this.argument u libovolne aplikace, jenom u te ktera ho setnula\n      // priklad + 2 3a krokuj - zakomentuj a krokuj znovu Y se bude chovat spatne hned v prvnich krocich\n      if (set) {\n        this.argument = null\n      }\n\n      application.right.visit(this)\n      const right : JSX.Element | null = <span className={ rightClassName }>{ this.rendered }</span>\n\n      this.rendered =\n      <span className={ className }>\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onLambda (lambda: Lambda) : void {\n    // TODO: this also seems not so elegant and clean\n\n    let title : string = ''\n\n    let argument : Variable | null = this.argument\n    if (this.argument !== lambda.argument\n        &&\n        this.argument !== null\n        &&\n        this.argument.name() === lambda.argument.name()) {\n      this.argument = null\n    }\n\n\n    // multilambda\n    if (lambda.body instanceof Lambda) {\n      const context : Variable = lambda.argument\n      let className : string = 'argument'\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n        title = 'Will break on substitution'\n      }\n\n      // TODO: same here\n      if (this.argument\n        &&\n        this.argument.name() === context.name()) {\n          className += ' substitutedArg'\n      }\n\n      const acc : JSX.Element = (\n        <span\n          className={ className }\n          title={ title }\n          onClick={ () => {\n            (context as any).identifier = Symbol()\n            this.onClick({ type : Beta, context, broken : new Set })\n            reportEvent('Breakpoint added to argument', 'Breakpoint was added', '')\n          }\n          }\n        >\n          { lambda.argument.name() }\n        </span>\n      )\n\n      this.printMultiLambda(lambda, acc)\n    }\n    else {\n      const context : Variable = lambda.argument\n\n      // lambda.argument.visit(this)\n      \n      // const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      let className : string = 'argument'\n      let title : string = ''\n\n      if (this.isBreakpoint(lambda.argument)) {\n        className += ' breakpoint'\n        title = 'Will break on substitution'\n      }\n\n      // TODO: same here\n      if (this.argument\n        &&\n        this.argument.name() === context.name()) {\n          className += ' substitutedArg'\n      }\n\n      this.rendered = (\n        <span className='function' >\n          (\n          <span\n            className='lambda'\n            >\n              λ { ' ' }\n          </span>\n          <span\n            className='arguments'\n            onClick={ () => {\n              (context as any).identifier = Symbol()\n              // TODO: for now it does nothing - maybe delete in the future            \n              // this.onClick({ type : Beta, context, broken : new Set })\n              // reportEvent('Breakpoint added to argument', 'Breakpoint was added', '')\n            }\n            }\n          >\n            <span\n                className={ className }\n                title={ title }\n                onClick={ () => {\n                  (context as any).identifier = Symbol()\n                  this.onClick({ type : Beta, context, broken : new Set })\n                  reportEvent('Breakpoint added', 'Breakpoint was added', '')\n                }\n                }\n            >\n              { lambda.argument.name() }\n            </span>\n            { ' ' }\n          </span>\n          . { body } \n          )\n        </span>\n      )\n    }\n\n    if (argument !== null) {\n      this.argument = argument\n    }\n  }\n  \n  // TODO: little bit refactored, maybe keep going\n  onChurchNumeral (churchNumber: ChurchNumeral) : void {\n    let className : string = 'churchnumeral'\n    let redex : AST | null = null\n    let redexClass : string = ' redex'\n    let title : string = ''\n\n    if (this.reduction instanceof Expansion) {\n      redex = this.reduction.target\n    }\n\n    if (this.reduction instanceof Gama && this.reduction.args.includes(churchNumber)) {\n      className += ' redex abstraction argument'\n    }\n\n    if (redex !== null\n          &&\n        redex.identifier === churchNumber.identifier\n          &&\n        redex === churchNumber\n      ) {\n        className += redexClass\n    }\n\n    if (this.isBreakpoint(churchNumber)) {\n      className += ' breakpoint'\n      title = 'Will break on Expansion'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        title={ title }\n        onClick={ () => {\n          (churchNumber as any).identifier = Symbol()\n          this.onClick({ type: Expansion, context : churchNumber, broken : new Set })\n          reportEvent('Breakpoint added to ChurchNumeral', 'Breakpoint was added', '')\n        }\n        }\n      >\n        { churchNumber.name() }\n      </span>\n    )\n  }\n\n  // TODO: little bit refactored, maybe keep going  \n  onMacro (macro: Macro) : void {\n    let className = 'macro'\n    let redex : AST | null = null\n    let redexClass : string = ' redex'\n    let title : string = ''\n\n    if (this.reduction instanceof Expansion) {\n      redex = this.reduction.target\n    } \n\n    if (this.reduction instanceof Gama) {\n      if (this.reduction.redexes.includes(macro)) {\n        [ redex ] = this.reduction.redexes\n        className += redexClass + ' abstraction'\n      }\n\n\n      if (this.reduction.args.includes(macro)) {\n        className += redexClass + ' abstraction argument'\n      }\n    }\n\n\n    if (redex !== null\n          &&\n        redex.identifier === macro.identifier\n          &&\n        redex === macro\n        ) {\n      className += redexClass\n    }\n\n    if (this.isBreakpoint(macro)) {\n      className += ' breakpoint'\n      title = 'Will break on Expansion'\n    }\n\n    this.rendered = (\n      <span\n        className={ className }\n        title={ title }\n        onClick={ () => {\n          (macro as any).identifier = Symbol()\n          this.onClick({ type: Expansion, context : macro, broken : new Set })\n          reportEvent('Breakpoint added to Macro', 'Breakpoint was added', '')\n        }\n        }\n      >\n        { macro.name() }\n      </span>\n    )\n  }\n  \n  onVariable (variable: Variable): void {\n    // TODO: same here - not so clean\n    let className : string = 'variable'\n\n    if (this.argument\n        &&\n        this.argument.name() === variable.name()) {\n          className += ' substitutedArg'\n      }\n\n    this.rendered = <span className={ className } >{ variable.name() }</span>\n  }\n}","import React from 'react'\nimport { ASTReduction, Beta, Alpha, Expansion, Gama, Eta } from '@lambdulus/core'\n\n\ninterface ReductionMessageProperties {\n  lastReduction : ASTReduction | null\n}\n\nexport default function ReductionMessage (props : ReductionMessageProperties) : JSX.Element {\n  const { lastReduction } = props\n\n  if (lastReduction === null) {\n    return null as any\n  }\n\n  if (lastReduction instanceof Beta) {\n    return (\n      <p className='lastReduction'>\n        β reduction\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Alpha) {\n    return (\n      <p className='lastReduction'>\n        α conversion\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Expansion) {\n    return (\n      <p className='lastReduction'>\n        Macro expansion\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Eta) {\n    return (\n      <p className='lastReduction'>\n        η conversion\n      </p>\n    )\n  }\n\n  if (lastReduction instanceof Gama) {\n    return (\n      <p className='lastReduction'>\n        Simplified Application\n      </p>\n    )\n  }\n\n  else {\n    return null as any\n  }\n  \n}","import React, { createContext, ReactNode } from \"react\"\n\nimport { DEFAULT_STATE, EvaluationStrategy, AppState } from \"../AppTypes\"\n\n\nexport const StateContext = createContext(DEFAULT_STATE)\nexport const SLIContext = createContext(true)\nexport const StrategyContext = createContext(EvaluationStrategy.NORMAL)\n\ninterface InjectorProps {\n  state : AppState\n  SLI : boolean\n  strategy : EvaluationStrategy\n  children : ReactNode\n}\n\nexport function DataInjector (props : InjectorProps) : JSX.Element {\n  const { state, SLI, strategy, children } = props\n\n  return (\n    <StateContext.Provider value={ state }>\n      <StrategyContext.Provider value={ strategy }>\n        <SLIContext.Provider value={ SLI }>\n          { children }\n        </SLIContext.Provider>\n      </StrategyContext.Provider>\n    </StateContext.Provider>\n  )\n}","import React, { memo } from 'react'\nimport { ASTReduction } from '@lambdulus/core'\n\nimport '../styles/Step.css'\n\nimport { strategyToEvaluator } from './ExpressionBox'\nimport ReactPrinter from './ReactPrinter'\nimport ReductionMessage from './ReductionMessage'\nimport { EvaluationStrategy, StepRecord, Breakpoint, Evaluator } from '../AppTypes'\nimport { StrategyContext } from './DataInjector'\n\n\ninterface StepWrapperProperties {\n  stepRecord : StepRecord\n  breakpoints : Array<Breakpoint>\n  addBreakpoint (breakpoint : Breakpoint) : void\n  children : JSX.Element\n  lastStep : boolean\n}\n\ninterface StepProperties {\n  stepRecord : StepRecord\n  breakpoints : Array<Breakpoint>\n  addBreakpoint (breakpoint : Breakpoint) : void\n  children : JSX.Element\n  strategy : EvaluationStrategy\n  lastStep : boolean\n}\n\n// This is done because of highlighting - if Strategy is changed ->\n// old steps should not be re-highlighted with changed Strategy - but stay same\nconst StepMemo = memo(Step, (props : StepProperties) => !props.lastStep)\n\nexport default function StepWrapper (props : StepWrapperProperties) : JSX.Element {\n  return(\n    <StrategyContext.Consumer>\n      { \n        (strategy : EvaluationStrategy) => <StepMemo { ...props } strategy={ strategy } />\n      }\n    </StrategyContext.Consumer>\n  )\n}\n\nfunction Step (props : StepProperties) : JSX.Element | null {\n  const { stepRecord, addBreakpoint, breakpoints, children, strategy } = props\n  const { ast : tree, lastReduction, step, message } = stepRecord\n\n  if (tree === null) {\n    return null\n  }\n\n  const evaluator : Evaluator = new (strategyToEvaluator(strategy) as any)(tree)\n  const reduction : ASTReduction = evaluator.nextReduction\n  const printer : ReactPrinter = new ReactPrinter(tree, addBreakpoint, reduction, breakpoints)\n\n  return (\n    <span className='step'>\n      <ReductionMessage lastReduction={ lastReduction } />\n      <div className='inlineblock' >\n        <p className='stepNumber' >\n          { step } :\n        </p>\n        { printer.print() }\n        { children }\n        {\n          stepRecord.message === '' ?\n            null\n            :\n            <p className='stepMessage'>\n              { stepRecord.message }\n            </p>\n        }\n      </div>\n    </span>\n  )\n}","import React, { createContext, ReactNode } from \"react\"\nimport { BoxState } from \"../AppTypes\"\n\n\nexport const AddBoxContext = createContext((boxState : BoxState) => {})\nexport const RemoveBoxContext = createContext((index  : number) => {})\nexport const AddEmptyBoxContext = createContext((boxState : BoxState) => {})\nexport const ChangeActiveBoxContext = createContext((activeBoxIndex : number) => {} )\nexport const SetBoxStateContext = createContext((index : number, boxState : BoxState) => {})\nexport const DefineMacroContext = createContext((name : string, definition : string) => {})\n\ninterface InjectorProps {\n  addBox (boxState : BoxState) : void\n  removeBox (index : number) : void\n  addEmptyBox (boxState: BoxState) : void\n  changeActiveBox (activeBoxIndex: number) : void\n  defineMacro (name: string, definition: string) : void\n  setBoxState (index: number, boxState: BoxState) : void\n  children : ReactNode\n}\n\nexport function MethodInjector (props : InjectorProps) : JSX.Element {\n  const { addBox, removeBox, addEmptyBox, changeActiveBox, setBoxState, defineMacro, children } = props\n\n  return (\n    <AddBoxContext.Provider value={ addBox }>\n      <RemoveBoxContext.Provider value={ removeBox }>\n        <AddEmptyBoxContext.Provider value={ addEmptyBox }>\n          <ChangeActiveBoxContext.Provider value={ changeActiveBox }>\n            <SetBoxStateContext.Provider value={ setBoxState }>\n              <DefineMacroContext.Provider value={ defineMacro }>\n              { children }\n              </DefineMacroContext.Provider>\n            </SetBoxStateContext.Provider>\n          </ChangeActiveBoxContext.Provider>\n        </AddEmptyBoxContext.Provider>\n      </RemoveBoxContext.Provider>\n    </AddBoxContext.Provider>\n  )\n}","import React, { useContext } from 'react'\n\nimport Step from './Step'\nimport { AddBoxContext } from './MethodInjector'\nimport { Breakpoint, StepRecord, EvaluationState, BoxState } from '../AppTypes'\nimport { DeleteBox, MakeActiveContext } from './BoxSpace'\n\ninterface InactiveExpressionProps {\n  className : string\n  breakpoints : Array<Breakpoint>\n  history : Array<StepRecord>\n\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState\n}\n\n\nexport default function InactiveExpression (props : InactiveExpressionProps) : JSX.Element {\n  const { className } = props\n  const deleteBox = useContext(DeleteBox)\n  const makeActive = useContext(MakeActiveContext)\n\n  return (\n    <div className={ className + ' inactiveBox' } onDoubleClick={ makeActive } >\n      <i className='removeBox far fa-trash-alt' onClick={ deleteBox } />\n      <ul className='UL'>\n        <li key={ 0 } className='activeStep LI'>\n          <Step\n            breakpoints={ props.breakpoints }\n            addBreakpoint={ () => {} } // blank function - NOOP\n            stepRecord={ props.history[0] }\n            lastStep={ false }\n          >\n            \n            <AddBoxContext.Consumer>\n              {\n                (addBox : (boxState : BoxState) => void) => <i\n                  className=\"hiddenIcon fas fa-pencil-alt\"\n                  onClick={ () => addBox(props.createBoxFrom(props.history[0])) }\n                />\n              }\n            </AddBoxContext.Consumer>\n            \n          </Step>\n        </li>\n      </ul>\n      <p className='inactiveMessage'>\n        Collapsing { props.history.length - 1 } { props.history.length === 2 ? 'step' : 'steps' }. Double click to activate this box.\n      </p>\n    </div>\n  )\n}","import React, { ChangeEvent } from 'react'\nconst { Switch } = require('pretty-checkbox-react')\n\n\nimport 'pretty-checkbox'\nimport '../styles/Controls.css'\n\n\nexport interface ControlsProps {\n  isExercise : boolean\n  makeExercise () : void\n  endExercise () : void\n}\n\n// TODO: maybe not really needed or rename it accordingly\nexport default function Controls (props : ControlsProps) : JSX.Element {\n  const {\n    isExercise,\n    makeExercise,\n    endExercise,\n  } : ControlsProps = props\n\n  return (\n    <div id=\"controls\">\n      <div title='Write the next step yourself'>\n        <Switch\n          className='exerciseSwitch'\n          checked={ isExercise }\n          onChange={ (e : ChangeEvent<HTMLInputElement>) =>\n            e.target.checked ? makeExercise() : endExercise()\n          }\n          shape=\"fill\"\n        >\n          Exercise\n        </Switch>\n      </div>\n    </div>\n  )\n}","import React, { PureComponent } from 'react'\n\nimport Controls from './Controls'\nimport Step from './Step'\nimport { PromptPlaceholder, EvaluationState, Breakpoint, StepRecord, BoxState } from '../AppTypes'\nimport { mapLeftFromTo } from '../misc'\nimport Editor from './Editor'\nimport { AddBoxContext } from './MethodInjector'\nimport { DeleteBox } from './BoxSpace'\n\n\ninterface EvaluatorProps {\n  className : string\n  isExercise : boolean\n  state : EvaluationState\n  breakpoints : Array<Breakpoint>\n  history : Array<StepRecord>\n  editor : {\n    placeholder : string\n    content : string\n    caretPosition : number\n    syntaxError : Error | null\n  }\n  isNormalForm : boolean\n\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState\n  setBoxState (state : EvaluationState) : void\n  onContent (content : string, caretPosition : number) : void\n  onEnter () : void\n  onExecute () : void\n}\n\nexport default class Expression extends PureComponent<EvaluatorProps> {\n  constructor (props : EvaluatorProps) {\n    super(props)\n\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { className, isExercise, state, editor } = this.props\n\n    const {\n      placeholder,\n      content,\n      caretPosition,\n      syntaxError,\n    } = editor\n\n    return (\n      <div className={ className }>\n        <Controls\n          isExercise={ isExercise }\n          makeExercise={ () =>\n            this.props.setBoxState({\n              ...state,\n              isExercise : true,\n              editor: {\n                ...state.editor,\n                placeholder : PromptPlaceholder.VALIDATE_MODE,\n              },\n            })\n          }\n          endExercise={ () =>\n            this.props.setBoxState({\n              ...state,\n              isExercise : false,\n              editor: {\n                ...state.editor,\n                placeholder : PromptPlaceholder.EVAL_MODE,\n              },\n            })\n          }\n        />\n        <DeleteBox.Consumer>\n          {\n           (deleteBox : () => void) =>\n            <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n          }\n        </DeleteBox.Consumer>\n\n        <AddBoxContext.Consumer>\n          {\n            (addBox : (boxState : BoxState) => void) =>\n            <ul className='UL'>\n              {\n                mapLeftFromTo(0, this.props.history.length - 2, this.props.history, (stepRecord : StepRecord, i : Number) =>\n                  <li key={ i.toString() } className='inactiveStep LI' >\n                    <Step\n                      breakpoints={ this.props.breakpoints }\n                      addBreakpoint={ () => {} }\n                      stepRecord={ stepRecord }\n                      lastStep={ false }\n                    >\n                      <i\n                        className=\"hiddenIcon fas fa-pencil-alt\"\n                        title='Copy this to new box'\n                        onClick={ () => addBox(this.props.createBoxFrom(stepRecord)) }\n                      />\n                    </Step>\n                  </li>)\n              }\n              <li key={this.props.history.length - 1} className='activeStep LI'>\n                <Step\n                  breakpoints={ this.props.breakpoints }\n                  addBreakpoint={ this.addBreakpoint }\n                  stepRecord={ this.props.history[this.props.history.length - 1] }\n                  lastStep={ true }\n                >\n                    <i\n                      className=\"hiddenIcon fas fa-pencil-alt\"\n                      title='Copy this to new box'\n                      onClick={ () => addBox(this.props.createBoxFrom(this.props.history[this.props.history.length - 1])) }\n                    />\n                </Step>\n              </li>\n            </ul>\n          }\n        </AddBoxContext.Consumer>\n\n        {\n          this.props.isNormalForm ?\n          null\n            :\n          <Editor\n            placeholder={ placeholder } // data\n            content={ content } // data\n            caretPosition={ caretPosition } // data\n            syntaxError={ syntaxError } // data\n            isMarkDown={ false } // data\n\n            onContent={ this.props.onContent } // fn\n            onEnter={ this.props.onEnter } // fn // tohle asi bude potreba\n            onExecute={ this.props.onExecute } // fn // tohle asi bude potreba\n          />\n        }\n      </div>\n    )\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    let { state, setBoxState } = this.props\n  \n    setBoxState({\n      ...state,\n      breakpoints : [ ...state.breakpoints, breakpoint ],\n    })\n  }\n}","import React, { PureComponent } from 'react'\nimport {\n  AST,\n  ASTReduction,\n  None,\n  NormalEvaluator,\n  Beta,\n  Lambda,\n  Variable,\n  Expansion,\n  ChurchNumeral,\n  Macro,\n  Token,\n  tokenize,\n  parse,\n  ApplicativeEvaluator,\n  OptimizeEvaluator,\n  MacroMap,\n  NormalAbstractionEvaluator,\n} from \"@lambdulus/core\"\n\nimport '../styles/EvaluatorBox.css'\n\nimport { TreeComparator } from './TreeComparator'\nimport EmptyEvaluator from './EmptyExpression'\nimport InactiveEvaluator from './InactiveExpression'\nimport Expression from './Expression'\nimport { EvaluationStrategy, PromptPlaceholder, EvaluationState, Evaluator, StepRecord, BoxType, Breakpoint } from '../AppTypes'\nimport { reportEvent } from '../misc'\n\n\nexport function strategyToEvaluator (strategy : EvaluationStrategy) : Evaluator {\n  switch (strategy) {\n    case EvaluationStrategy.NORMAL:\n      return NormalEvaluator as any\n \n    case EvaluationStrategy.APPLICATIVE:\n      return ApplicativeEvaluator as any\n\n    case EvaluationStrategy.OPTIMISATION:\n      return OptimizeEvaluator as any\n\n    case EvaluationStrategy.ABSTRACTION:\n      return NormalAbstractionEvaluator as any\n  }\n}\n\nexport interface EvaluationProperties {\n  state : EvaluationState\n  isActive : boolean\n  macroTable : MacroMap\n\n  setBoxState (state : EvaluationState) : void\n}\n\nexport default class ExpressionBox extends PureComponent<EvaluationProperties> {\n  constructor (props : EvaluationProperties) {\n    super(props)\n\n    this.onContent = this.onContent.bind(this)\n    this.onSubmitExpression = this.onSubmitExpression.bind(this)\n    this.parseExpression = this.parseExpression.bind(this)\n    this.onEnter = this.onEnter.bind(this)\n    this.onExerciseStep = this.onExerciseStep.bind(this)\n    this.onStep = this.onStep.bind(this)\n    this.onExecute = this.onExecute.bind(this)\n    this.onRun = this.onRun.bind(this)\n    this.onStop = this.onStop.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n    this.createBoxFrom = this.createBoxFrom.bind(this)\n  }\n\n  render () : JSX.Element {\n    const { state, isActive } : EvaluationProperties = this.props\n    const {\n      history,\n      breakpoints,\n      isExercise,\n      strategy,\n      expression,\n      editor,\n    } : EvaluationState = state\n\n    let className : string = 'box boxEval'\n    const { isNormalForm } = history.length ? history[history.length - 1] : { isNormalForm : false }\n\n    if (expression === '') {\n      return (\n        <EmptyEvaluator\n          className={ className }\n          isActive={ this.props.isActive }\n          editor={ editor }\n          history={ history }\n\n          onContent={ this.onContent }\n          onEnter={ this.onEnter }\n          onExecute={ this.onExecute }\n        />\n      )\n    }\n\n    if (isExercise) {\n      className += ' boxExercise'\n    }\n\n    if ( ! isActive) {\n      return (\n        <InactiveEvaluator\n          className={ className }\n          breakpoints={ breakpoints }\n          history={ history }\n          \n          createBoxFrom={ this.createBoxFrom }\n        />\n      )\n    }\n\n    return (\n      <Expression\n        className={ className }\n        isExercise={ isExercise }\n        state={ state }\n        breakpoints={ breakpoints }\n        history={ history }\n        editor={ editor }\n        isNormalForm={ isNormalForm }\n\n        createBoxFrom={ this.createBoxFrom }\n        setBoxState={ this.props.setBoxState }\n        onContent={ this.onContent }\n        onEnter={ this.onEnter }\n        onExecute={ this.onExecute }\n      />\n    )\n  }\n\n  createBoxFrom (stepRecord : StepRecord) : EvaluationState {\n    const { state } : EvaluationProperties = this.props\n    const {\n      strategy,\n      singleLetterNames,\n      standalones,\n    } : EvaluationState = state\n    const { ast } = stepRecord\n\n    return {\n      type : BoxType.EXPRESSION,\n      __key : Date.now().toString(),\n      expression : ast.toString(),\n      ast : ast.clone(),\n      history : [ {\n        ast : ast.clone(),\n        lastReduction : null,\n        step : 0,\n        message : '',\n        isNormalForm : false,\n      } ],\n      isRunning : false,\n      breakpoints : [],\n      timeoutID : undefined,\n      timeout : 10,\n      isExercise : false,\n      strategy,\n      singleLetterNames,\n      standalones,\n      editor : {\n        placeholder : PromptPlaceholder.EVAL_MODE,\n        content : '',\n        caretPosition : 0,\n        syntaxError : null,\n      }\n    }\n  }\n\n  onContent (content : string, caretPosition : number) : void {\n    const { state, setBoxState } = this.props\n\n    setBoxState({\n      ...state,\n      editor : {\n        ...state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n  }\n\n  onEnter () : void {\n    const { expression, isExercise, editor : { content } } = this.props.state\n\n    if (expression === '') {\n      this.onSubmitExpression()\n    }\n    else if (content !== '' && isExercise) {\n      this.onExerciseStep()\n    }\n    else if (content === '' && (! isExercise)) {\n      this.onStep()\n    }\n    else {\n      console.log('Error: Something unexpected just happened. A')\n    }\n  }\n\n  onSubmitExpression () : void {\n    const { state, setBoxState } = this.props\n    const {\n      editor : { content },\n    } = state\n\n    try {\n      const ast : AST = this.parseExpression(content)\n\n      setBoxState({\n        ...state,\n        ast,\n        expression : content,\n        history : [ {\n          ast : ast.clone(),\n          lastReduction : None,\n          step : 0,\n          message : '',\n          isNormalForm : false\n        } ],\n        editor : {\n          content : '',\n          caretPosition : 0,\n          placeholder : PromptPlaceholder.EVAL_MODE,\n          syntaxError : null,\n        }\n      })\n\n      reportEvent('Submit Expression', 'submit valid', content)\n    } catch (exception) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : exception.toString(),\n        }\n      })\n\n      reportEvent('Submit Expression', 'submit invalid', content)\n    }\n  }\n\n  onExerciseStep () {\n    const { state, setBoxState } = this.props\n    const { strategy, history, editor : { content } } = state\n    \n    try {\n      const userAst : AST = this.parseExpression(content)\n      const stepRecord : StepRecord = history[history.length - 1]\n      const { isNormalForm, step } = stepRecord\n      let { ast, lastReduction } = stepRecord\n      ast = ast.clone()\n\n      if (isNormalForm) {\n        // TODO: do something about it\n        // say user - there are no more steps and it is in normal form        \n        // TODO: consider immutability\n        stepRecord.message = 'No more steps available. Expression is in normal form.'\n\n        setBoxState({\n          ...state,\n        })\n\n        reportEvent('Exercise Step', 'Step Already in normal form', content)\n\n        return\n      }\n    \n      const normal : Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n      lastReduction = normal.nextReduction\n    \n      if (normal.nextReduction instanceof None) {\n        // TODO: refactor PLS - update history\n        // TODO: say user it is in normal form and they are mistaken\n        stepRecord.isNormalForm = true\n        stepRecord.message = 'Expression is already in normal form.'\n        \n        setBoxState({\n          ...state,\n        })\n\n        reportEvent('Exercise Step', 'Step Already in Normal Form', content)\n        \n        return\n      }\n    \n      ast = normal.perform()\n    \n      let message : string = ''\n      const comparator : TreeComparator = new TreeComparator([ userAst, ast ])\n      if (comparator.equals) {\n        ast = userAst\n        message = 'Correct.'\n\n        reportEvent('Exercise Step', 'Valid Step', content)\n      }\n      else {\n        // TODO: say user it was incorrect\n        // TODO: na to se pouzije uvnitr EvaluatorState prop messages nebo tak neco\n        console.log('Incorrect step')\n        message = `Incorrect step. ${content}`\n\n        reportEvent('Exercise Step', 'Invalid Step', content)\n      }\n\n      setBoxState({\n        ...state,\n        history : [ ...history, { ast, lastReduction, step : step + 1, message, isNormalForm : false } ],\n        editor : {\n          ...state.editor,\n          content : '',\n          caretPosition : 0,\n          placeholder : PromptPlaceholder.VALIDATE_MODE,\n          syntaxError : null,\n        }\n      })\n    } catch (exception) {\n      // TODO: print syntax error\n      // TODO: do it localy - no missuse of onSubmit\n\n      // TODO: print syntax error\n\n      reportEvent('Exercise Step', 'Syntax error in Step', content)\n    }\n  }\n\n  onStep () : void {\n    const { state, setBoxState } = this.props\n    const { strategy, standalones, history, editor : { content } } = state\n    const stepRecord = history[history.length - 1]\n    const { isNormalForm, step } = stepRecord\n    let { ast, lastReduction } = stepRecord\n    ast = ast.clone()\n  \n    if (isNormalForm) {\n      return\n    }\n\n    const normal : Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n    lastReduction = normal.nextReduction\n  \n    if (normal.nextReduction instanceof None) {\n      stepRecord.isNormalForm = true\n      stepRecord.message = 'Expression is in normal form.'\n      \n      setBoxState({\n        ...state,\n      })\n      \n      reportEvent('Evaluation Step', 'Step Normal Form Reached', ast.toString())\n\n      return\n    }\n  \n    ast = normal.perform()\n\n    if (ast instanceof Macro || ast instanceof ChurchNumeral) {\n      stepRecord.isNormalForm = true\n      stepRecord.message = 'Expression is in normal form.'\n\n      reportEvent('Evaluation Step', 'Step Normal Form Reached with Number or Macro', ast.toString())\n    }\n  \n    setBoxState({\n      ...state,\n      history : [ ...history, { ast, lastReduction, step : step + 1, message : '', isNormalForm : false } ],\n\n    })\n\n    reportEvent('Evaluation Step', 'Step', ast.toString())\n  }\n\n  onExecute () : void {\n    const { state, setBoxState } = this.props\n    const { isRunning, isExercise } = state\n\n    if (isExercise) {\n      // TODO: exercises can not be run - some message to user???\n      return\n    }\n\n    if (isRunning) {\n      this.onStop()\n    }\n    else {\n      const { timeout, history } = state\n      const stepRecord = history[history.length - 1]\n  \n      if (stepRecord.isNormalForm) {\n        return\n      }\n      \n      const { ast, step, lastReduction, isNormalForm, message } = stepRecord\n      history.push(history[history.length - 1])\n      history[history.length - 2] = { ast : ast.clone(), step, lastReduction, message : 'Skipping some steps...', isNormalForm }\n\n      setBoxState({\n        ...state,\n        isRunning : true,\n        timeoutID : window.setTimeout(this.onRun, timeout),\n      })\n\n      reportEvent('Execution', 'Run Evaluation', ast.toString())\n    }\n  }\n\n  onRun () : void {\n    const { state, setBoxState } = this.props\n    const { strategy } = state\n    let { history, isRunning, breakpoints, timeoutID, timeout } = state\n    const stepRecord : StepRecord = history[history.length - 1]\n    const { isNormalForm, step } = stepRecord\n    let { lastReduction } = stepRecord\n\n    if ( ! isRunning) {\n      return\n    }\n    \n    if (isNormalForm) {\n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    let { ast } = stepRecord\n    const normal : Evaluator = new (strategyToEvaluator(strategy) as any)(ast)\n    lastReduction = normal.nextReduction\n    \n    if (normal.nextReduction instanceof None) {\n      // TODO: consider immutability\n      history.pop()\n      history.push({\n        ast,\n        lastReduction : stepRecord.lastReduction,\n        step,\n        message : 'Expression is in normal form.',\n        isNormalForm : true\n      })\n  \n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID : undefined,\n      })\n  \n      return\n    }\n  \n    // TODO: maybe refactor a little\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint) =>\n        this.shouldBreak(breakpoint, normal.nextReduction)\n    )\n\n    if (breakpoint !== undefined) {\n      // TODO: consider immutability\n      if (normal.nextReduction instanceof Expansion) {\n        breakpoint.broken.add(normal.nextReduction.target)\n      }\n      if (normal.nextReduction instanceof Beta && normal.nextReduction.redex.left instanceof Lambda) {\n        breakpoint.broken.add(normal.nextReduction.redex.left.argument)\n      }\n\n      window.clearTimeout(timeoutID)\n      reportEvent('Evaluation Run Ended', 'Breakpoint was reached', ast.toString())\n\n\n      setBoxState({\n        ...state,\n        isRunning : false,\n        timeoutID,\n      })\n\n      return\n    }\n  \n    ast = normal.perform()\n\n    history[history.length - 1] = { ast, lastReduction, step : step + 1, message : '', isNormalForm }\n\n    if (ast instanceof Macro || ast instanceof ChurchNumeral) {\n      history[history.length - 1] = { ast, lastReduction, step : step + 1, message : 'Expression is in normal form.', isNormalForm : true }\n\n      reportEvent('Evaluation Run Ended', 'Step Normal Form Reached with Number or Macro', ast.toString())\n    }\n    \n    setBoxState({\n      ...state,\n      timeoutID : window.setTimeout(this.onRun, timeout)\n    })\n  }\n\n  onStop () : void {\n    const { state, setBoxState } = this.props\n    const { timeoutID } = state\n  \n    window.clearTimeout(timeoutID)\n  \n    setBoxState({\n      ...state,\n      isRunning : false,\n      timeoutID : undefined\n    })\n  }\n\n  // TODO: breakpointy se pak jeste musi predelat\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    // if (reduction instanceof (breakpoint.type as any)\n    //     && reduction instanceof Beta && breakpoint.context instanceof Lambda\n    //     && reduction.target.identifier === breakpoint.context.body.identifier\n    //   ) {\n    //     return true\n    // }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Variable\n        && reduction.redex.left instanceof Lambda\n        && reduction.redex.left.argument.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.redex.left.argument)\n    ) {\n      return true\n    }\n\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof ChurchNumeral\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Expansion && breakpoint.context instanceof Macro\n        && reduction.target.identifier === breakpoint.context.identifier\n        && ! breakpoint.broken.has(reduction.target)\n    ) {\n      return true\n    }\n  \n    return false\n  }\n\n  // THROWS Exceptions\n  parseExpression (expression : string) : AST {\n    const { macroTable } = this.props\n\n    const { singleLetterNames : singleLetterVars } = this.props.state\n\n    const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n    const ast : AST = parse(tokens, macroTable)\n\n    return ast\n  }\n}","import React, { useContext } from 'react'\n\nimport { trimStr } from '../misc'\nimport Editor from './Editor'\nimport { tokenize, parse, AST, Token, Variable, builtinMacros } from '@lambdulus/core'\nimport { DefineMacroContext } from './MethodInjector'\nimport { MacroDefinitionState, BoxState } from '../AppTypes'\nimport { DeleteBox } from './BoxSpace'\n\n\nexport interface MacroDefinitionProperties {\n  state : MacroDefinitionState\n  setBoxState (boxState : BoxState) : void\n  // addBox (boxState : BoxState) : void\n}\n\nexport default function MacroDefinition (props : MacroDefinitionProperties) : JSX.Element {\n  const { state, setBoxState } = props\n  const { macroName, macroExpression, singleLetterNames } = state\n  const { editor : { content, caretPosition, placeholder, syntaxError } } = state\n\n  const deleteBox = useContext(DeleteBox)\n\n  const onContent = (content : string, caretPosition : number) => {\n    setBoxState({\n      ...props.state,\n      editor : {\n        ...props.state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n  }\n\n  const defineMacro = useContext(DefineMacroContext)\n\n  const onSubmit = () => {\n    const [ macroName, macroExpression ] : Array<string> = content.split(':=').map(trimStr)\n\n    // TODO: refactor later - this is just dirty little quick fix\n    if ( ! isMacroUnambigous(macroName)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : new Error(`Macro name is not valid. It redefines built-in Macro.`),\n        }\n      })\n\n      return\n    }\n\n    if ( ! isValidName(macroName, false)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError :\n          // TODO: please fix this - only dirty quick impl\n            new Error(`Macro name is not valid.`),\n        }\n      })\n\n      return\n    }\n\n    if ( ! isValidExpression(macroExpression, singleLetterNames)) {\n      setBoxState({\n        ...state,\n        editor : {\n          ...state.editor,\n          syntaxError : new Error(`Macro expression is not valid.`)\n        }\n      })\n\n      return\n    }\n\n    // TODO: hotfix\n    // I want Macros submited in SLI mode to have SLI parsed bodies\n    const macroBody : string = parseExpression(macroExpression, singleLetterNames).toString()\n\n    setBoxState({\n      ...state,\n      macroName,\n      macroExpression : macroBody,\n    })\n\n    defineMacro(macroName, macroBody)\n  \n    // const newMacroTable : MacroMap = {\n    //   ...macroTable,\n    //   [macroName] : macroExpression\n    // }\n    // this.updateMacros(newMacroTable)\n  }\n\n  // TODO: implement same as Evaluator - editor and stuff\n  if (macroName === '' && macroExpression === '') {\n    return (\n      <div className='box boxMacro inactiveBox'>\n          <p className='emptyStep'>Empty macro box.</p>\n          <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n          <Editor\n            placeholder={ placeholder } // data\n            content={ content } // data\n            caretPosition={ caretPosition } // data\n            syntaxError={ syntaxError } // data\n            isMarkDown={ false } // data\n\n            onContent={ onContent } // fn\n            onEnter={ onSubmit } // fn // tohle asi bude potreba\n            onExecute={ () => {} } // fn // TODO: tohle Macro nepotrebuje\n          />\n          </div>\n    )\n  }\n\n  return (\n    <div className='box boxMacro'>\n      { macroName } := { macroExpression }\n      <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n    </div>\n  )\n}\n\n// TODO: in the future there should be more then boolean to indicate validity\nfunction isValidName (name : string, singleLetterNames : boolean) : boolean {\n  try {\n    const root : AST = parseExpression(name, singleLetterNames)\n\n    return root instanceof Variable\n  }\n  catch (exception) {\n    return false\n  }\n}\n\n// THROWS Exceptions\nfunction parseExpression (expression : string, singleLetterNames : boolean) : AST {\n  const macroTable = {}\n  const singleLetterVars : boolean = singleLetterNames\n\n  const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars })\n  const ast : AST = parse(tokens, macroTable)\n\n  return ast\n}\n\nfunction isMacroUnambigous (name : string) : boolean {\n  return ! (name in builtinMacros)\n}\n\nfunction isValidExpression (expression : string, singleLetterNames : boolean) : boolean {\n  try {\n    parseExpression(expression, singleLetterNames)\n\n    return true\n  }\n  catch (exception) {\n    console.log(exception)\n    return false\n  }\n}","import React, { useContext } from 'react'\nconst ReactMarkdown = require('react-markdown')\nimport 'github-markdown-css'\n\nimport Editor from './Editor'\nimport { MakeActiveContext, SetBoxContext, DeleteBox } from './BoxSpace'\nimport { NoteState } from '../AppTypes'\n\n\nexport interface NoteProperties {\n  state : NoteState\n  isActive : boolean\n\n  // addBox (boxState : BoxState) : void\n}\n\nexport default function Note (props : NoteProperties) : JSX.Element {\n  const {\n    state : {\n      note,\n      editor : { placeholder, content, caretPosition, syntaxError },\n      isEditing,\n    },\n    isActive,\n  } = props\n  \n  const makeActive = useContext(MakeActiveContext)\n  const setBoxState = useContext(SetBoxContext)\n  const deleteBox = useContext(DeleteBox)\n\n  const onContent = (content : string, caretPosition : number) => {\n    setBoxState({\n      ...props.state,\n      editor : {\n        ...props.state.editor,\n        content,\n        caretPosition,\n        syntaxError : null,\n      }\n    })\n    // this.updateURL(expression) // tohle musim nejak vyresit - mozna ta metoda setBoxState v APP bude checkovat propisovat do URL\n  }\n\n  const onSubmitNote = () => {\n    setBoxState({\n      ...props.state,\n      note : content,\n      isEditing : false,\n    })\n  }\n\n\n  if (isEditing && isActive) {\n    return (\n      <div className='box boxNoteEditor'>\n        {\n          note === '' ? \n            <p className='emptyStep'>Empty note box.</p>\n          :\n            null\n        }    \n        <div id=\"controls\">\n          <button onClick={ () => onSubmitNote() }>\n            Save\n          </button>\n        </div>\n        <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n        <Editor\n          placeholder={ placeholder } // data\n          content={ content } // data\n          caretPosition={ caretPosition } // data\n          syntaxError={ syntaxError } // data\n          isMarkDown={ true } // data\n          \n          onContent={ onContent } // fn\n          onEnter={ onSubmitNote } // fn\n          onExecute={ () => {} } // fn\n          // onReset={ this.onClear } // fn not yet\n        />\n      </div>\n    )\n  }\n\n\n  return (\n    <div className='box boxNote'>\n        <div id=\"controls\">\n          <button onClick={ () => {\n            setBoxState({\n              ...props.state,\n              isEditing : true,\n            })\n            makeActive()            \n          }\n          }\n            \n          >\n            Edit\n          </button>\n        </div>\n        <i className='removeBox far fa-trash-alt' onClick={ deleteBox } title='Remove this Box' />\n      <ReactMarkdown className='markdown-body' source={ note } />\n    </div>\n  )\n}","import React, { useContext } from 'react'\n\nimport Evaluator from './ExpressionBox'\nimport MacroDefinition from './MacroDefinition'\nimport Note from './Note'\nimport { MacroTableContext } from './EvaluatorSpace'\nimport { SetBoxContext } from './BoxSpace'\nimport { BoxState, BoxType, EvaluationState, MacroDefinitionState, NoteState } from '../AppTypes'\n\n\ninterface BoxProperties {\n  state : BoxState\n  isActive : boolean\n\n  // removeExpression () : void // not yet\n}\n\nexport default function Box (props : BoxProperties) : JSX.Element {\n  const { state, isActive } : BoxProperties = props\n  const { type } = state\n\n  const macroTable = useContext(MacroTableContext)\n  const setBoxState = useContext(SetBoxContext)\n\n\n  if (type === BoxType.EXPRESSION) {\n    return (\n      <div className=''>\n        <Evaluator\n          state={ state as EvaluationState }\n          isActive={ isActive }\n          macroTable={ macroTable }\n          \n          setBoxState={ setBoxState }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.MACRO) {\n    return (\n      <div className=''>\n        <MacroDefinition\n          state={ state as MacroDefinitionState }\n          setBoxState={ setBoxState }\n\n          // addBox={ addBox }\n        />\n      </div>\n    )\n  }\n\n  if (type === BoxType.NOTE) {\n    return (\n      <div className=''>\n        <Note\n          state={ state as NoteState }\n          isActive={ isActive }\n\n          // addBox={ addBox }\n        />\n      </div>\n    )\n  }\n\n  return null as any // never happens\n}","import React, { useContext } from 'react'\n\nimport { createEmptyExp, createEmptyMacro, createEmptyNote } from './BoxSpace'\nimport { EvaluationStrategy } from '../AppTypes'\nimport { AddEmptyBoxContext } from './MethodInjector'\nimport { StrategyContext, SLIContext } from './DataInjector'\n\n\nexport function CreateBox () : JSX.Element {\n  const strategy : EvaluationStrategy = useContext(StrategyContext)\n  const singleLetterNames : boolean = useContext(SLIContext)\n  const addEmptyBox = useContext(AddEmptyBoxContext)\n\n  return (\n    <div className='emptyC'>\n      <p\n        className='plusBtn inlineblock'\n        title='Create new λ expression'\n        onClick={ () => addEmptyBox(createEmptyExp(strategy, singleLetterNames)) }\n      >\n        <i>+ λ</i>\n      </p>\n      <p\n        className='plusBtn inlineblock'\n        title='Define new macro'\n        onClick={ () => addEmptyBox(createEmptyMacro(singleLetterNames)) }\n      >\n        <i>+ Macro\n        </i></p>\n      <p\n        className='plusBtn inlineblock'\n        title='Write new Markdown note'\n        onClick={ () => addEmptyBox(createEmptyNote()) }\n      >\n        <i>+ MD</i>\n      </p>\n    </div>\n  )\n}","import React, { useContext, createContext } from 'react'\n\nimport Box from './Box'\n\nimport { CreateBox } from './CreateBox'\nimport { PromptPlaceholder, EvaluationStrategy, BoxState, BoxType, EvaluationState, MacroDefinitionState, NoteState } from '../AppTypes'\nimport { ChangeActiveBoxContext, SetBoxStateContext, RemoveBoxContext } from './MethodInjector'\n\n\nexport interface BoxSpaceProperties {\n  submittedBoxes : Array<BoxState>\n  activeBoxIndex : number\n  \n  // removeExpression (index : number) : void // not yet\n}\n\nexport const MakeActiveContext = createContext(() => {})\nexport const SetBoxContext = createContext((boxState : BoxState) => {})\nexport const DeleteBox = createContext(() => {})\n\nexport default function BoxSpace (props: BoxSpaceProperties) : JSX.Element {\n  const {\n    submittedBoxes,\n    activeBoxIndex,\n  } = props\n  const makeActive = useContext(ChangeActiveBoxContext)\n  const setBoxState = useContext(SetBoxStateContext)\n  const removeBox = useContext(RemoveBoxContext)\n\n  if (submittedBoxes.length === 0) {\n    return (\n      <div className='evaluatorSpace'>\n        <div className='bigEmpty'>\n          { <CreateBox /> }\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='evaluatorSpace'>\n      <ul className='evaluatorList UL'>\n        { submittedBoxes.map((boxState : BoxState, i : number) =>\n          <li className='LI' key={ boxState.__key }>\n            <MakeActiveContext.Provider value={ () => makeActive(i) }>\n              <SetBoxContext.Provider value={ (boxState : BoxState) => setBoxState(i, boxState) }>\n                <DeleteBox.Provider value={ () => removeBox(i) }>\n                  <Box\n                    state={ boxState }\n                    isActive={ i === activeBoxIndex }\n                    \n                    // removeExpression={ () => removeExpression(i) }\n                  />\n                </DeleteBox.Provider>\n              </SetBoxContext.Provider>\n            </MakeActiveContext.Provider>\n          </li>\n          ) }\n          <div className='smallEmpty'>\n          { <CreateBox /> }\n          </div>\n      </ul>\n    </div>\n  )\n}\n\nexport function createEmptyExp (strategy : EvaluationStrategy, singleLetterNames : boolean) : EvaluationState {\n  return {\n    type : BoxType.EXPRESSION,\n    __key : Date.now().toString(),\n    expression : '',\n    ast : null,\n    history : [],\n    isRunning : false,\n    breakpoints : [],\n    timeoutID : undefined,\n    timeout : 10,\n    isExercise : false,\n    strategy,\n    singleLetterNames,\n    standalones : false,\n    editor : {\n      placeholder : PromptPlaceholder.INIT,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null,\n    }\n  }\n}\n\nexport function createEmptyMacro (singleLetterNames : boolean) : MacroDefinitionState {\n  return {\n    type : BoxType.MACRO,\n    __key : Date.now().toString(),\n    macroName : '',\n    macroExpression : '',\n    singleLetterNames,\n    editor : {\n      placeholder : PromptPlaceholder.MACRO,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null\n    }\n  }\n}\n\nexport function createEmptyNote () : NoteState {\n  return {\n    type : BoxType.NOTE,\n    __key : Date.now().toString(),\n    note : '',\n    isEditing : true,\n    editor : {\n      placeholder : PromptPlaceholder.NOTE,\n      content : '',\n      caretPosition : 0,\n      syntaxError : null,\n    }\n  }\n}","import React, { createContext, useContext } from 'react'\n\nimport BoxSpace from './BoxSpace'\nimport { HANDY_MACROS, getSavedMacros } from '../misc'\nimport { AppState } from '../AppTypes'\nimport { StateContext } from './DataInjector'\n\n\nexport const MacroTableContext = createContext({ ...HANDY_MACROS, ...getSavedMacros() })\n\nexport function EvaluatorSpace (props : {}) : JSX.Element {\n  const state : AppState = useContext(StateContext)\n  const {\n    macroTable,\n    submittedBoxes,\n    activeBoxIndex,\n  } : AppState = state\n\n\n  return (\n    <MacroTableContext.Provider value={ macroTable }>\n      <BoxSpace\n        submittedBoxes={ submittedBoxes } // 1 LEVEL\n        activeBoxIndex={ activeBoxIndex } // 1 LEVEL\n\n        // removeExpression={ this.onRemoveExpression } // to bude asi potreba az zbytek bude hotovej \n        // onEnter={ this.onEnter } // ten se presune dolu do Boxu\n        // onEditNote={ this.onEditNote } // zmeni se na onChangeActiveBox a isEditing se udela v Boxu\n      />\n    </MacroTableContext.Provider>\n  )\n}","import React, { Component } from 'react'\n\nimport './App.css'\n\nimport MenuBar from './components/MenuBar'\nimport MacroSpace from './components/MacroSpace'\nimport Settings from './components/Settings'\nimport { EvaluatorSpace } from './components/EvaluatorSpace'\nimport { MethodInjector } from './components/MethodInjector'\nimport { DataInjector } from './components/DataInjector'\nimport { DEFAULT_STATE, AppState, Screen, PromptPlaceholder, EvaluationStrategy, BoxState, BoxType, EvaluationState, MacroDefinitionState } from './AppTypes'\nimport { updateMacros } from './misc'\n\n\nexport default class App extends Component<{}, AppState> {\n  constructor (props : object) {\n    super(props)\n\n    this.setBoxState = this.setBoxState.bind(this)\n    this.addEmptyBox = this.addEmptyBox.bind(this)\n    this.changeActiveBox = this.changeActiveBox.bind(this)\n    this.changeActiveStrategy = this.changeActiveStrategy.bind(this)\n    this.changeActiveSingleLetterNames = this.changeActiveSingleLetterNames.bind(this)\n    this.getActiveStrategy = this.getActiveStrategy.bind(this)\n    this.getActiveSingleLetterNames = this.getActiveSingleLetterNames.bind(this)\n    this.addBox = this.addBox.bind(this)\n    this.removeMacro = this.removeMacro.bind(this)\n    this.defineMacro = this.defineMacro.bind(this)\n    this.createBoxFromURL = this.createBoxFromURL.bind(this)\n    this.removeBox = this.removeBox.bind(this)\n    this.getActiveStandalones = this.getActiveStandalones.bind(this)\n    this.changeActiveStandalones = this.changeActiveStandalones.bind(this)\n\n    this.state = DEFAULT_STATE\n\n    window.addEventListener('hashchange', this.createBoxFromURL)\n  }\n\n  componentDidMount () : void {\n    this.createBoxFromURL()\n  }\n\n  render () : JSX.Element {\n    const {\n      macroTable,\n      screen,\n    } : AppState = this.state\n\n    return (\n      <div className='app'>\n        <MenuBar\n          state={ this.state }\n          onImport={ (state : AppState) => this.setState(state) }\n          onScreenChange={(screen : Screen) => // mozna tohle zmenit nejakym patternem\n            this.setState({\n              ...this.state,\n              screen,\n            })\n          }\n         />\n\n        <Settings\n          getActiveSingleLetterNames={ this.getActiveSingleLetterNames }\n          getActiveStrategy={ this.getActiveStrategy }\n          changeActiveSingleLetterNames={ this.changeActiveSingleLetterNames }\n          changeActiveStrategy={ this.changeActiveStrategy }\n          getActiveStandalones={ this.getActiveStandalones }\n          changeActiveStandalones={ this.changeActiveStandalones }\n        />\n\n        {\n          screen === Screen.main ?\n          <DataInjector\n            SLI={ this.getActiveSingleLetterNames() }\n            strategy={ this.getActiveStrategy() }\n            state={ this.state }\n          >\n            <MethodInjector\n              addBox={ this.addBox }\n              removeBox={ this.removeBox }\n              addEmptyBox={ this.addEmptyBox }\n              changeActiveBox={ this.changeActiveBox }\n              defineMacro={ this.defineMacro }\n              setBoxState={ this.setBoxState }\n            >\n              <EvaluatorSpace />\n            </MethodInjector>\n          </DataInjector>\n          :\n          <MacroSpace macroTable={ macroTable } removeMacro={ this.removeMacro } />\n        }\n      </div>\n    )\n  }\n\n  createBoxFromURL () {\n    const hash : string = decodeURI(window.location.hash.substring(1))\n    const isExercise : boolean = hash.indexOf('exercise:') !== -1\n\n    const expression : string = isExercise ? hash.substring(9) : hash\n\n    if (expression === '') {\n      // return\n    }\n\n    const box : BoxState = {\n      type : BoxType.EXPRESSION,\n      __key : Date.now().toString(),\n      expression : '',\n      ast : null,\n      history : [],\n      isRunning : false,\n      breakpoints : [],\n      timeoutID : undefined,\n      timeout : 10,\n      isExercise : isExercise,\n      strategy : this.getActiveStrategy(),\n      singleLetterNames : this.getActiveSingleLetterNames(),\n      standalones : this.getActiveStandalones(),\n      editor : {\n        placeholder : PromptPlaceholder.INIT,\n        content : expression,\n        caretPosition : expression.length,\n        syntaxError : null,\n      }\n    }\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ box ],\n      activeBoxIndex : 0,\n    })\n  }\n\n  setBoxState (index : number, boxState : BoxState) : void {\n    const { submittedBoxes } = this.state\n    \n    const expression : string = boxState.type === BoxType.EXPRESSION ? boxState.editor.content || (boxState as EvaluationState).expression : '' // TODO: DIRTY DIRTY BIG TIME\n    const expPrefix : string = boxState.type === BoxType.EXPRESSION && (boxState as EvaluationState).isExercise ? 'exercise:' : '' \n    \n    history.pushState({}, \"page title?\", \"#\" + expPrefix + encodeURI(expression))\n\n    // TODO: doresit update URL // ted uz to docela dobry je\n\n    // TODO: consider immutability\n    submittedBoxes[index] = boxState\n\n    this.setState({\n      ...this.state,\n      submittedBoxes,\n    })\n\n  }\n\n  addEmptyBox (boxState : BoxState) : void {\n    const { submittedBoxes } = this.state\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ ...submittedBoxes, boxState ],\n      activeBoxIndex : Math.max(0, submittedBoxes.length),\n    })\n  }\n\n  addBox (boxState : BoxState) : void {\n    const { submittedBoxes } = this.state\n\n    this.setState({\n      ...this.state,\n      submittedBoxes : [ ...submittedBoxes, boxState ],\n      activeBoxIndex : submittedBoxes.length\n    })\n  }\n\n  removeBox (index : number) : void {\n    let { submittedBoxes, activeBoxIndex } = this.state\n\n    submittedBoxes.splice(index, 1)\n\n    activeBoxIndex = activeBoxIndex >= index ? activeBoxIndex - 1 : activeBoxIndex\n\n    if (activeBoxIndex === -1) {\n      history.pushState({}, \"page title?\", \"#\")\n    }\n    else {\n      this.changeActiveBox(activeBoxIndex)      \n    }\n    \n    this.setState({\n      ...this.state,\n      submittedBoxes,\n      activeBoxIndex\n    })\n  }\n\n  changeActiveBox (activeBoxIndex : number) : void {\n    const { submittedBoxes } = this.state\n    \n    const boxState : BoxState = submittedBoxes[activeBoxIndex]\n      \n    const expression : string = boxState.editor.content || (boxState as EvaluationState).expression // TODO: DIRTY DIRTY BIG TIME\n    const expPrefix : string = boxState.type === BoxType.EXPRESSION && (boxState as EvaluationState).isExercise ? 'exercise:' : '' \n  \n    history.pushState({}, \"page title?\", \"#\" + expPrefix + encodeURI(expression))\n\n    this.setState({\n      ...this.state,\n      activeBoxIndex,\n    })\n  }\n\n  getActiveStrategy () : EvaluationStrategy {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    if (activeBoxIndex === -1) {\n      return JSON.parse(window.localStorage.getItem('strategy') || JSON.stringify(EvaluationStrategy.ABSTRACTION)) as EvaluationStrategy\n    }\n\n    const activeBoxState : BoxState = submittedBoxes[activeBoxIndex]\n\n    if (activeBoxState.type !== BoxType.EXPRESSION) {\n      return JSON.parse(window.localStorage.getItem('strategy') || JSON.stringify(EvaluationStrategy.ABSTRACTION)) as EvaluationStrategy\n    }\n\n    return (activeBoxState as EvaluationState).strategy\n  }\n\n  getActiveSingleLetterNames () : boolean {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    if (activeBoxIndex === -1) {\n      return JSON.parse(window.localStorage.getItem('SLI') || 'true')\n    }\n\n    const activeBoxState : BoxState = submittedBoxes[activeBoxIndex]\n\n    if (activeBoxState.type === BoxType.NOTE) {\n      return JSON.parse(window.localStorage.getItem('SLI') || 'true')\n    }\n\n    if (activeBoxState.type === BoxType.EXPRESSION) {\n      return (activeBoxState as EvaluationState).singleLetterNames\n    }\n\n    if (activeBoxState.type === BoxType.MACRO) {\n      return (activeBoxState as MacroDefinitionState).singleLetterNames\n    }\n\n    return JSON.parse(window.localStorage.getItem('SLI') || 'true') // to nikdy nenastane doufam\n  }\n\n  getActiveStandalones () : boolean {\n    const { submittedBoxes, activeBoxIndex } = this.state\n\n    if (activeBoxIndex === -1) {\n      return JSON.parse(window.localStorage.getItem('standalones') || 'false')\n    }\n\n    const activeBoxState : BoxState = submittedBoxes[activeBoxIndex]\n\n    if (activeBoxState.type === BoxType.NOTE) {\n      return JSON.parse(window.localStorage.getItem('standalones') || 'false')\n    }\n\n    if (activeBoxState.type === BoxType.EXPRESSION) {\n      return (activeBoxState as EvaluationState).standalones\n    }\n\n    if (activeBoxState.type === BoxType.MACRO) {\n      return false\n    }\n\n    return JSON.parse(window.localStorage.getItem('standalones') || 'false') // to nikdy nenastane doufam\n  }\n\n  changeActiveStrategy (strategy : EvaluationStrategy) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n    // TODO: consider immutability\n    submittedBoxes[activeBoxIndex] = {\n      ...submittedBoxes[activeBoxIndex],\n      strategy,\n    }\n    \n    this.setState({\n      ...this.state,\n    })\n\n    window.localStorage.setItem('strategy', JSON.stringify(strategy))\n  }\n\n  changeActiveSingleLetterNames (enabled : boolean) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n    // TODO: consider immutability\n    submittedBoxes[activeBoxIndex] = {\n      ...submittedBoxes[activeBoxIndex],\n      singleLetterNames : enabled,\n    }\n\n    this.setState({\n      ...this.state\n    })\n\n    window.localStorage.setItem('SLI', JSON.stringify(enabled))\n  }\n\n  changeActiveStandalones (enabled : boolean) : void {\n    const { submittedBoxes, activeBoxIndex } = this.state\n    // TODO: consider immutability\n    submittedBoxes[activeBoxIndex] = {\n      ...submittedBoxes[activeBoxIndex],\n      standalones : enabled,\n    }\n\n    this.setState({\n      ...this.state\n    })\n\n    window.localStorage.setItem('standalones', JSON.stringify(enabled))\n  }\n\n  removeMacro (name : string) : void {\n    const { macroTable } = this.state\n    \n    const newMacroTable = { ...macroTable }\n    delete newMacroTable[name]\n\n    this.setState({\n      ...this.state,\n      macroTable : newMacroTable\n    })\n\n    updateMacros(newMacroTable)\n  }\n\n  defineMacro (name : string, definition : string) : void {\n    const { macroTable } = this.state\n\n    this.setState({\n      ...this.state,\n      macroTable : { ...macroTable, [name] : definition }\n    })\n\n    updateMacros({ ...macroTable, [name] : definition })\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}