{"version":3,"sources":["components/InputField.tsx","components/Controls.tsx","components/Result.tsx","expert/index.ts","helpers.ts","components/UserMacros.tsx","components/UserStep.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","width","fontSize","border","overflow","outline","resize","borderStyle","InputField","props","content","lines","onChange","caretPosition","react_default","a","createElement","value","placeholder","wrap","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","Math","max","ref","element","selectionStart","selectionEnd","buttonStyle","background","borderBottom","marginLeft","marginRight","cursor","Controlls","run","stop","step","clear","validate","canRun","stepIn","stepBack","canStepOver","running","canStepIn","canGoBack","onClick","disabled","ReactPrinter","tree","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rendered","visit","assertThisInitialized","lambda","body","Lambda","printLambdaBody","accumulator","args","className","argument","name","printLambdaArguments","application","right","Application","left","_this2","console","log","type","Beta","context","churchNumber","macro","variable","ASTVisitor","wordWrap","Result","addBreakpoint","printer","breakpoint","undefined","print","compareWhole","next","user","Macro","ChurchNumber","Variable","compareUntil","target","identifier","getEquivalent","redexSymbol","node","betaRedex","old","normal","NormalEvaluator","nextReduction","parent","treeSide","verify","predicate","correct","valid","errors","redex","userRedex","ApplicativeEvaluator","perform","reduceApplicative","norm","userNorm","userLeft","argName","Alpha","contradicts","answer","rule","trimStr","str","trim","TreeComparator","roots","translator","Map","equals","answers","_roots","_roots2","toArray","slice","compare","current","rules_list","fromEntries","toConsumableArray","rules","map","_ref2","infer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","predicates","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","find","_ref3","_ref4","concat","clone","_iterator2","err","return","entries","filter","_ref5","_ref6","slicedToArray","length","apply","createClass","key","_this$context","backup","set","get","listStyle","padding","macroStyle","display","textAlign","paddingLeft","paddingRight","margin","borderRadius","color","userMacroStyle","paddingTop","paddingBottom","inputStyle","UserMacros","bind","listMacros","onAdd","isValidExpression","state","invalidMacro","builtinsExpanded","macroError","title","_","setState","objectSpread","builtinMacros","_ref","macroName","definition","onSubmit","event","expression","replace","preventDefault","_this$state$value$spl","split","_this$state$value$spl2","error","addMacro","_this3","macros","removeMacro","tokens","tokenize","lambdaLetters","singleLetterVars","parse","exception","Component","UserStep","invalidExpr","onComparison","marginTop","resultStyle","sidebarStyle","position","top","backgroundColor","configWrapper","menuBtnStyle","itemStyle","marginBottom","App","parseExpression","onExpressionChange","autoSave","fn","treshold","timer","_len","arguments","Array","_key","window","clearTimeout","setTimeout","debounce","getExpressionFromURL","updateFromURL","getMacrosFromLocalStorage","__run","shouldBreak","addEventListener","ast","steps","previousReduction","autoCloseParenthesis","macroTable","menuOpen","steping","briefHistory","isValidating","breakpoints","controlProps","_this$state","checked","UserMacros_UserMacros","UserStep_UserStep","i","reduction","_this$state2","None","index","id","splice","_this4","_this$state3","unshift","min","userExpression","_this$state4","oldAst","userAst","treeComparator","charAt","encoded","encodeURI","location","hash","decodeURI","substring","userMacros","JSON","localStorage","getItem","fact","facct","fib","inflist","SHORTLIST","LONGLIST","LISTGREQ","LISTLESS","LISTGR","LISTEQ","CONNECT","QUICKSORT","currentExpr","defineProperty","setItem","stringify","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55c7768d.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react'\n\n\ninterface InputProps {\n  content : string,\n  lines : number,\n  caretPosition : number,\n  onChange (event : ChangeEvent<HTMLTextAreaElement>) : void,\n}\n\nconst style = {\n  width: '100%',\n  fontSize: '3em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default function InputField (props : InputProps) : JSX.Element {\n  const { content, lines, onChange, caretPosition } : InputProps = props\n\n    return (\n      <textarea\n        style={ style }\n        onChange={ onChange }\n        value={ content }\n        placeholder='(λ f . (λ x . f (x x)) (λ x . f (x x)))'\n        wrap='hard'\n        autoFocus\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck={ false }\n        rows={ Math.max(lines + 1, 2) }\n        ref={ (element : HTMLTextAreaElement) => {\n          if (element !== null) {\n            element.selectionStart = caretPosition\n            element.selectionEnd = caretPosition\n          }\n        } }\n      />\n    )\n}","import React, { FunctionComponent, } from 'react'\n\n\nexport interface ControlProps {\n  run () : void,\n  stop () : void,\n  step () : void,\n  clear () : void,\n  validate () : void,\n  stepIn () : void,\n  stepBack () : void,\n  canRun : boolean,\n  canStepOver : boolean,\n  canStepIn : boolean,\n  canGoBack : boolean,\n  running : boolean,\n}\n\nconst buttonStyle = {\n  fontSize: '1.5em',\n  background: 'none',\n  borderStyle: 'none',\n\tborderBottom: '2px solid navy',\n  marginLeft: '5px',\n  marginRight: '5px',  \n  cursor: 'pointer',\n  outline: 'none',\n}\n\nexport default function Controlls (props : ControlProps) : JSX.Element {\n  const {\n    run,\n    stop,\n    step,\n    clear,\n    validate,\n    stepIn,\n    stepBack,\n    canRun,\n    canStepOver,\n    canStepIn,\n    canGoBack,\n    running,\n  } : ControlProps = props\n  \n  return (\n    <div>\n      <button style={ buttonStyle } onClick={ () => (running ? stop : run)() } disabled={ ! canRun } >\n        { running ?  'STOP' : 'RUN' }\n      </button>\n      <button style={ buttonStyle } onClick={ step } disabled={ (! canStepOver) || running }>STEP</button>\n      <button style={ buttonStyle } onClick={ clear } disabled={ running }>CLEAR</button>\n      <button style={ buttonStyle } onClick={ validate } disabled={ false }>VALIDATE</button>\n\n      {/* <button style={ buttonStyle } onClick={ stepIn } disabled={ true }>STEP IN</button> */}\n      {/* <button style={ buttonStyle } onClick={ stepBack } disabled={ true }>GO BACK</button> */}\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport { AST, BasicPrinter, ASTVisitor, Macro, ChurchNumber, Variable, Lambda, Application, Beta } from 'lambdulus-core';\nimport { Breakpoint } from '../App';\n\n\nclass ReactPrinter extends ASTVisitor {\n  // private expression : string = ''\n  private rendered : JSX.Element | null = null\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaBody (lambda : Lambda) : void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaBody(lambda.body)\n    }\n    else {\n      lambda.body.visit(this)\n    }\n  }\n\n  // TODO: this looks like nonsense\n  // maybe solve it with another Visitor\n  private printLambdaArguments (lambda : Lambda, accumulator : JSX.Element) : void {\n    if (lambda.body instanceof Lambda) {\n      const args : JSX.Element = \n      <span className='arguments' >\n        { accumulator } { lambda.body.argument.name() }\n      </span>\n      \n      this.printLambdaArguments(lambda.body, args)\n    }\n    else {\n      this.rendered = accumulator\n    }\n  }\n\n  constructor (\n    public readonly tree : AST,\n    private readonly onClick : (breakpoint : Breakpoint) => void,\n  ) {\n    super()\n    this.tree.visit(this)\n  }\n\n  print () : JSX.Element | null {\n    return this.rendered\n  }\n\n  // TODO: this is ugly as hell\n  onApplication(application: Application): void {\n    if (application.right instanceof Application) {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='application' >\n        { left } ( { right } )\n      </span>\n    }\n    else {\n      application.left.visit(this)\n      const left : JSX.Element | null = this.rendered\n\n      application.right.visit(this)\n      const right : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='application' >\n        { left } { right }\n      </span>\n    }\n  }\n  \n  // TODO: this is ugly as hell\n  onLambda(lambda: Lambda): void {\n    if (lambda.body instanceof Lambda) {\n      this.printLambdaArguments(lambda, <span className='arguments' >{ lambda.argument.name() }</span>)\n      const args : JSX.Element | null = this.rendered\n\n      this.printLambdaBody(lambda)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='lambda' >\n        ( <span style={ { cursor: 'pointer' } } onClick={() => {\n          console.log(lambda)\n          this.onClick({ type: Beta, context: lambda })}\n         } >\n          λ\n        </span> { args } . { body } )\n      </span>\n    }\n    else {\n      lambda.argument.visit(this)\n      const args : JSX.Element | null = this.rendered\n\n      lambda.body.visit(this)\n      const body : JSX.Element | null = this.rendered\n\n      this.rendered =\n      <span className='lambda' >\n        (<span style={ { cursor: 'pointer' } } onClick={() => {\n          console.log(lambda)\n\n          this.onClick({ type: Beta, context: lambda })}\n         } >\n          λ\n        </span> { args } . { body } )\n      </span>\n    }\n  }\n  \n  onChurchNumber(churchNumber: ChurchNumber): void {\n    this.rendered = <span className='churchnumeral' >{ churchNumber.name() }</span>\n  }\n  \n  onMacro(macro: Macro): void {\n    this.rendered = <span className='macro' >{ macro.name() }</span>\n  }\n  \n  onVariable(variable: Variable): void {\n    this.rendered = <span className='variable' >{ variable.name() }</span>\n  }\n}\n\n\nconst style = {\n  fontSize: '2em',\n  wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n\n}\n\nexport default function Result (props : { tree : AST | null, addBreakpoint?(breakpoint : Breakpoint) : void }) : JSX.Element | null {\n  const { tree, addBreakpoint } = props\n\n  if (tree === null) {\n    return null\n  }\n\n  const printer : ReactPrinter = new ReactPrinter(tree, (breakpoint : Breakpoint) => {\n    if (addBreakpoint !== undefined) {\n      console.log('CLICKED')\n      addBreakpoint(breakpoint)\n    }\n  })\n\n  return (\n    <span style={ style } >\n      { printer.print() }\n    </span>\n  )\n}","import rules from './base.json'\nimport { AST, Lambda, Application, Macro, ChurchNumber, Variable, NormalEvaluator, Beta, Binary, ApplicativeEvaluator, Alpha } from 'lambdulus-core';\n\nexport interface Answer {\n  valid : boolean,\n  warnings ? : Array<string>,\n  errors ? : Array<string>,\n}\n\nfunction compareWhole (next : AST, user : AST) : boolean {\n  if (next instanceof Lambda && user instanceof Lambda\n      ||\n      next instanceof Application && user instanceof Application\n  ) {\n    const left : boolean = compareWhole(next.left, user.left)\n    if ( ! left) {\n      return left\n    }\n    else {\n      return compareWhole(next.right, user.right)\n    }\n  }\n  else if (next instanceof Macro && user instanceof Macro\n          ||\n          next instanceof ChurchNumber && user instanceof ChurchNumber\n          ||\n          next instanceof Variable && user instanceof Variable\n  ) {\n    if (next.name() !== user.name()) {\n      return false\n    }\n    return true\n  }\n\n  return false\n}\n\nfunction compareUntil (next : AST, user : AST, target : symbol) : boolean {\n  if (next instanceof Lambda && user instanceof Lambda\n      ||\n      next instanceof Application && user instanceof Application\n  ) {\n    if (next.identifier === target) {\n      return true\n    }\n    \n    const left : boolean = compareUntil\n  (next.left, user.left, target)\n    if ( ! left) {\n      return left\n    }\n    else {\n      return compareUntil\n    (next.right, user.right, target)\n    }\n  }\n  else if (next instanceof Macro && user instanceof Macro\n          ||\n          next instanceof ChurchNumber && user instanceof ChurchNumber\n          ||\n          next instanceof Variable && user instanceof Variable\n  ) {\n    if (next.identifier === target) {\n      return true\n    }\n\n    if (next.name() !== user.name()) {\n      return false\n    }\n    return true\n  }\n\n  return false\n}\n\nfunction getEquivalent (next : AST, user : AST, target : symbol) : AST| null {\n  if (next instanceof Lambda && user instanceof Lambda\n      ||\n      next instanceof Application && user instanceof Application\n  ) {\n    if (next.identifier === target) {\n      return user\n    }\n    \n    const left : boolean = compareUntil\n  (next.left, user.left, target)\n    if ( ! left) {\n      return null\n    }\n    else {\n      return getEquivalent(next.right, user.right, target)\n    }\n  }\n  else if (next instanceof Macro && user instanceof Macro\n          ||\n          next instanceof ChurchNumber && user instanceof ChurchNumber\n          ||\n          next instanceof Variable && user instanceof Variable\n  ) {\n    if (next.identifier === target) {\n      return user\n    }\n\n    if (next.name() !== user.name()) {\n      return null\n    }\n    return null\n  }\n\n  return null\n}\n\nfunction redexSymbol (node : AST) : symbol {\n  return node.identifier\n}\n\nfunction betaRedex (old : AST) : AST | null {\n  const normal : NormalEvaluator = new NormalEvaluator(old)\n\n  if (normal.nextReduction instanceof Beta\n    &&\n    normal.nextReduction.parent !== null\n    &&\n    normal.nextReduction.treeSide !== null) {\n    return normal.nextReduction.parent[normal.nextReduction.treeSide]\n  }\n\n  return null\n}\n\nfunction reduceApplicative (tree : AST) : AST {\n  const applicative : ApplicativeEvaluator = new ApplicativeEvaluator(tree)\n\n  return applicative.perform()\n}\n\nfunction verify (predicate : string, old : AST, correct : AST, user : AST) : Answer {\n  switch (predicate) {\n    case 'should-do-beta' : {\n      // console.log('BUBBLY')\n      const normal : NormalEvaluator = new NormalEvaluator(old)\n      \n      if (normal.nextReduction instanceof Beta) {\n        return { valid : true }\n      }\n\n      return { valid : false, errors : [ `Next reduction should not be Beta.`]}\n    }\n    case 'same-or-equivalent-until-beta-redex' : { // TODO: zatim jenom SAME\n      const redex : AST | null = betaRedex(old)\n      if (redex === null) {\n        // redex === null -> nejde o Beta redukci\n        return { valid : false, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const id : symbol = redexSymbol(redex)\n      if (compareUntil\n      (correct, user, id)) {\n        return { valid : true }\n      }\n\n      return { valid : false }\n    }\n    case 'beta-redex-left-side-same-or-equivalent' : {\n      const redex : AST | null = betaRedex(old)\n      if (redex === null) {\n        return { valid : true, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const userRedex : AST | null = getEquivalent(correct, user, redexSymbol(redex))\n\n      if (userRedex === null) {\n        return { valid : false, errors : [ `I cannot find user redex equivalent.` ]}\n      }\n\n      const leftSame : boolean = compareWhole(redex, userRedex)\n\n      if ( ! leftSame) {\n        return { valid : false, errors : [ `Left side of redex is not same.` ] }\n      }\n\n      return { valid : true }\n    }\n    case 'beta-redex-right-side-beta-reduced' : {\n      let redex : Binary | null = betaRedex(old) as Binary\n      if (redex === null) {\n        return { valid : false, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const userRedex : Binary | null = getEquivalent(correct, user, redexSymbol(redex)) as Binary\n\n      if (userRedex === null) {\n        return { valid : false, errors : [ `I cannot find user redex equivalent.` ]}\n      }\n\n      // reduce redex.right side\n      // user may be already reduced\n\n      const tree : AST = reduceApplicative((redex as Binary))\n\n      const rightSame : boolean = compareWhole(tree, userRedex)\n\n      if ( ! rightSame) {\n        return { valid : false, errors : [ `Right side of redex does not appear to be reduced correctly.` ] }\n      }\n\n      return { valid : true }\n    }\n    case 'argument-substituted-but-unremoved' : {\n      const norm : NormalEvaluator = new NormalEvaluator(old)\n      if (!(norm.nextReduction instanceof Beta)) {\n        return { valid : false, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n      \n      const userNorm : NormalEvaluator = new NormalEvaluator(user)\n      if (!(userNorm.nextReduction instanceof Beta)) {\n        return { valid : false, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const userLeft : AST = userNorm.perform()\n\n      if (norm.nextReduction.parent === null\n        || norm.nextReduction.treeSide === null) {\n        if (norm.nextReduction.argName === userNorm.nextReduction.argName\n          &&\n            compareWhole(norm.perform(), userLeft)\n          ) {\n            return { valid : true }\n          }\n        return { valid : false, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const next : AST = norm.perform()\n\n      if (norm.nextReduction.argName === userNorm.nextReduction.argName\n            &&\n          compareWhole(next, userLeft)\n        ) {\n          return { valid : true }\n        }\n\n\n\n      if ( ! compareWhole(norm.nextReduction.parent[norm.nextReduction.treeSide], userLeft)) {\n        return { valid : false, errors : [ `Does not appear to be case of unremoved but substituted arg.` ] }\n      }\n\n      return { valid : true }\n    }\n    case 'same-or-equivalent-from-beta-redex' : {\n      let redex : Binary | null = betaRedex(old) as Binary\n      if (redex === null) {\n        return { valid : true, errors : [ `I cannot find beta redex because next reduction is not beta` ] }\n      }\n\n      const userRedex : Binary | null = getEquivalent(correct, user, redexSymbol(redex)) as Binary\n\n      if (userRedex === null) {\n        return { valid : false, errors : [ `I cannot find user redex equivalent.` ]}\n      }\n\n      if ( ! compareWhole(redex.left, userRedex.left)) {\n        return { valid : false, errors : [ `Left child of beta redex is not same` ] }\n      }\n\n      if ( ! compareWhole(redex.right, userRedex.right)) {\n        return { valid : false, errors : [ `Right child of beta redex is not same` ] }\n      }\n\n      return { valid : true }\n    }\n    case 'beta-wrong-argument' : {\n      // TODO: zjistit jestli misto prvniho argumentu nedosazoval za jinej argument\n\n      return { valid : false }\n    }\n    case 'correct-double-step-alpha-beta' : {\n      let normal : NormalEvaluator = new NormalEvaluator(old)\n\n      if (! (normal.nextReduction instanceof Alpha)) {\n        return { valid : false, errors : [ `First step was not Alpha Conversion.` ]}\n      }\n\n      normal = new NormalEvaluator(correct)\n\n      if (! (normal.nextReduction instanceof Beta)) {\n        return { valid : false, errors : [ `Second step was not Beta Reduction.` ]}\n      }\n\n      const ref : AST = normal.perform()\n\n      if ( ! compareWhole(ref, user)) {\n        return { valid : false, errors : [ `User tree does not correspond to double step Alpha+Beta.` ] }\n      }\n\n      return { valid : true }\n    }\n    case 'incorrect-double-step-alpha-beta' : {\n      let normal : NormalEvaluator = new NormalEvaluator(old)\n\n      if (! (normal.nextReduction instanceof Alpha)) {\n        return { valid : false, errors : [ `First step was not Alpha Conversion.` ]}\n      }\n\n      normal = new NormalEvaluator(correct)\n\n      if (! (normal.nextReduction instanceof Beta)) {\n        return { valid : false, errors : [ `Second step was not Beta Reduction.` ]}\n      }\n\n      const ref : AST = normal.perform()\n\n      if ( ! compareWhole(ref, user)) {\n        return { valid : true }\n      }\n\n      return { valid : true, errors : [ `This is valid double step Alpha+Beta` ] }\n    }\n    case 'macro-expression-equivalent' : {\n      // TODO: tam kde se to lisi jen v makru\n      // expadovat to makro na strane moji nebo uzivatele\n      // porovnat pak\n\n      // nebo napsat porovnavaci funkci,\n      // ktera rovnou kdyz narazi na jedne strane na Macro a na druhe na cokoliv\n      // provede expanzi toho makra a porovna\n      // to bude jednodussi\n\n      return { valid : false }\n    }\n    case 'id-misstype' : {\n      // TODO: je chyba ve jmenu promenne, makra, cisla?\n      // je editacni vzdalenost rekneme do 2 znaku?\n      // pak je to preklep!\n\n      return { valid : false }\n    }\n    case 'should-do-alpha' : {\n      let normal : NormalEvaluator = new NormalEvaluator(old)\n\n      if (! (normal.nextReduction instanceof Alpha)) {\n        return { valid : false, errors : [ `First step was not Alpha Conversion.` ]}\n      }\n\n      return { valid : true }\n    }\n    case 'redex-left-side-beta-reduced' : {\n      // TODO: kdyz provedu beta redukci nad starym stromem\n      // bude to vypada jako uzivateluv strom?\n\n      return { valid : false }\n    }\n    default : {\n      console.log('I CANT FIGURE OUT THIS')\n      console.log(predicate)\n      return { valid : false, errors : [ `I can't figure out what exactly you did wrong` ] }\n    }\n  }\n}\n\nconst contradicts = (answer : any, rule : any) =>\n  (answer.valid === false && rule.type === 'con')\n\nexport function expert (old : AST, current : AST, user : AST) {\n  let rules_list = (Object as any).fromEntries([ ...rules ].map(({ name }) => [ name, [] ]))\n\n  const infer = (rules : Array<any>) => {\n    rules:\n    for (const rule of rules) {\n      const { name, predicates } = rule\n      // console.log('RULE :  ' + name)\n\n      predicates:\n      for (const predicate of predicates) {\n        // console.log('PREDICATE :  ' + predicate)\n        // TODO: nez se zeptam \"usera\" zjistim,\n        // jestli predikat neni jmeno nejakeho dalsiho pravidla\n        // pokud je to pravidlo, musim ho overit -> i rekurzivne\n        if (rules.find(({name}) => predicate === name) !== undefined\n        && !(predicate in rules_list)) {\n          delete rules_list[name]\n          continue rules\n        }\n\n        if (predicate in rules_list) {\n          infer([rules.find(({name}) => name === predicate )])\n\n          if (predicate in rules_list) {\n            // TODO if it is STILL in rules_list and was not removed\n            rules_list[name] = [ ...rules_list[name],  ...rules_list[predicate] ]\n            continue\n          }\n          if (contradicts({valid:false}, rule)) {\n            delete rules_list[name]\n            continue rules\n          }\n          continue\n        }\n\n\n        const answer = verify(predicate, old.clone(), current.clone(), user.clone())\n\n        if (name === \"argument-unremoved\") {\n          // console.log('================================')\n          // console.log(answer)\n          // console.log('================================')\n        }\n  \n        if (contradicts(answer, rule)) {\n          delete rules_list[name]\n          continue rules\n        }\n        // TODO: uncomment\n        if ( ! answer.valid) {\n          continue\n        }\n  \n        rules_list[name] = [ answer , ...rules_list[name] ]\n      }\n    }\n  }\n\n  infer(rules)\n\n  return (Object as any).fromEntries(Object.entries<Array<string>>(rules_list).filter(([key, value]) => value.length !== 0))\n}","import { ASTVisitor, AST, Application, Lambda, ChurchNumber, Macro, Variable } from \"lambdulus-core\"\nimport { Answer, expert } from \"./expert\";\n\n\nexport function debounce (fn : Function, treshold : number) {\n  let timer : number\n  \n  return function debounced (...args : Array<any>) {\n  \twindow.clearTimeout(timer)\n\n  \ttimer = window.setTimeout(() => {\n    \tfn(...args)\n    }, treshold)\n  }\n}\n\n// intentionaly not handling `this` - I don't want debounced callback to (ab)use `this`\n\nexport function trimStr (str : string) {\n  return str.trim()\n}\n\n///////////////////////////////////////////////////////////////////////////////////////\n\ntype Pair<T> = [T, T]\ntype Triple<T> = [T, T, T]\n\n\n// TODO: fix the public equals interface, maybe public get and private set?\n// maybe implement public get method and bool itself leave private?\n//\n// first I need more trees, I need the previous AST\nexport class TreeComparator {\n  private translator : Map<string, string> = new Map\n  public equals : boolean = true\n  private context : Pair<AST>\n  public answers : Array<Answer> = []\n\n  constructor (readonly roots : Triple<AST> ) {\n    let _\n    [ _, ...this.context ] = roots\n    // TODO: I need to compare roots themself\n    this.compare()\n\n    if ( ! this.equals) {\n      // console.log('________________________________________________')\n      // console.log('________________________________________________')\n      // console.log('________________________________________________')\n\n      // console.log(_)\n      // console.log('________________________________________________')\n      // console.log('________________________________________________')\n      // console.log('________________________________________________')\n\n      this.answers = expert(...roots)\n    }\n  }\n\n  compare () : void {\n    /**\n    TODO: compare need to compare both children if got\n    if one of them is incorrect\n    then solve that problem\n    if both of them is incorrect\n    then solve both problems and then decide how both come together\n\n    then I have an instance of knowledge system\n    I can fire up that system in this context (this node with invalid children)\n    system will need to get instance of something to call methods on\n    because system needs to ask questions - like, is this possible,\n    is this error applicable?\n    so instead of human, code will look up the AST and answer the questions\n    so it will be some kind of class which is able to observe all 3 ASTs at the same time\n    it will also have implemented query methods,\n    probably wont be many of them, just few\n    **/\n    \n    const [ left, right ] : Pair<AST> = this.context\n\n    if (left instanceof Lambda && right instanceof Lambda) {\n      const backup : Map<string, string> = new Map(this.translator.entries())\n\n      this.translator.set(left.argument.name(), right.argument.name())\n      this.context = [ left.right, right.right ]\n      this.compare()\n\n      this.translator = backup\n    }\n    else if (left instanceof Application && right instanceof Application) {\n      this.context = [ left.left, right.left ]\n      this.compare()\n\n      if ( ! this.equals) {\n        return\n      }\n\n      this.context = [ left.right, right.right ]\n      this.compare()\n    }\n    else if (left instanceof Macro && right instanceof Macro) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof ChurchNumber && right instanceof ChurchNumber) {\n      this.equals = left.name() === right.name()\n    }\n    else if (left instanceof Variable && right instanceof Variable) {\n      this.equals = this.translator.get(left.name()) === right.name()\n    }\n    else {\n      this.equals = false\n    }\n  }\n}","import React, { Component, ChangeEvent, SyntheticEvent } from 'react'\nimport { trimStr } from '../helpers'\nimport { MacroMap, builtinMacros, Token, tokenize, parse, AST } from 'lambdulus-core/'\n\ninterface Props {\n  disabled : boolean,\n  macros : MacroMap,\n  addMacro (name : string, definition : string) : void,\n  removeMacro (name : string) : void,\n}\n\ninterface State {\n  value : string,\n  invalidMacro : boolean,\n  builtinsExpanded : boolean,\n  macroError : null | string,\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst macroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '1px solid gray',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'gray',\n  cursor: 'pointer',\n}\n\nconst userMacroStyle = {\n  fontSize: '1.2em',\n  display: 'inline-block',\n  textAlign: 'center' as any,\n  paddingTop: '3px',\n  paddingBottom: '3px',\n  paddingLeft: '10px',\n  paddingRight: '10px',\n  border: '2px solid black',\n  listStyle: 'none',\n  margin: '10px',\n  borderRadius: '20px',\n  color: 'black',\n  cursor: 'pointer',\n}\n\nconst inputStyle = {\n  width: '100%',\n  fontSize: '2em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  borderBottom: 'none',\n  // wordBreak: 'break-all' as any,\n  // wordWrap: 'anywhere' as any,\n  // textWrap: 'unrestricted',\n}\n\nexport default class UserMacros extends Component<Props, State> {\n  constructor (props : Props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.listMacros = this.listMacros.bind(this)\n    this.onAdd = this.onAdd.bind(this)\n    this.isValidExpression = this.isValidExpression.bind(this)\n\n    this.state = {\n      value : '',\n      invalidMacro : false,\n      builtinsExpanded : true,\n      macroError : null,\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <span title='Click for toggle display'\n              style={ { fontSize: '1.3em', cursor: 'pointer', } }\n              onClick={_ => this.setState({\n                ...this.state,\n                builtinsExpanded : !this.state.builtinsExpanded,\n              })\n        } >\n          Built-in Macros:</span>\n          { <ul style={ listStyle }>\n          { this.state.builtinsExpanded\n              ?            \n            Object.entries(builtinMacros).map(([macroName, definition ]) => {\n              return <li title='Built-in Macro' style={ macroStyle } key={ macroName }>\n                { macroName }\n                { ' ' }\n                := { definition }\n              </li>\n            })\n              :\n              null\n          }\n          </ul> }\n        <span style={ { fontSize: '1.3em',  } } >User defined Macros:</span>\n        { this.listMacros() }\n        <br />\n        <form onSubmit={ this.onAdd } >\n          <input disabled={this.props.disabled} value={ this.state.value } onChange={ this.onChange }\n            placeholder='T := (λ t f . t)' style={ this.state.invalidMacro ? { ...inputStyle, borderBottom: '2px solid #EF3D59' } : inputStyle } autoFocus type='text'\n          />\n        </form>\n      </div>\n    )\n  }\n\n  onChange (event : ChangeEvent<HTMLInputElement>) : void {\n    let { target : { value : expression } } = event\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    this.setState({ ...this.state, value : expression, invalidMacro : false })\n  }\n\n  onAdd (event : SyntheticEvent) : void {\n    event.preventDefault()\n\n    const [ name, definition ] : Array<string> = this.state.value.split(':=').map(trimStr)\n\n    if (!definition\n        ||\n      ! this.isValidExpression(definition)\n        ||\n      name in builtinMacros) {\n      const macroError : string = (!definition) ? 'Empty definition.'\n        :\n        name in builtinMacros ? 'You can not redefine built-in macros.'\n          : 'Invalid macro.'\n\n      this.setState({ ...this.state, invalidMacro : true, macroError })\n      console.error(macroError)\n      return\n    }\n    \n    \n    this.props.addMacro(name, definition)\n    this.setState({ ...this.state, value : '' })\n  }\n\n  listMacros () : JSX.Element {\n    const { macros } = this.props\n    return (\n      <ul style={ listStyle }>\n        { Object.entries(macros).map(([ name, definition ]) => {\n          return (\n            <li key={ name }\n                title={ this.props.disabled ? 'You cannot remove Macro while evaluating' : 'Click to delete Macro' }\n                style={ userMacroStyle }\n                onClick={ () => ( ! this.props.disabled) && this.props.removeMacro(name) } >\n              { name } := { definition }\n            </li>\n          )\n        }) }\n      </ul>\n    )\n  }\n\n  isValidExpression (expression : string) : boolean {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars : false })\n      parse(tokens, this.props.macros)\n\n      return true\n    }\n    catch (exception) {\n      return false\n    }\n  }\n}","import React, { Component, ChangeEvent, SyntheticEvent } from 'react'\nimport { Token, tokenize, parse, } from 'lambdulus-core/'\n\ninterface Props {\n  onComparison (expression : string) : void,\n}\n\ninterface State {\n  value : string,\n  invalidExpr : boolean,\n}\n\nconst inputStyle = {\n  width: '100%',\n  fontSize: '2em',\n  border: 'none',\n  overflow: 'auto',\n  outline: 'none',\n  resize: 'none' as any,\n  borderStyle: 'none',\n  borderBottom: 'none',\n}\n\nexport default class UserStep extends Component<Props, State> {\n  constructor (props : Props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.compare = this.compare.bind(this)\n    this.isValidExpression = this.isValidExpression.bind(this)\n\n    this.state = {\n      value : '',\n      invalidExpr : false,\n    }\n  }\n\n  render () {\n    return (\n      <form onSubmit={ this.compare } >\n        <input value={ this.state.value } onChange={ this.onChange }\n          placeholder='(λ t f . t)' style={ this.state.invalidExpr ? { ...inputStyle, borderBottom: '2px solid #EF3D59' } : inputStyle } autoFocus type='text'\n        />\n      </form>\n    )\n  }\n\n  onChange (event : ChangeEvent<HTMLInputElement>) : void {\n    let { target : { value : expression } } = event\n    expression = expression.replace(/\\\\/g, 'λ')\n\n    this.setState({ ...this.state, value : expression, invalidExpr : false })\n  }\n\n  compare (event : SyntheticEvent) : void {\n    event.preventDefault()\n\n    const expression : string = this.state.value.trim()\n\n    if (!expression\n        ||\n        ! this.isValidExpression(expression)) {\n      this.setState({ ...this.state, invalidExpr : true })\n      return\n    }\n    \n    \n    this.props.onComparison(expression)\n    this.setState({ ...this.state, value : '' })\n  }\n\n  isValidExpression (expression : string) : boolean {\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ'], singleLetterVars : false })\n      parse(tokens, {})\n\n      return true\n    }\n    catch (exception) {\n      return false\n    }\n  }\n}","import React, { Component, ChangeEvent } from 'react';\nimport { AST, tokenize, parse, ASTReduction, Token, NormalEvaluator, None, builtinMacros, MacroTable, Application, Beta, Lambda } from 'lambdulus-core'\n\nimport InputField from './components/InputField'\nimport Controls, { ControlProps } from './components/Controls'\nimport Result from './components/Result'\nimport UserMacros from './components/UserMacros';\nimport { debounce, TreeComparator } from './helpers';\nimport { MacroMap } from 'lambdulus-core/';\nimport UserStep from './components/UserStep';\n\n\nexport type Breakpoint = {\n  type : ASTReduction,\n  context : AST,\n}\n\ninterface state {\n  expression : string,\n  lines : number,\n  caretPosition : number,\n  ast : AST | null,\n  steps : number,\n  previousReduction : ASTReduction | null,\n  autoCloseParenthesis : boolean,\n  macroTable : MacroMap,\n  menuOpen: boolean,\n  steping : boolean,\n  briefHistory : Array<AST>,\n  isValidating : boolean,\n  running : boolean,\n  singleLetterVars : boolean,\n  breakpoints : Array<Breakpoint>,\n}\n\nconst inputStyle = {\n  margin: 'auto',\n  marginTop: '5vh',\n  width: '80%',\n  borderBottom: '2px solid gray',\n  padding: '10px',\n}\n\nconst resultStyle = {\n  margin: 'auto',\n  width: '80%',\n  marginTop: '2vh'\n}\n\nconst sidebarStyle = {\n  position: 'absolute' as any,\n  top: '0',\n  width: '100%',\n  // height: '80%',\n  borderBottom: '2px solid gray',\n  backgroundColor: 'white',\n}\n\nconst configWrapper = {\n  margin: '10px'\n}\n\nconst menuBtnStyle = {\n  border: 'none',\n  background: 'transparent',\n  fontSize: '1.5em',\n  cursor: 'pointer',\n}\n\nconst listStyle = {\n  padding: '0',\n}\n\nconst itemStyle = {\n  listStyle: 'none',\n  marginBottom: '20px',\n}\n\nexport default class App extends Component<any, state> {\n  constructor (props : object) {\n    super(props)\n    \n    this.run = this.run.bind(this)\n    this.step = this.step.bind(this)\n    this.stepIn = this.stepIn.bind(this)\n    this.stepBack = this.stepBack.bind(this)\n    this.parseExpression = this.parseExpression.bind(this)\n    this.onExpressionChange = this.onExpressionChange.bind(this)\n    this.autoSave = debounce(this.autoSave.bind(this), 500)\n    this.getExpressionFromURL = this.getExpressionFromURL.bind(this)\n    this.updateFromURL = this.updateFromURL.bind(this)\n    this.addMacro = this.addMacro.bind(this)\n    this.removeMacro = this.removeMacro.bind(this)\n    this.getMacrosFromLocalStorage = this.getMacrosFromLocalStorage.bind(this)\n    this.clear = this.clear.bind(this)\n    this.validate = this.validate.bind(this)\n    this.onComparison = this.onComparison.bind(this)\n    this.__run = this.__run.bind(this)\n    this.stop = this.stop.bind(this)\n    this.addBreakpoint = this.addBreakpoint.bind(this)\n    this.shouldBreak = this.shouldBreak.bind(this)\n\n    window.addEventListener('hashchange', this.updateFromURL)\n\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n    \n    this.state = {\n      expression,\n      lines,\n      caretPosition : expression.length,\n      ast : null,\n      steps : 0,\n      previousReduction : null,\n      autoCloseParenthesis : false,\n      macroTable : this.getMacrosFromLocalStorage(),\n      menuOpen : false,\n      steping : false,\n      briefHistory : [],\n      isValidating : false,\n      running : false,\n      singleLetterVars : false, // TODO this.getConfigFromStorage(),\n      breakpoints : [],\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ ...this.state, ast : this.parseExpression(this.state.expression) })\n  }\n\n  render() {\n    const controlProps : ControlProps = {\n      run : this.run,\n      stop : this.stop,\n      step : this.step,\n      clear : this.clear,\n      validate : this.validate,\n      stepIn : this.stepIn,\n      stepBack : this.stepBack,\n      canRun : true,\n      canStepOver : true,\n      canStepIn : true,\n      canGoBack : true,\n      running : this.state.running,\n    }\n\n    const { ast, steps, expression, lines, caretPosition } = this.state\n\n    return (\n      <div className=\"App\">\n        {\n          this.state.menuOpen ?\n\n          <div style={ sidebarStyle }>\n            <button title='Close Menu' style={ menuBtnStyle } onClick={() => {\n              this.setState({ ...this.state, menuOpen : false })\n            }} >)(</button>\n            <div style={ configWrapper }>\n              <span style={ { fontSize: '1.3em' } } >Autocomplete parethesis</span>\n              <input type='checkbox' checked={ this.state.autoCloseParenthesis }\n              onChange={ _ => this.setState({ ...this.state, autoCloseParenthesis : !this.state.autoCloseParenthesis}) } />\n              <br />\n              <br />\n              <span style={ { fontSize: '1.3em' } } title='Write identifiers without spaces' >Single letter Identifiers</span>\n              <input type='checkbox' checked={ this.state.singleLetterVars }\n              onChange={ _ => this.setState({ ...this.state, singleLetterVars : !this.state.singleLetterVars}) } />\n              <br />\n              <br />\n              <UserMacros disabled={this.state.steping} macros={ this.state.macroTable } addMacro={ this.addMacro } removeMacro={ this.removeMacro } />\n            </div>\n          </div>\n\n          :\n\n          <button title='Open Menu' style={ menuBtnStyle } onClick={() => {\n            this.setState({ ...this.state, menuOpen : true })\n          }} >()</button>\n        }\n        <div style={ inputStyle }>\n        <InputField content={ expression } lines={ lines } caretPosition={ caretPosition }\n          onChange={ this.onExpressionChange }  />\n        <br />\n        <Controls { ...controlProps } />\n        <br />\n        Steps: { steps }\n        <br />\n        <br />\n        </div>\n        <div style={ resultStyle }>\n          {/* <Result tree={ ast } /> */}\n          {\n            this.state.isValidating\n              ?\n            <UserStep onComparison={ this.onComparison }/>\n              :\n            null\n          }\n          <ul style={ listStyle }>\n            {\n              this.state.briefHistory.map((ast, i) => {\n                return <li key={i} style={ i !== 0 ? { ...itemStyle, color: 'gray' } : itemStyle }>\n                {\n                  i === 0 ? <Result addBreakpoint={ this.addBreakpoint } tree={ ast } />\n                  : <Result tree={ ast } />\n                }\n                </li>\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  shouldBreak (breakpoint : Breakpoint, reduction : ASTReduction) : boolean {\n    if (reduction instanceof (breakpoint.type as any)\n        && reduction instanceof Beta && breakpoint.context instanceof Lambda\n        && reduction.target.identifier === breakpoint.context.body.identifier\n      ) {\n        return true\n    }\n    return false\n  }\n\n  __run () {\n    let { ast, expression, steps, previousReduction, briefHistory, running, breakpoints } = this.state\n    if ( ! running) {\n      return\n    }\n    \n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n    \n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n  \n    previousReduction = normal.nextReduction\n    if (normal.nextReduction instanceof None) {\n      // NOT CALL SETTIMEOUT AGAIN\n      briefHistory = [ast.clone()]\n\n      this.setState({\n        ...this.state,\n        ast,\n        steps,\n        previousReduction,\n        steping : false,\n        briefHistory,\n        isValidating : false,\n        running : false,\n      })\n\n      return\n    }\n\n    let index : number = 0\n    const breakpoint : Breakpoint | undefined = breakpoints.find(\n      (breakpoint : Breakpoint, id) =>\n        (index = id,\n        this.shouldBreak(breakpoint, normal.nextReduction))\n    )\n\n    if (breakpoint !== undefined) {\n      breakpoints.splice(index, 1)\n\n      this.setState({\n        ...this.state,\n        running : false,\n        steping : false,\n        breakpoints,\n      })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n    this.setState({\n      ...this.state,\n      ast,\n      steps,\n      previousReduction,\n      briefHistory : [ ast ],\n      isValidating : false,\n    })\n\n    window.setTimeout(this.__run, 10)    \n  }\n\n  run () {\n    if (this.state.previousReduction instanceof None) {\n      return\n    }\n    this.setState({ ...this.state, running : true, steping : true },\n      () => window.setTimeout(this.__run, 10))\n  }\n\n  stop () {\n    this.setState({ ...this.state, running : false })\n  }\n\n  step () {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n\n    if (ast === null || previousReduction instanceof None) {\n      return\n    }\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n    previousReduction = normal.nextReduction\n    if (normal.nextReduction instanceof None) {\n      this.setState({ ...this.state, steping : false, previousReduction, })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n    briefHistory.unshift(ast.clone())\n    briefHistory.length = Math.min(briefHistory.length, 5)\n\n    this.setState({\n      ...this.state,\n      ast,\n      steps,\n      previousReduction,\n      steping : true,\n      briefHistory,\n      isValidating : false,\n    })\n  }\n\n  clear () : void {\n    this.setState({\n      steps : 0,\n      previousReduction : null,\n      briefHistory: [],\n      steping: false,\n      isValidating : false,\n      breakpoints : [],\n    })\n  }\n\n  validate () : void {\n    if (this.state.previousReduction instanceof None) {\n      return\n    }\n\n    this.setState({ ...this.state, isValidating : true })\n  }\n\n  onComparison (userExpression : string) : void {\n    let { ast, expression, steps, previousReduction, briefHistory } = this.state\n    if (steps === 0) {\n      ast = this.parseExpression(expression)\n    }\n\n    // TODO: tohle se asi nestane - prozkoumat\n    // stane pokud nekdo chce kliknout na validaci kdyz neni nic napsany v inputu\n    // pripadne pokud nekdo chce kliknout na validaci kdyz uz neni co validovat myslim\n    if (ast === null || previousReduction instanceof None) {\n      this.setState({\n        ...this.state,\n        ast,\n        // steping : true,\n        isValidating : false,\n      })\n      return\n    }\n\n    const oldAst : AST | null = ast.clone()\n\n    const normal : NormalEvaluator = new NormalEvaluator(ast)\n\n    previousReduction = normal.nextReduction  \n    if (normal.nextReduction instanceof None) {\n      this.setState({ ...this.state, steping : false, isValidating : false })\n      return\n    }\n  \n    ast = normal.perform() // perform next reduction\n    steps++\n\n\n    // TODO: provest porovnani uzivatelskeho kroku a meho\n    // to znamena porovnani stromu vcetne vyznamu\n    // pokud nesedi, bude treba provest analyzu chyby\n    // zobrazit chybu\n    // pokracovat ve svem vyhodnocovani\n\n    const userAst : AST | null = this.parseExpression(userExpression)\n\n    if (userAst === null) {\n      console.error('User Input is INVALID λ expression.')\n      // TODO: put it in state\n      this.setState({\n        ...this.state,\n        ast,\n        // steping : true,\n        isValidating : false,\n      })\n      return\n    }\n\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n\n    // console.log(oldAst.clone())\n\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n    // console.log('-------------------------------------------------------------')\n\n\n    const treeComparator : TreeComparator = new TreeComparator([ oldAst.clone(), ast.clone(), userAst.clone() ])\n    if ( ! treeComparator.equals) {\n      console.error('User Input is INCCORECT.')\n      console.log('----------------------------------------------------')      \n      console.log(treeComparator.answers)\n      console.log('----------------------------------------------------')\n      \n      briefHistory.unshift(ast.clone())\n      briefHistory.length = Math.min(briefHistory.length, 5)\n      \n      this.setState({\n        ...this.state,\n        ast,\n        steps,\n        previousReduction,\n        // steping : true, // proc bych to tady daval true to neni duvod\n        briefHistory,\n        isValidating : false,\n      })\n    }\n    else {\n      console.log('User Input is CORRECT.')\n      \n      briefHistory.unshift(userAst.clone())\n      briefHistory.length = Math.min(briefHistory.length, 5)\n\n      this.setState({\n        ...this.state,\n        ast : userAst,\n        steps,\n        previousReduction,\n        // steping : true, // proc bych to tady daval true to neni duvod\n        briefHistory,\n        isValidating : false,\n      })\n    }\n\n    \n  }\n\n  stepIn () {\n\n  }\n\n  stepBack () {\n\n  }\n\n  onExpressionChange (event : ChangeEvent<HTMLTextAreaElement>) : void  {\n    const { autoCloseParenthesis,  } : state = this.state\n    let { target : { value : expression } } : { target : { value : string } } = event\n    const lines : number = expression.split('\\n').length\n    const caretPosition : number = event.target.selectionEnd\n\n    expression = expression.replace(/\\\\/g, 'λ')\n    \n    // TODO: if current and expression differs only at last char\n    // and this char is `(` then append `)` and put carret before `)`\n    if (autoCloseParenthesis\n        &&\n        expression.charAt(caretPosition - 1) === '('\n    ) {\n      expression = expression.slice(0, caretPosition) + ')' + expression.slice(caretPosition)\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.autoSave(expression)\n    this.setState({\n      expression,\n      lines,\n      ast,\n      briefHistory: [],\n      steps : 0,\n      previousReduction : null,\n      caretPosition,\n      isValidating : false,\n      breakpoints : [],\n    })\n  }\n\n  autoSave (expression : string) : void {\n    const encoded : string = encodeURI(expression)\n\n    window.location.hash = encoded\n  }\n\n  parseExpression (expression : string) : AST | null {\n    const { singleLetterVars } = this.state\n    try {\n      const tokens : Array<Token> = tokenize(expression, { lambdaLetters : ['λ', '~'], singleLetterVars })\n      const ast : AST = parse(tokens, this.state.macroTable)\n\n      console.log('successfuly parsed')\n\n      return ast\n    }\n    catch (exception) {\n      console.log('Something went wrong')\n      console.error(exception)\n      return null\n    }\n  }\n\n  getExpressionFromURL () : string {\n    const expression : string = decodeURI(window.location.hash.substring(1))\n    return expression\n  }\n\n  getMacrosFromLocalStorage () : MacroMap {\n    const usefulMacros : MacroMap = {\n      fact : '(Y (λ f n . (<= n 1) 1 (* n (f (- n 1)))))',\n      facct : '(λ n . (Y (λ f n a . IF (= n 1) a (f (- n 1) (* n a)))) (- n 1) (n))',\n      fib : '(Y (λ f n . (= n 0) 0 ((= n 1) 1 ( + (f (- n 1)) (f (- n 2))))))',\n      inflist : '(λ n . (Y (λ x . (λ f s g . g f s) n x)))',\n      SHORTLIST : 'CON 3 (CONS 5 (CONS 1 NIL))',\n      LONGLIST :  '(CONS 3 (CONS 5 (CONS 1 (CONS 10 (CONS 7 (CONS 2 (CONS 4 (CONS 9 (CONS 4 (CONS 6 (CONS 8 NIL)))))))))))',\n      LISTGREQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (>= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTLESS : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (< (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTGR : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (> (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      LISTEQ : 'Y (λ fn piv list . IF (NULL list) (NIL) ( IF (= (FIRST list) piv) (CONS (FIRST list) (fn piv (SECOND list))) (fn piv (SECOND list)) ) )',\n      CONNECT : 'Y (λ fn listA listB . IF (NULL listA) (listB) (CONS (FIRST listA) (fn (SECOND listA) listB)))',\n      QUICKSORT : 'Y (λ fn list . IF (NULL list) (NIL) ( IF (NULL (SECOND list)) (list) ( CONNECT (fn (LISTLESS (FIRST list) list)) ( CONNECT (LISTEQ (FIRST list) list) (fn (LISTGR (FIRST list) list)) ) ) ) )',\n    }\n\n    const userMacros : MacroMap = JSON.parse(window.localStorage.getItem('macrotable') || '{}')\n\n    return { ...usefulMacros, ...userMacros }\n  }\n\n  updateFromURL () : void {\n    const { expression : currentExpr } : state = this.state\n    const expression : string = this.getExpressionFromURL()\n    const lines : number = expression.split('\\n').length\n\n    if (currentExpr === expression) {\n      // breaking cyclic update\n      console.log('ALREADY SYNCED')\n      return\n    }\n\n    const ast : AST | null = this.parseExpression(expression)\n\n    this.setState({ expression, lines, ast, steps : 0, previousReduction : null })\n  }\n\n  addMacro (name : string, definition : string) : void {\n    // TODO: fix\n    const macroTable = { ...this.state.macroTable, [name] : definition }\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  removeMacro (name : string) : void {\n    const macroTable = { ...this.state.macroTable }\n    delete macroTable[name]\n\n    this.setState({ ...this.state, macroTable })\n    window.localStorage.setItem('macrotable', JSON.stringify(macroTable))\n  }\n\n  addBreakpoint (breakpoint : Breakpoint) : void {\n    this.setState({\n      ...this.state,\n      breakpoints : [ ...this.state.breakpoints, breakpoint ],\n    })\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}